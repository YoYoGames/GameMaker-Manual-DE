<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Aktionsblock-Skriptfunktionen</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Article explaining how to make action block script functions" />
  <meta name="rh-index-keywords" content="GML Visual Overview - Action Block Script Functions" />
  <meta name="search-keywords" content="GML Visual Scripts" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Aktionsblock-Skriptfunktionen</h1>
  <p>Eines der wichtigsten Assets im <a href="../../Introduction/The_Asset_Browser.htm">Asset-Browser</a> ist das <a href="../../The_Asset_Editors/Scripts.htm">Skript-Asset</a>. <span class="notranslate">Scripts</span> ist insofern ein besonderes Asset, als es im Wesentlichen ein &quot;Container&quot; für benutzerdefinierte Funktionen ist und selbst nicht direkt von Ihnen im Spiel aufgerufen wird. Alle <span class="notranslate">scripts</span> sind <strong>global</strong> und werden automatisch von <span class="notranslate">GameMaker</span> ausgeführt, wenn Ihr Spiel startet. Sie können sie also verwenden, um globale Variablen und Funktionen zu definieren, die Sie in Ihrem Spiel verwenden möchten.</p>
  <p>Zu jedem <span class="notranslate">GML</span> Visual <span class="notranslate">script</span> können eine oder mehrere benutzerdefinierte Funktionen hinzugefügt werden. Diese Funktionen werden mit der Aktion <a href="../Drag_And_Drop_Reference/Common/Declare_A_New_Function.htm">Neue Funktion deklarieren</a> erstellt:</p>
  <p><img>Die Funktionen, die Sie hier definieren, haben einen globalen Geltungsbereich und verhalten sich ähnlich wie alle eingebauten <span class="notranslate">GML</span> Visual-Aktionen, d.h. sie können verschiedene Werte - oder auch gar keine - als<span class="glossextra">Argumente</span> (oder Parameter) annehmen und dann eine Aufgabe ausführen und je nach Bedarf einen Wert oder nichts zurückgeben. Sie würden dann die Funktion in Ihren Spielen mit der Aktion <a href="../Drag_And_Drop_Reference/Common/Function_Call.htm">Funktionsaufruf</a> <img> aufrufen, die wie folgt aussieht:</p>
  <p><img>Um ein <span class="notranslate">GML</span> Visual <span class="notranslate">script</span> zu erstellen, drücken Sie einfach die rechte Maustaste <img> irgendwo im Asset-Browser und wählen Sie <strong>Erstellen </strong>und dann <strong>Skript</strong>. Dadurch wird ein neues <span class="notranslate">GML</span> Visual <span class="notranslate">script</span> erstellt und das Editorfenster geöffnet:</p>
  <p><img>Sie können <span class="notranslate">script</span> einen Namen geben, indem Sie im Asset-Browser mit der rechten Maustaste auf <img> klicken und &quot; <strong>Umbenennen&quot; </strong> wählen (oder indem Sie einen langsamen Doppelklick mit der linken Maustaste auf <img> ausführen). Beachten Sie jedoch, dass der Name <span class="notranslate">script</span> den allgemeinen Regeln für Assets entsprechen muss, d. h. er muss mit einem Buchstaben beginnen und darf nur Buchstaben, Zahlen oder das Unterstrichsymbol &quot;_&quot; enthalten. Ihre <span class="notranslate">script</span> wird auch mit einer Aktion <strong>"Neue Funktion deklarieren"</strong> vorausgefüllt, damit Sie sie ausfüllen können, und Sie können bei Bedarf weitere Funktionsdeklarationen hinzufügen (eine einzelne <span class="notranslate">script</span> kann mehrere Funktionen enthalten, was nützlich ist, um Funktionen mit ähnlicher oder verbundener Verwendung zusammenzufassen).</p>
  <p>Wie bereits erwähnt, können Sie eine Reihe von <span class="notranslate">arguments</span> an eine Funktion übergeben, die dann die Aufgabe ausführt, für die Sie sie geschrieben haben. Um dies besser zu verstehen, nehmen Sie - zum Beispiel - eine der eingebauten Aktionen und denken Sie darüber nach, wie sie funktioniert... Sie platzieren sie in einem Ereignis und geben eine Reihe von Werten an, und sie wird Ihre Instanz etwas tun lassen. Benutzerdefinierte Funktionen sind genau dasselbe, mit dem einzigen Unterschied, dass <em>Sie </em>sie selbst schreiben.</p>
  <p>Wenn Sie eine neue Funktion definieren, geben Sie ihr einen Namen und legen auch den Namen aller <span class="notranslate">arguments</span> fest, die sie annimmt, falls sie welche annimmt (Funktionen können keine <span class="notranslate">arguments</span> oder mehrere <span class="notranslate">arguments</span> annehmen, je nachdem, was Sie benötigen). Wenn Sie <span class="notranslate">argument</span> Namen geben, werden diese in den Aktionen, die die Funktion aufruft, als <strong>lokale Variablen </strong>verwendet, die die Eingabewerte der Funktion enthalten.</p>
  <p>Es ist auch eine gute Praxis, einen Kommentar für die Aktion hinzuzufügen, der erklärt, was sie tut, gemäß den <a href="../../The_Asset_Editors/Code_Editor_Properties/JSDoc_Script_Comments.htm">JS Doc-Regeln</a>. Nehmen wir zum Beispiel diese Funktion <span class="inline">set_vec()</span>:</p>
  <p><img>Um die obige <span class="notranslate">script</span> aufzurufen, verwenden Sie einfach die Aktion <strong>Funktion aufrufen</strong>, etwa so:</p>
  <p><img>Sie können nicht nur <span class="notranslate">arguments</span> an eine Funktion übergeben, sondern auch eine Funktion auffordern, einen Wert zurückzugeben (mit der Aktion <a href="../Drag_And_Drop_Reference/Common/Return.htm">Return</a> <img> ), so dass Sie sie z. B. zum Aufbau von Berechnungsmethoden oder zur Rückgabe einer Instanz-ID nach einer komplexen Kollisionserkennung oder für eine Reihe anderer Dinge verwenden können. Beachten Sie jedoch, dass die Verwendung von Return die <strong>Funktion beendet</strong> und somit keine Aktionen ausgeführt werden, die nach der Verwendung der Funktion platziert werden. Dies bedeutet, dass Sie sich Gedanken darüber machen müssen, wie Ihre Funktionen strukturiert sind.</p>
  <p>Nachfolgend finden Sie eine <span class="notranslate">GML</span> Visual-Funktion, die einen Wert zurückgibt:</p>
  <p><img alt="Declare A New Function Syntax" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Common/a_Common_Declare_Function.png" /></p>
  <p>Die obige Funktion prüft einfach alle Instanzen in einem Raum, um zu sehen, was ihr <span class="inline">object_index</span> ist, und wenn eine von ihnen das Spielerobjekt ist, gibt die Funktion <span class="inline">true</span> (was den Funktionsaufruf beendet) oder <span class="inline">false</span> zurück. Sie würden diese Funktion wie folgt aufrufen:</p>
  <p><img>Wir rufen also die Funktion auf und lassen sie eine temporäre (lokale) Variable erstellen, um den zurückgegebenen Wert zu speichern (der in diesem Fall entweder <span class="inline">true</span> oder <span class="inline">false</span> ist), und dann wird diese Variable überprüft und eine Aktion durchgeführt.</p>
  <p>Sie können <span class="notranslate">arguments</span> auch optional machen und einen Standardwert definieren, so dass, falls sie in einem Funktionsaufruf nicht angegeben werden, stattdessen der Standardwert verwendet wird. Weitere Informationen finden Sie im <a data-xref="{text}" href="../Drag_And_Drop_Reference/Common/Declare_A_New_Function.htm#h">erweiterten Beispiel 2</a> der Aktion.</p>
  <p>Wenn Sie Funktionen für Ihre <span class="notranslate">GML</span> Visual <span class="notranslate">scripts</span> erstellen, können Sie dieselben Aktionen verwenden, die Sie auch beim Hinzufügen von Aktionen zu einem Objektereignis verwenden würden, und Sie können sogar Funktionen innerhalb von Funktionen aufrufen und auf diese Weise eine &quot;modularere&quot; Aktion <span class="notranslate">code</span> erstellen. Die Erstellung von <span class="notranslate">scripts</span> mit Funktionen auf diese Weise kann Ihnen viel Zeit bei der Erstellung derselben Aktion <span class="notranslate">sequences</span> ersparen und auch dazu beitragen, dass Ihre Aktion <span class="notranslate">sequences</span> leichter zu lesen und einfacher zu debuggen ist.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../../Content.htm">Index</a></div>
        <div style="float:right">Weiter: <a href="Changing_DnD_To_Code.htm">Ändern von <span class="notranslate">GML</span> Visual in Code</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
GML Visual Scripts
-->
  <!-- TAGS
drag_and_drop_scripts
-->
</body>
</html>