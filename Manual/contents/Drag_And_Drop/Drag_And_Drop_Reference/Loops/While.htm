<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Während</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains the While action" />
  <meta name="rh-index-keywords" content="GML Visual Action - While" />
  <meta name="search-keywords" content="While" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><img> Während</h1>
  <p>Die <b>While-Aktion</b> wird verwendet, um <span class="notranslate">loops</span> auszuführen, die nur beendet wird, wenn eine bestimmte Bedingung zurückkommt <span class="inline">true</span>. Sie können z. B. eine Variable verwenden und sie auf <span class="inline">false</span> setzen, dann die While-Aktion <span class="notranslate">loop</span> ausführen und diese Variable überprüfen lassen.
    zu einem bestimmten Zeitpunkt in <span class="notranslate">loop</span> die Variable auf <span class="inline">true</span> setzen und <span class="notranslate">loop</span> wird beendet. Beachten Sie, dass unabhängig davon, wo Sie die Bedingung innerhalb der while <span class="notranslate">loop</span> setzen, <i>alle</i> Aktionen innerhalb der <span class="notranslate">loop</span> bis zum Ende ausgeführt werden, bevor der Rest des Skripts
    Wenn Sie die Bedingung ändern, wird die <span class="notranslate">loop</span> nicht sofort abgebrochen.</p>
  <p>Wenn Sie eine While-Aktion in Ihre <span class="notranslate">code</span> einfügen, müssen Sie die zu prüfende Variable, die Art der Prüfung (kleiner als, größer als, gleich usw.) und den Wert, gegen den die Variable geprüft werden soll, angeben (Sie können auch festlegen, <i>dass</i> die While
    <span class="notranslate">loop</span> Prüfung, um zu sehen, ob die Bedingung <i>nicht</i> wahr ist). Anschließend fügen Sie die auszuführenden Aktionen in die While-Anweisung <span class="notranslate">loop</span> ein, ähnlich wie Sie eine Aktion zu einem &quot;if&quot; hinzufügen würden, d. h. Sie fügen sie neben der Aktion ein und nicht unter ihr:</p>
  <p><img>Alle Aktionen, die der Seite hinzugefügt werden, werden in das "While" aufgenommen und ausgeführt, bevor das Ereignis oder Skript
    mit den darunter hinzugefügten Aktionen fortfährt (wie im folgenden Beispiel gezeigt). Beachten Sie, dass Sie jede <span class="notranslate">loop</span> vorzeitig beenden können, wenn Sie die <a href="Break.htm">Break-Aktion</a> aufrufen.</p>
  <p> </p>
  <h4>Aktion Syntax:</h4>
  <p><img alt="While Icon" class="icon" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Loops/i_Loops_While.png" /></p>
  <h4>Argumente:</h4>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">Variable</span></td>
        <td>Die für die Prüfung zu verwendende Variable</td>
      </tr>
      <tr>
        <td><span class="notranslate">Is</span></td>
        <td>Die Art der durchzuführenden Bewertung (kleiner als, größer als, gleich, größer oder gleich und kleiner oder gleich)</td>
      </tr>
      <tr>
        <td><span class="notranslate">Value</span></td>
        <td>Der Wert, gegen den die Variable geprüft wird</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Beispiel:</h4>
  <p><img>Der obige Aktionsblock <span class="notranslate">code</span> erstellt eine temporäre lokale Variable und setzt sie auf <span class="inline">false</span>. Diese Variable wird
    wird dann in der Aktion While <span class="notranslate">loop</span> überprüft, und solange sie false zurückgibt, wird <span class="notranslate">loop</span> ausgeführt. In <span class="notranslate">loop</span> erhalten wir zwei temporäre lokale Variablen für eine zufällige x/y-Position im Raum und überprüfen dann diese Position auf eine Kollision. Wenn keine Kollision gefunden wird, wird die ursprüngliche
    Variable auf <span class="inline">true</span> gesetzt, wodurch <span class="notranslate">loop</span> beendet wird. Nachdem <span class="notranslate">loop</span> beendet wurde, wird eine neue Instanz an der zufälligen Position erstellt, die keine Kollisionen aufweist.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Loop_Actions.htm">Schleifen-Aktionen</a></div>
        <div style="float:right">Nächste: <a href="For.htm">Für</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Action - While
-->
  <!-- TAGS
action_while_loop
-->
</body>
</html>