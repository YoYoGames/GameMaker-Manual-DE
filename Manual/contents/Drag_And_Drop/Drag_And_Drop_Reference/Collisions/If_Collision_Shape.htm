<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Wenn Kollisionsform</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains the If Collision Shape action" />
  <meta name="rh-index-keywords" content="GML Visual Action - If Collision Shape" />
  <meta name="search-keywords" content="If Collision Shape" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><img> Wenn Kollisionsform</h1>
  <p>Diese Aktion wird verwendet, um zu prüfen, ob eine Kollision mit einer Instanz eines bestimmten Objekts innerhalb eines bestimmten geformten Bereichs oder entlang einer Linie vorliegt. Sie geben die Form (Rechteck, Ellipse oder Linie) und das zu prüfende Objekt an und geben dann die Koordinaten für
    die obere linke und die untere rechte Ecke der verwendeten Form bzw. im Falle einer Linie die Start- und Endposition. Dabei kann es sich um absolute Positionen innerhalb des Spielraums oder um Positionen relativ zu der Instanz handeln, die die Aktion ausführt. Du kannst sehen, wie
    wie das funktioniert, siehst du im folgenden Bild:</p>
  <p><img>Wie Sie sehen können, hängen die Ergebnisse von der Kollisionsmaske der Instanz ab
    Das bedeutet, dass die Instanz des gesuchten Objekts eine <span class="notranslate">sprite</span> haben <i>muss</i>, die der <span class="inline">sprite_index</span> zugewiesen ist, oder eine <span class="notranslate">sprite</span>, die der <span class="inline">mask_index</span> zugewiesen ist. Wenn dies nicht der Fall ist, wird sie von diesen Funktionen nicht erkannt,
    unabhängig davon, ob es ein <span class="notranslate">sprite</span> zeichnet oder nicht. Es ist erwähnenswert, dass jede Instanz, die vollständig innerhalb der für die Ellipsen- oder Rechteckform festgelegten Grenzen liegt, ebenfalls eine Kollision zurückgibt. Die Aktion wird auf <span class="inline">true</span> ausgewertet, wenn
    eine Kollision erkannt wird, oder <span class="inline">false</span> andernfalls, obwohl Sie auch das <b>Not-Flag</b> überprüfen können, um zu prüfen, ob es <i>keine</i> Kollision mit dem angegebenen geformten Bereich gibt, und die Aktion wird dann nur als <span class="inline">true</span> ausgewertet, wenn <i>keine</i> Kollisionen
    gefunden werden, andernfalls wird sie als <span class="inline">false</span> ausgewertet. Sie können auch die Option <b>Exclude Self</b> setzen, um die aufrufende Instanz von der Kollisionsprüfung auszuschließen.</p>
  <p>Als nächstes können Sie die Option " <b>Liste zurückgeben"</b> aktivieren/deaktivieren. Wenn Sie diese Option aktivieren, erstellt und füllt die Aktion eine Datenstruktur<span> </span>mit <i>allen Instanzen</i>, die mit der Form kollidieren.
    mit der Form und setzt die <b>Zielvariable</b> auf die DS-Listen-ID. Wenn die Option nicht aktiviert ist, wird die Variable <b>Target</b> nur dann auf einen Wert kleiner als 0 gesetzt, wenn keine Kollision erkannt wurde, oder auf den eindeutigen ID-Wert <i>einer</i> der Instanzen in der Kollision
    (Beachten Sie, dass Sie bei einer Kollision mehrerer Instanzen nicht wissen können, welche Instanz-ID zurückgegeben wird, wenn Sie keine Liste verwenden).</p>
  <p>Wenn Sie sich für die Rückgabe einer Liste entschieden haben - und die Zielvariable <i>nicht</i> auf <b>Temp</b> gesetzt ist -, können Sie auch die Option <b>Free Target</b> wählen. Wenn diese auf <span class="inline">true</span> gesetzt ist, wird die in der Zielvariablen enthaltene Liste zerstört und
    eine neue Liste erstellt (und an die Zielvariable zurückgegeben), wenn Sie die Aktion aufrufen. Auf diese Weise können Sie dieselbe Variable wiederverwenden, ohne sich Gedanken über Speicherlecks zu machen, denn wenn Sie die Option <b>Free Target</b> <i>nicht</i> aktivieren, sind Sie dafür verantwortlich
    für das Löschen der Liste verantwortlich, bevor Sie die Variable erneut in der Aktion verwenden. Beachten Sie, dass <i>unabhängig</i> davon, ob diese Option aktiviert ist oder nicht, die Zielvariable <i>immer eine Listen-ID enthält</i>, wenn Sie die Aktion auf <b>Liste zurückgeben</b> eingestellt haben,
    und als solche muss diese freigegeben werden wenn die Instanz zerstört wird oder der Raum endet (du kannst das <a href="../../../The_Asset_Editors/Object_Properties/Object_Events.htm"><b>Aufräumen</b></a> Ereignis zusammen mit der Aktion <a href="../Data_Structures/Free_Data_Structure.htm">Datenstruktur freigeben</a><span> </span>).
    Es ist erwähnenswert, dass du die Option <b>"Free Target"</b> so einstellen kannst, dass eine vordefinierte Variable oder ein Ausdruck verwendet wird und du so steuern kannst, wann die Listendatenstruktur freigegeben wird, indem du die Variable an anderer Stelle setzt (oder verschiedene Ergebnisse für den Ausdruck hast)
    solange der Ausdruck den Wert <span class="inline">true</span>/<span class="inline">false</span> hat.</p>
  <p>Schließlich geben Sie die <b>Zielvariable</b> an, die den zurückgegebenen Wert oder die Listen-ID enthalten soll. Wenn Sie die Zielvariable, die den zurückgegebenen Wert enthalten soll, als <b>Temp-Variable</b> (lokale Variable) kennzeichnen, erstellt die Aktion diese Variable, um den
    In diesem Fall hat die Option "Free Target" keine Auswirkung und Sie sind für die Zerstörung der DS-Liste verantwortlich, wenn diese Option aktiviert wurde. Wenn keine Zielvariable angegeben wird und die Option <b>Rückgabeliste</b> aktiviert ist, wird keine Liste erstellt.</p>
  <p class="note"><b>WICHTIG!</b> Kollisionen werden nur für die Instanzen registriert, die eine gültige Kollisionsmaske haben, d.h. sie haben eine <span class="notranslate">sprite</span>, die der <span class="inline">sprite_index</span> zugeordnet ist, oder eine <span class="notranslate">sprite</span>, die der <span class="inline">mask_index</span> zugeordnet ist. Wenn die Instanzen des Objekts, das in dieser Aktion
    überprüft werden, keine Kollisionsmaske haben, wird die Kollision nicht erkannt, unabhängig davon, was die Instanz zu diesem Zeitpunkt zeichnet.</p>
  <p>Beachten Sie, dass Sie Aktionen in einen &quot;<span class="inline">if</span>&quot; Block einfügen können, indem Sie sie <i>neben</i> der Aktion ablegen, wie in der folgenden Abbildung gezeigt:</p>
  <p><img alt="If Collision Shape Icon" class="icon" height="32" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Collisions/i_Collision_Shape.png" width="32" /></p>
  <p> </p>
  <h4>Aktion Syntax:</h4>
  <p><img alt="Example of different collision shapes" class="center" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Collisions/collision_shape_example.png" /></p>
  <h4>Argumente:</h4>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">Shape</span></td>
        <td>Die zu verwendende Form</td>
      </tr>
      <tr>
        <td><span class="notranslate">Object</span></td>
        <td>Das zu prüfende Objekt für Instanzen von</td>
      </tr>
      <tr>
        <td><span class="notranslate">x1</span></td>
        <td>Die x-Position, von der aus gestartet werden soll</td>
      </tr>
      <tr>
        <td><span class="notranslate">y1</span></td>
        <td>Die y-Position, von der aus gestartet werden soll</td>
      </tr>
      <tr>
        <td><span class="notranslate">x2</span></td>
        <td>Die x-Position, an der das Programm enden soll</td>
      </tr>
      <tr>
        <td><span class="notranslate">y2</span></td>
        <td>Die y-Position, an der Sie enden sollen</td>
      </tr>
      <tr>
        <td><span class="notranslate">Free Target</span></td>
        <td>Kann auf eine Variable oder einen Ausdruck oder auf <span class="inline">true</span>/<span class="inline">false</span> gesetzt werden, um das Freigeben des Listenspeichers bei der Wiederverwendung einer Listenvariablen zu steuern</td>
      </tr>
      <tr>
        <td><span class="notranslate">Target</span></td>
        <td>Die Zielvariable für den Rückgabewert der Aktion</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Beispiel:</h4>
  <p><img>Der obige Aktionsblock <span class="notranslate">code</span> prüft auf eine Kollision mit allen Instanzen des Objekts &quot;
   <span class="inline">obj_Enemy</span>&quot; innerhalb eines Kreises von 100px um die Position der aufrufenden Instanz. Die Aktion erzeugt eine Liste aller Instanzen, bei denen eine Kollision festgestellt wurde, und speichert die ID der Liste in der Variablen Target. Wenn die Aktion den Wert
    <span class="inline">true</span> auswertet, wird die Liste in einer Schleife durchlaufen und für jede Instanz, deren ID in der Liste gespeichert ist, wird die Variable &quot;<span class="inline">hp</span>&quot; um 1 reduziert. Die DS-Liste wird dann freigegeben.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Collision_Actions.htm">Kollisionshandlungen</a></div>
        <div style="float:right">Nächste: <a href="If_Collision_Point.htm">Wenn Kollisionspunkt</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Action - If Collision Shape
-->
  <!-- TAGS
action_if_collision_shape
-->
</body>
</html>