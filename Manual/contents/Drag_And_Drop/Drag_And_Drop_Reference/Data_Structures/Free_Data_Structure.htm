<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Freie Datenstruktur</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains the Free Data Structure action" />
  <meta name="rh-index-keywords" content="GML Visual Action - Free Data Structure" />
  <meta name="search-keywords" content="Free Data Structure" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><img> Freie Datenstruktur</h1>
  <p>Diese Aktion gibt die Datenstruktur aus dem Speicher frei und sollte immer dann aufgerufen werden, wenn eine Datenstruktur nicht mehr benötigt wird, z.B. im Destroy-Event einer Instanz oder dem Room-End-Event, etc... Das Freigeben einer Datenstruktur bedeutet, dass keine weiteren Aktionen
    verwendet werden können, da sie nicht mehr existiert, obwohl man dies auch mit der Aktion <a href="If_Data_Structure_Exists.htm">If Data Structure Exists</a> überprüfen kann.</p>
  <p>Beachten Sie, dass die Datenstruktur nicht von einem Raum in einen anderen übertragen wird, es sei denn, sie hat einen Index, der einer Variablen des globalen Bereichs zugewiesen ist. Wenn du zum Beispiel eine Player-Instanz erstellst und eine Listen-Datenstruktur einer Variablen in dieser Instanz zugewiesen wird,
    muss die Liste freigegeben werden, wenn der Spieler zerstört wird <i>oder</i> wenn sich der Raum ändert, in dem sich die Spielerinstanz befindet (es sei denn, die Spielerinstanz ist als persistent gekennzeichnet), so dass die Spielerinstanz zwei Datenstrukturfreigabeaktionen für
    diese beiden Ereignisse. Es ist wichtig, dass alle erstellten Datenstrukturen auf diese Weise zerstört werden, wenn sie nicht mehr benötigt werden, um Speicherlecks zu vermeiden, die zu Leistungsproblemen oder sogar zum Absturz des Spiels führen können.</p>
  <p> </p>
  <h4>Aktion Syntax:</h4>
  <p><img alt="Free Data Structure Icon" class="icon" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Data_Structures/i_DS_Free_Data_Structure.png" /></p>
  <h4>Argumente:</h4>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">Type</span></td>
        <td>den Typ der Datenstruktur, die Sie freigeben (Liste, Karte, Gitter oder Stapel)</td>
      </tr>
      <tr>
        <td><span class="notranslate">Variable</span></td>
        <td>Die Variable, die den Index der freizugebenden Datenstruktur enthält</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Beispiel:</h4>
  <p><img>Der obige Aktionsblock <span class="notranslate">code</span> ermittelt die Größe der Liste, auf die in der globalen
    referenziert wird, und verwendet dann ein for <span class="notranslate">loop</span>, um die Liste <span class="notranslate">loop</span> zu durchlaufen und die Instanzen mit den in der Liste gespeicherten IDs zu zerstören. Nachdem <span class="notranslate">loop</span> fertig ist, wird die Liste aus dem Speicher freigegeben.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Data_Structure_Actions.htm">Datenstruktur-Aktionen</a></div>
        <div style="float:right">Nächste: <a href="Add_To_List.htm">Zur Liste hinzufügen</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Action - Free Data Structure
-->
  <!-- TAGS
action_ds_free
-->
</body>
</html>