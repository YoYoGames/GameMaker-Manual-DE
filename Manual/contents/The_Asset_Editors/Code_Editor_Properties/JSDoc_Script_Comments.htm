<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>JSDoc-Skript Kommentare</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains how JSDoc Script Comments work" />
  <meta name="rh-index-keywords" content="Code Editor - JSDoc Comments,JSDoc" />
  <meta name="search-keywords" content="JSDoc,JSDoc Comments" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>JSDoc <span class="notranslate">Script</span> Kommentare</h1>
  <p>Wenn Sie möchten, dass Ihre benutzerdefinierten Funktionen über <span class="notranslate">code</span> vervollständigt werden und die erforderliche <span class="notranslate">arguments</span> in einer bestimmten Weise im <span class="notranslate">code</span> Editor angezeigt wird, müssen Sie einige <a href="https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html">JSDoc-artige</a> Kommentare hinzufügen. Diese Kommentare werden verwendet, um der Autovervollständigungsfunktion mitzuteilen, wie die Funktion im <a href="../Scripts.htm">Skripteditor</a> verwendet und ausgefüllt werden soll.</p>
  <p>Das Format für einen typischen Funktionskopf wäre der Funktionsname, die Beschreibung der Funktion und dann die Liste der verschiedenen <span class="notranslate">arguments</span> (Parameter), die die Funktion benötigt. Stellen Sie sicher, dass jede Zeile mit einem dreifachen Backslash &quot;<span class="inline">///</span>&quot; beginnt, da dies <span data-keyref="GameMaker Name">GameMaker</span> anweist, den Kommentar als JSDoc-Kommentar zu interpretieren. Alternativ kannst du deine JSDoc-Kommentare auch in <span class="inline">/**</span>... <span class="inline">*/</span>, wobei <span class="inline">/**</span> in einer eigenen Zeile steht.</p>
  <p>Die Kommentare selbst müssen mit einem Bezeichner (mit vorangestelltem &quot;<span class="inline">@</span>&quot;) und einem Inhalt versehen werden, wobei folgende Bezeichner zur Verfügung stehen</p>
  <table>
    <colgroup>
      <col style="width: 306px;" />
      <col style="width: 488px;" />
      <col style="width: 487px;" />
    </colgroup>
    <tbody>
      <tr>
        <th>Kennung</th>
        <th>Inhalt</th>
        <th>Syntax</th>
      </tr>
      <tr>
        <td><span class="inline">@function</span> / <span class="inline">@func</span></td>
        <td>Der vollständige Funktionsname einschließlich der Argumente</td>
        <td><span class="inline">@func my_func(args)</span></td>
      </tr>
      <tr>
        <td><span class="inline">@description</span> / <span class="inline">@desc</span></td>
        <td>Eine allgemeine Beschreibung, was die Funktion tut</td>
        <td><span class="inline">@desc &lt;Description goes&gt;</span></td>
      </tr>
      <tr>
        <td><span class="inline">@param</span> / <span class="inline">@</span><span class="inline">parameter</span> / <span class="inline">@arg</span> / <span class="inline">@argument</span></td>
        <td>Informationen über <span class="notranslate">arguments</span>, mit einer optionalen <a href="Feather_Data_Types.htm"><span class="notranslate">type</span></a></td>
        <td><span class="inline">@param <em>{type}</em> name &lt;Parameter description&gt;</span></td>
      </tr>
      <tr>
        <td><span class="inline">@return / @returns</span></td>
        <td><a href="Feather_Data_Types.htm">Art</a> der Daten, die die Funktion zurückgibt</td>
        <td><span class="inline">@return {type} &lt;Return description&gt;</span></td>
      </tr>
      <tr>
        <th colspan="3">Nur<a href="../../Setting_Up_And_Version_Information/IDE_Preferences/Feather_Settings.htm">Federn</a> </th>
      </tr>
      <tr>
        <td><span class="inline">@url</span></td>
        <td>URL for the function, opens when you press <span class="shortcut">F1</span> on the function name or use the <strong>RMB -&gt; Go To Declaration</strong> option.</td>
        <td><span class="inline">@url https://...</span></td>
      </tr>
      <tr>
        <td><span class="inline">@pure</span></td>
        <td>Markiert die Funktion als <a class="glossterm" data-glossterm="rein" href="#">rein</a></td>
        <td><span class="inline">@pure</span></td>
      </tr>
      <tr>
        <td style=""><span class="inline">@ignore</span></td>
        <td style="">Blendet die Funktion aus der Autovervollständigung von Feather aus</td>
        <td><span class="inline">@ignore</span></td>
      </tr>
      <tr>
        <td style=""><span class="inline">@deprecated</span></td>
        <td style="">Markiert die Funktion als veraltet</td>
        <td><span class="inline">@deprecated</span></td>
      </tr>
      <tr>
        <td style=""><span class="inline">@context / @self</span></td>
        <td style="">Legt den Kontext für die Funktion fest, die Feather Auto-Vervollständigung verwendet, um Kontextinformationen zu liefern. Kann ein Objekt oder ein Konstruktor sein.</td>
        <td><span class="inline">@self &lt;object&gt;</span></td>
      </tr>
      <tr>
        <th colspan="3" style=""><span data-keyref="Code_Editor1_Name">Legacy Code Editor</span> only</th>
      </tr>
      <tr>
        <td><span class="inline">@function</span> / <span class="inline">@func</span></td>
        <td>The full function name including arguments</td>
        <td><span class="inline">@func my_func(args)</span></td>
      </tr>
    </tbody>
  </table>
  <p>Wenn Sie keinen Typ für <span class="notranslate">arguments</span> oder den Rückgabewert angegeben haben und <a href="../../Setting_Up_And_Version_Information/IDE_Preferences/Feather_Settings.htm">Feather</a> verwenden, wird automatisch ein Datentyp auf der Grundlage des Funktionskörpers angenommen.</p>
  <p>Siehe Informationen über Datentypen für <span class="inline">@param</span> und <span class="inline">@return</span> auf <a href="Feather_Data_Types.htm">Feather Data Types</a>.</p>
  <h2>Beispiele</h2>
  <p>Um eine Vorstellung davon zu bekommen, wie dies beim Schreiben Ihrer eigenen Funktionen funktionieren würde, nehmen wir dieses einfache Beispiel:</p>
  <p class="code">function is_same_object(_id, _obj)<br />
    {<br />
        if (_id.object_index == _obj)<br />
        {<br />
            return true;<br />
        }<br />
        else return false;<br />
    }</p>
  <p>Alles, was dieses <span class="notranslate">script</span> tut, ist zu überprüfen, ob eine Instanz die gleiche <span class="inline">object_index</span> wie ein gegebenes Objekt hat und würde einfach als aufgerufen werden:</p>
  <p class="code">if is_same_object(id, obj_Player)<br />
    {<br />
        instance_destroy()<br />
    }</p>
  <p>Wenn Sie dies jedoch in den <span class="notranslate">code</span> -Editor schreiben, werden Ihnen die <span class="notranslate">argument</span> -Variablennamen direkt angezeigt (<span class="inline">_id</span> und <span class="inline">_obj</span>), was in den meisten Fällen nicht sehr aussagekräftig ist. Sie können JSDoc verwenden, um benutzerdefinierte <span class="notranslate">argument</span> Namen und Beschreibungen zu definieren, zusammen mit Informationen für die Funktion selbst:</p>
  <p class="code">/// @function                is_same_object(inst_id, object_id)<br />
    /// @description             Check if the given instance belongs to the given object.<br />
    /// @param {Id.Instance}     inst_id    The unique instance ID value of the instance to check.<br />
    /// @param {Asset.GMObject}  object_id  The object index to be checked against.<br />
    /// @return {Bool}<br />
    <br />
    function is_same_object(_inst_id, _object_id)<br />
    {<br />
        return _inst_id.object_index == _object_id;<br />
    }
  </p>
  <p>Wenn Sie nun diese Funktion irgendwo in Ihrem Projekt aufrufen, sehen Sie die neuen <span class="notranslate">argument</span> Namen, die in den JSDoc-Kommentaren eingegeben wurden:</p>
  <p><img>In der obigen Abbildung zeigt der obere Teil die Funktion in der Autovervollständigung und der untere Teil zeigt, wie die <span class="notranslate">argument</span> -Hilfe am unteren Rand funktioniert. Beachten Sie, dass sowohl der optionale Teil &quot;Typ&quot; als auch der obligatorische Teil &quot;Beschreibung&quot; von <span class="inline">@param</span> nicht standardmäßig in der Vervollständigung von <span class="notranslate">IDE</span> <span class="notranslate">code</span> angezeigt werden; um sie zu sehen, müssen Sie die Optionen in den <a href="../../Setting_Up_And_Version_Information/IDE_Preferences/GML_Code_Preferences.htm">GML-Einstellungen</a> aktivieren.</p>
  <p>Wenn Sie <a href="../../Setting_Up_And_Version_Information/IDE_Preferences/Feather_Settings.htm">Feather</a> verwenden, sehen Sie detaillierte Informationen über die Funktion, wenn Sie mit der Maus darüber fahren:</p>
  <p><img>Sie können einen <span class="notranslate">argument</span> Namen in <span class="inline">[]</span> Klammern einschließen, um anzuzeigen, dass er optional ist. Der <span class="notranslate">code</span> Editor erwartet dann eine beliebige Anzahl von <span class="notranslate">arguments</span> zwischen der minimal erforderlichen <span class="notranslate">arguments</span> und der Gesamtzahl von <span class="notranslate">arguments</span>.</p>
  <p>Ein Beispiel dafür ist die folgende Funktion:</p>
  <p class="code">/// @function    animate_position(end_x, end_y, start_x, start_y)<br />
    /// @desc        Animates the instance to ending point, from optional starting point<br />
    /// @arg end_x<br />
    /// @arg end_y<br />
    /// @arg [start_x]<br />
    /// @arg [start_y]<br />
    <br />
    function animate_position (x1, y1, x2, y2)<br />
    {<br />
        // Function code<br />
    }
  </p>
  <p>Die <span class="inline">start_x</span> und <span class="inline">start_y</span> <span class="notranslate">arguments</span> sind als optional gekennzeichnet, was bedeutet, dass der <span class="notranslate">code</span> Editor nun 2 bis 4 <span class="notranslate">arguments</span> erwartet, wie in der Warnmeldung zu sehen ist:</p>
  <p><img alt="JSDoc Example" class="center" height="652" src="../../assets/Images/Scripting_Reference/Additional_Information/JavaDoc_Example.png" width="672" /></p>
  <p class="note"><span class="note">HINWEIS</span> Sie erhalten das gleiche Verhalten, wenn Sie optionale <span class="notranslate">arguments</span> in der Funktionsdeklaration verwenden. Siehe <a href="../../GameMaker_Language/GML_Overview/Script_Functions.htm">Skriptfunktionen</a> für weitere Informationen.</p>
  <p>Da <span class="notranslate">scripts</span> mehrere Funktionen enthalten kann, können Sie JSDoc-Kommentare für jede dieser Funktionen vor ihrer Deklaration hinzufügen:</p>
  <p><img class="center" src="../../assets/Images/Asset_Editors/JSDoc_Feather_Info.png" /></p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Scripts.htm">Der <span class="notranslate">Script</span> Editor</a></div>
        <div style="float:right">Nächste: <a data-xref="{title}" href="Feather_Data_Types.htm">Feather-Datentypen</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
JSDoc <span class="notranslate">Script</span> Comments
-->
  <!-- TAGS
jsdoc_comments
-->
</body>
</html>