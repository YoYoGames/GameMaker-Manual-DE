<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Objekte</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <script src="../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how the object editor works" />
  <meta name="rh-index-keywords" content="Object Editor" />
  <meta name="search-keywords" content="objects,object editor" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Der Objekteditor</h1>
  <p><img>Objekte sind die Ressourcen, die wir verwenden, um Aspekte eines Spiels zu steuern und bestimmte Dinge zu tun. Meistens sind sie mit <span class="notranslate">sprite</span> verknüpft, so dass man sie in den Spielräumen sieht, aber manchmal werden sie als Controller &quot;hinter den Kulissen&quot; verwendet, um Dinge in Bezug auf den Benutzer oder für das Timing usw. zu tun. Man kann ihnen Verhaltensweisen zuweisen und sie können auf bestimmte Ereignisse und auf einander reagieren, und die meisten Dinge, die man in einem Spiel sieht, basieren auf Objekten und ihren Interaktionen. Das meiste, was man in einem Spiel sieht, basiert auf Objekten und ihren Interaktionen. Wir sagen &quot;basiert auf&quot;, weil man Objekte nicht direkt in den Spielräumen platziert, sondern <strong>Instanzen</strong> dieser Objekte, die im Grunde genommen Kopien (oder Klone, wenn Sie so wollen) der Objektressource sind. Dies ist sehr wichtig zu wissen, da Instanzen und Objekte <em>nicht dasselbe sind</em> und beide ihre eigenen Funktionen haben, die sie beeinflussen können.</p>
  <p>Um dies zu verdeutlichen, stellen Sie sich ein mit <span data-keyref="GameMaker Name">GameMaker</span> erstelltes Spiel vor. Alle Charaktere, Monster, Bälle, Wände usw. sind Objekte, die Sie im <a href="../Introduction/The_Asset_Browser.htm">Asset-Browser</a> erstellen. Dann ziehst du das <em>Objekt </em>in einen Raum im <a href="Rooms.htm">Raum-Editor</a>, um eine <em>Instanz </em>zu erstellen, die von der Basisobjektvorlage kopiert wird. Die Instanz im Raum kann dann im Editor selbst oder über <span class="notranslate">code</span> geändert werden, so dass sie skaliert oder eingefärbt werden kann oder andere Details des &quot;Basisobjekts&quot; geändert werden können. Wenn wir also davon sprechen, dass sich etwas auf eine <strong>Instanz</strong> auswirkt oder diese verändert, meinen wir, dass es sich auf diese <em>eine bestimmte Kopie eines Objekts in einem Raum</em> auswirkt. Nur dieses eine Exemplar ist betroffen, während alle anderen nicht betroffen sind. Wenn wir aber davon sprechen, dass ein <strong>Objekt</strong> beeinflusst oder geändert wird, meinen wir damit, dass wir das Objekt im Asset-Browser ändern und dass alles, was wir an ihm tun, sich auch auf alle Instanzen auswirkt, die von diesem Zeitpunkt an erstellt werden. Das Objekt ist also die Vorlage für die Instanz, und die Instanz ist das, was wir in einem Raum platzieren, um unser Spiel zu gestalten.</p>
  <p>Um ein Objekt in Ihrem Spiel zu erstellen, können Sie mit der rechten Maustaste auf <img> im Asset-Browser klicken und die Option <em>Objekt erstellen</em> wählen. Daraufhin wird das oben auf dieser Seite abgebildete Fenster mit den folgenden Abschnitten geöffnet:</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Einzelheiten</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">Hier können Sie Ihrem Objekt einen Namen geben. Dieser Name sollte weder Leerzeichen noch unzulässige Zeichen enthalten (nur alphanumerische Zeichen und der Unterstrich &quot;_&quot; sind erlaubt) und sollte kurz, aber einprägsam sein, damit Sie die Ressourcen später leicht identifizieren können
      später leicht identifizieren können, wenn Sie viele davon haben. Viele Leute verwenden z. B. ein Präfix oder ein Suffix, um die Unterschiede zwischen den Ressourcen zu kennzeichnen, z. B. &quot;<span class="inline">obj_Ship</span>&quot; oder &quot;<span class="inline">Ship_obj</span>&quot;.</p>
    <p class="dropspot">Als Nächstes können Sie die <span class="notranslate">sprite</span> für das Objekt auswählen, falls Sie eine solche wünschen. Klicken Sie mit der linken Maustaste <img> auf das Feld <span class="notranslate">sprite</span>. Daraufhin wird der <strong>Asset Explorer</strong> mit einer Liste aller verfügbaren <span class="notranslate">sprites</span> aus dem Asset-Browser angezeigt:</p>
    <p class="dropspot"><img>Sie können dann dasjenige auswählen, das Sie für das Objekt verwenden möchten. Wenn dem Objekt ein <span class="notranslate">sprite</span> zugewiesen ist, können Sie auf die Schaltfläche <em>Sprite bearbeiten</em> <img> klicken, um die <a href="Sprites.htm">Sprite-Eigenschaften</a> zu ändern, oder - wenn Sie kein <span class="notranslate">sprite</span> für das Objekt haben, aber eines erstellen möchten - können Sie auf
      die Schaltfläche " <em>Sprite hinzufügen</em> " <img> klicken, um ein neues <span class="notranslate">sprite</span> -Asset zu erstellen und dieses zuzuweisen. Sie können auch das zugewiesene <span class="notranslate">sprite</span> Asset-Bild bearbeiten
      bearbeiten, indem Sie auf die Schaltfläche <em>Bild bearbeiten</em> <img> klicken, um den <a href="Image_Editor.htm">Bildeditor</a> zu öffnen.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">Kollisionsmaske</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">Unter dem Zuweisungsbereich <span class="notranslate">sprite</span> finden Sie eine Schaltfläche zur Auswahl einer bestimmten <strong>Kollisionsmaske</strong>. Standardmäßig generiert ein Objekt Kollisionseigenschaften, die auf der ihm zugewiesenen <span class="notranslate">sprite</span> basieren, aber es gibt Fälle, in denen Sie möchten, dass
      Kollisionen auf der Grundlage einer anderen Form von einer anderen <span class="notranslate">sprite</span> basieren sollen. In einem Top-Down-Spiel kann zum Beispiel das Hauptobjekt <span class="notranslate">sprite</span> eine rechteckige Kollisionsmaske haben, aber um die Kollisionen weicher zu machen, kann eine kreisförmige Maske besser sein. In diesen Fällen
      können Sie auf die Schaltfläche Kollisionsmaske klicken und eine andere <span class="notranslate">sprite</span> Ressource auswählen, so dass nun Instanzen des Objekts die zugewiesene <span class="notranslate">sprite</span><em>zeichnen </em>, aber <em>Kollisionen </em>auf der Grundlage der Maske <span class="notranslate">sprite</span>. Weitere Informationen über Kollisionsmasken finden Sie
      Masken finden Sie auf der Seite über den <a href="Sprites.htm">Sprite-Editor</a>.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Eigenschaften</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">Hier werden Ihnen die folgenden Optionen für Ihr Objekt angeboten:<strong></strong></p>
    <ul class="dropspotlist">
      <li class="dropspot"><strong>Sichtbar</strong>: Sichtbar gibt an, ob Instanzen dieses Objekts beim Start des Raums sichtbar sind. Normalerweise sind die meisten Instanzen sichtbar, aber manchmal ist es nützlich, unsichtbare Instanzen zu haben - zum Beispiel kannst du sie als Wegpunkte benutzen, um ein sich bewegendes Monster zu kontrollieren, oder um Werte zu verfolgen und bestimmte zeitgesteuerte Aktionen durchzuführen. Unsichtbare Objekte reagieren immer noch auf Ereignisse, und wenn ihnen eine <span class="notranslate">sprite</span> oder eine Maske zugewiesen ist, reagieren sie auch, wenn andere Instanzen mit ihnen kollidieren... sie können nur nicht gesehen werden und führen ihr <strong>Draw Event</strong> <em>nicht </em>aus. Standardmäßig ist das Sichtbar-Flag markiert.<strong></strong></li>
      <li class="dropspot"><strong>Solide</strong>: Wenn du eine Instanz als solide kennzeichnest, sagst du <span data-keyref="GameMaker Name">GameMaker</span>, dass er versuchen soll, alle Kollisionen aufzulösen, bevor er ein <strong>Kollisionsereignis</strong> auslöst. Es handelt sich hierbei um eine sehr grundlegende Funktion, die in Wirklichkeit nur dazu dient, die Instanz in die Position zurückzubringen, in der sie sich befand, bevor eine Kollision erkannt wurde. <span class="notranslate">code</span> oder <span class="notranslate">GML</span> Visual, das im Kollisionsereignis selbst enthalten ist, ist daher nur von begrenztem Nutzen.</li>
      <li class="dropspot"><strong>Persistent</strong>: Ein persistentes Objekt verschwindet nicht, wenn der Raum gewechselt wird, sondern &quot;bleibt bestehen&quot; und wird in den neuen Raum übernommen. Es verschwindet erst, wenn du es explizit zerstörst, entweder mit einer Zerstörungsaktion oder in <span class="notranslate">code</span>. Das bedeutet, dass ein persistentes Objekt, das Sie in einem Raum platzieren, auch in allen nachfolgenden Räumen verfügbar ist und weiterhin alle Aktionen ausführt, die den Ereignissen in seinen Objekteigenschaften zugewiesen sind, <em>mit Ausnahme </em>des <strong>Ereignisses "Erstellen"</strong>, das nur <em>einmal </em>bei der ursprünglichen Erstellung ausgelöst wird und nicht beim Wechsel in einen neuen Raum. Das ist praktisch, wenn man z.B. einen Hauptcharakter hat, der sich von Raum zu Raum bewegt und man die Variablen innerhalb der Instanz gleich halten will, aber man sollte sehr darauf achten, persistente Objekte korrekt zu erstellen und zu zerstören, da sich leicht aus Versehen Fehler in das Projekt einschleichen können.</li>
    </ul>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#" style="margin-left:88px">Persistenz und Raumschichten</a>  </p>
    <div class="droptext" data-targetname="drop-down7">
      <p class="dropspot" style="margin-left: 132px">Wenn Sie eine Instanz mit aktivierter Persistenz in einem Raum erstellen, wird ihr eine Ebene oder eine Tiefe zugewiesen (je nachdem, welche Funktion Sie zum Erstellen der Instanz des Objekts verwendet haben). Wenn der Raum gewechselt wird und der folgende Raum keine Ebene mit demselben Namen oder derselben Tiefe wie die zugewiesene hat,<strong> wird eine neue Ebene für die Instanz erstellt, die über die Räume hinweg persistent ist</strong>. Wenn du bei der Erstellung der Instanz einen Namen für die Ebene vergeben hast, dann wird die neue Ebene auch den gleichen Namen wie die ursprüngliche Ebene haben, und wenn du der Instanz eine Tiefe zugewiesen hast, dann wird die neue Ebene &quot;<span class="inline">_layer_XXX</span>&quot; heißen, wobei &quot;<span class="inline">XXX</span>&quot; ein Hex-Wert ist, der verwendet wird, um der Ebene einen eindeutigen Namen zu geben. Diese Ebenen werden bei <strong>Raumende</strong> aus dem Raum entfernt.<br>
        <br>
        Ein weiterer Hinweis zu Ebenen und persistenten Instanzen ist, dass wenn du der Instanz bei der Erstellung eine benannte Ebene zugewiesen hast und es in den folgenden Räumen eine andere Ebene mit demselben Namen gibt, dann wird die persistente Instanz der Ebene mit demselben Namen zugewiesen, unabhängig von der Tiefe der Ebene.<br>
        <br>
        Wenn eine persistierte Instanz in einen Raum mit einer Ebene in der <em>gleichen</em> Tiefe wie bei der Erstellung der Instanz verschoben wird, wird sie <em>nicht </em>dieser Ebene zugewiesen, sondern es wird eine neue Ebene in der gleichen Tiefe erstellt (gemäß der oben erläuterten Benennungskonvention).
      </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#" style="margin-left: 88px">Persistenz und Ereignisse</a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p class="dropspot" style="margin-left: 132px">Wie bereits erwähnt, wird ein persistentes Objekt nur <em>einmal</em> sein <strong>Erstellungsereignis</strong> ausführen, aber es werden auch seine Ereignisse <strong>Spielstart</strong>, <strong>Spielende</strong>, <strong>Raumstart</strong> und <strong>Raumende</strong> zu den entsprechenden Zeiten ausgelöst. Wenn Sie jedoch das Spiel neu starten (z. B. mit der Funktion <span class="inline">game_restart()</span> ), <em>werden alle persistenten Objekte entfernt und existieren nur, wenn sie vom Spiel neu erstellt werden</em>.<br>
        <br>
        Beachten Sie auch, dass, wenn Sie <strong>ein </strong>persistentes Objekt <strong>deaktivieren </strong>, es nicht mehr von einem Raum in einen anderen gelangen kann, es sei denn, es wird wieder aktiviert, bevor das <strong>Raumende-Ereignis</strong> ausgelöst wird. Die Reaktivierung <em>erfordert einen vollen Spielschritt,</em> so dass die Verwendung des <strong>Raum-Ende-Ereignisses</strong> hierfür nicht funktioniert, da es dem Spiel keinen vollen Schritt gibt, um das Objekt zu reaktivieren. Sie müssen dies also im Hinterkopf behalten, wenn Sie die Deaktivierung zusammen mit persistenten Objekten verwenden und Ihre <span class="notranslate">code</span> entsprechend planen.
      </p>
    </div>
    <ul class="dropspotlist">
      <li class="dropspot"><strong>Verwendet Physik</strong>: Wenn Sie das Kontrollkästchen "Verwendet Physik" aktivieren, teilen Sie <span data-keyref="GameMaker Name">GameMaker</span> mit, dass dieses Objekt Teil einer physikalischen Welt sein soll (wie im <strong></strong><a href="Rooms.htm">Raum-Editor</a> eingestellt). Wenn Sie dieses Kontrollkästchen aktivieren, wird ein weiteres verkettetes Fenster geöffnet, in dem Sie die physikalischen Eigenschaften aller Instanzen dieses Objekts definieren können. Mehr Informationen dazu finden Sie im Abschnitt über <a href="Object_Properties/Physics_Objects.htm">Physik-Objekte</a>.</li>
      <li class="dropspot"><strong>Verwaltet</strong>: Ob dieses Objekt bei der Verwendung von <a href="../GameMaker_Language/GML_Reference/Rollback/Rollback_Multiplayer.htm">Rollback Multiplayer</a> verwaltet werden soll <a href="../GameMaker_Language/GML_Reference/Rollback/Rollback_Multiplayer.htm">.</a> Der Zustand eines verwalteten Objekts kann <i>zurückgerollt</i> werden und Vorhersagen können darauf ausgeführt werden. Siehe <a data-xref="{text}" href="../GameMaker_Language/GML_Reference/Rollback/Rollback_System.htm#h2">Verwaltete Objekte</a>.</li>
    </ul>
  </div>
  <p> </p>
  <p>Der letzte Teil des Objekteditors ist den verschiedenen <strong>Objektoptionen</strong> gewidmet, von denen jede auf einer eigenen Seite behandelt wird, die unten verlinkt ist:</p>
  <ul class="colour">
    <li><a href="Object_Properties/Object_Events.htm">Objekt-Ereignisse</a></li>
    <li><a href="Object_Properties/Parent_Objects.htm">Übergeordnete Objekte</a></li>
    <li><a href="Object_Properties/Physics_Objects.htm">Physikalische Objekte</a></li>
    <li><a href="Object_Properties/Object_Variables.htm">Objekt-Variablen</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="The_Asset_Editors.htm">Die Asset-Redaktion</a></div>
        <div style="float:right">Nächste: <a href="Paths.htm">Pfade</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Object Editor
Objects
-->
  <!-- TAGS
object_editor
-->
</body>
</html>