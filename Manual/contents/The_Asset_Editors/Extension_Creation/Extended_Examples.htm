<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Quelle Beispiele</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Page containing extended examples for extensions" />
  <meta name="rh-index-keywords" content="Source Extension Examples" />
  <meta name="search-keywords" content="source android ios extensions native" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Quelle Beispiele</h1>
  <p>Diese Seite enthält Beispiele und Informationen über den Quellcode der Erweiterungen <span class="notranslate">code</span> für <span class="notranslate">Android</span> und <span class="notranslate">iOS</span>, damit Sie Ihre eigenen nativen Erweiterungen für diese <span class="notranslate">platforms</span> erstellen können.</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Android (Basisbeispiel)</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p>Unsere Beispielerweiterung für <span class="notranslate">Android</span> wird Funktionen enthalten, die Folgendes bewirken:</p>
    <ul class="dropspotlist">
      <li>Rückgabe von zwei Zahlen, die addiert werden</li>
      <li>Rückgabe einer Zeichenkette, die aus einer Eingabezeichenkette und einem Wert besteht</li>
      <li>Rückgabe einer Zeichenkette, die aus zwei Eingabezeichenketten besteht</li>
      <li>Lösen Sie das Ereignis <a href="../Object_Properties/Async_Events/Social.htm">Async - Social</a> aus und füllen Sie die Werte in der Karte <span class="inline">async_load</span> </li>
    </ul>
    <p>Für diese Erweiterung wird eine Datei <span class="inline">.java</span> verwendet, deren Inhalt unten angegeben ist (zum Öffnen anklicken):</p>
    <p class="note"><a data-height="800" data-rhwidget="HyperlinkPopover" data-width="1000" href="Source_Files/GenericTest.htm">GenericTest.java</a></p>
    <p>Um eine solche Datei zu Ihrer Erweiterung hinzuzufügen, müssen Sie unter den <a href="Android_Extensions.htm">Android-Eigenschaften</a> zunächst einen Klassennamen eingeben (in diesem Beispiel &quot;GenericTest&quot;), dann auf &quot;Quelle hinzufügen&quot; klicken und die Datei <span class="inline">.java</span> auswählen. Dadurch wird die ausgewählte Datei zu Ihrem Projektverzeichnis hinzugefügt - Sie können mit der rechten Maustaste auf Ihre Erweiterung klicken, &quot;Im Explorer öffnen&quot; wählen und die Quelldateien dort sehen.</p>
    <p>Sie können nun eine neue Platzhalterdatei zu Ihrer Erweiterung hinzufügen und darin Funktionen mit den folgenden Eigenschaften erstellen:</p>
    <ul class="dropspotlist">
      <li><em>Funktion/externer Name:</em><span><span> </span></span><span class="inline">AddTwoNumbers</span><br>
        <em>Hilfe:</em><span><span> </span></span><span class="inline">AddTwoNumbers(value1, value2)</span><br>
        <em>Argumente:</em><span><span> </span></span><span class="inline">double, </span><span class="inline">double</span><br>
        <em>Rückgabetyp:</em><span><span> </span></span><span class="inline">double</span>
      </li>
      <li><em>Funktion/externer Name:</em><span> </span><span class="inline">HowManyObjects</span><br>
        <em>Hilfe:</em><span><span> </span></span><span class="inline">HowManyObjects(value1, value2, string)</span><br>
        <em>Argumente:</em><span><span> </span></span><span class="inline">double, </span><span class="inline">double, </span><span class="inline">string</span><br>
        <em>Rückgabetyp:</em><span><span> </span></span><span class="inline">string</span>
      </li>
      <li><em>Funktion/externer Name:</em><span><span> </span></span><span class="inline">BuildAString</span><br>
        <em>Hilfe:</em><span><span> </span></span><span class="inline">BuildAString(string1, string2)</span><br>
        <em>Argumente:</em><span><span> </span></span><span class="inline">string, </span><span class="inline">string</span><br>
        <em>Rückgabetyp:</em><span><span> </span></span><span class="inline">string</span>
      </li>
      <li><em>Funktion/externer Name:</em><span><span> </span></span><span class="inline">ReturnAsync</span><br>
        <em>Hilfe:</em><span><span> </span></span><span class="inline">ReturnAsync(value1, value2)</span><br>
        <em>Argumente:</em><span><span> </span></span><span class="inline">double,</span><span> </span><span class="inline">double</span><br>
        <em>Rückgabetyp:</em><span><span> </span></span><span class="inline">double</span>
      </li>
    </ul>
    <p>Hier ist ein Beispiel für die Funktion <span class="inline">AddTwoNumbers()</span>:</p>
    <p><img>Sie können diese Funktionen nun von Ihrem Spiel aus aufrufen <span class="notranslate">code</span> und sie wie jede andere eingebaute Funktion verwenden:</p>
    <p class="code">var result1 = string(AddTwoNumbers(irandom(100), 50));<br />
      var result2 = BuildAString(&quot;Hello&quot;, &quot;World&quot;);<br />
      var result3 = HowManyObjects(irandom(1000), irandom(1000), &quot;Targets&quot;);<br />
      ReturnAsync(irandom(1000), irandom(1000));</p>
    <p>Die Funktion <span class="inline">ReturnAsync()</span> löst das Ereignis " <a href="../Object_Properties/Async_Events/Social.htm">Async - Social</a> " aus, so dass Sie dieses Ereignis zu Ihrem Objekt hinzufügen und Daten aus der Karte <span class="inline">async_load</span> lesen müssen (die durch die oben angegebene Quelle der Erweiterung <span class="notranslate">code</span> gefüllt wird).</p>
    <p class="code">var type = async_load[? &quot;type&quot;];<br />
      <br />
      if (type == &quot;finished&quot;)<br />
      {<br />
          var result4 = &quot;value1: &quot; + string(async_load[? &quot;argument0&quot;]) + &quot;, &quot;;<br />
          result4 += &quot;value2: &quot; + string(async_load[? &quot;argument1&quot;]);<br />
      }
    </p>
    <p> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">iOS (Basisbeispiel)</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p>Das Beispiel für <span class="notranslate">iOS</span> ist dasselbe wie das oben beschriebene Beispiel für <span class="notranslate">Android</span>; nur die Quelldateien unterscheiden sich, was wir in diesem Abschnitt behandeln werden.</p>
    <p>iOS-Erweiterungen verwenden eine <span class="inline">.h</span> und eine <span class="inline">.mm</span> Datei. Der Inhalt beider Dateien ist unten angegeben (zum Öffnen anklicken):</p>
    <p class="note"><a data-height="800" data-rhwidget="HyperlinkPopover" data-width="1000" href="Source_Files/GenericTest-iOS.htm">GenericTest <span class="notranslate">iOS</span> Quelldateien</a></p>
    <p>Um diese Dateien zu Ihrer Erweiterung hinzuzufügen, müssen Sie zunächst in den <a href="iOS_Extensions.htm">iOS-Eigenschaften</a> einen Klassennamen eingeben (in diesem Beispiel &quot;GenericTest&quot;). Sie können dann entweder die Option &quot;Enter framework path&quot; (wenn die Dateien auf Ihrem <span class="notranslate">macOS</span> Rechner vorhanden sind) oder die Option &quot;Add Source&quot; (wenn sie sich auf Ihrem Entwicklungsrechner befinden) verwenden. Unabhängig von der verwendeten Option müssen Sie auf das Verzeichnis verweisen, das Ihre <span class="inline">.h</span> und <span class="inline">.mm</span> Dateien enthält.</p>
    <p>Sie können diese Quelldateien zu derselben Erweiterung hinzufügen, die im vorherigen Abschnitt für <span class="notranslate">Android</span> eingerichtet wurde. Das bedeutet, dass alle Funktionen, die bereits in dieser Erweiterung definiert wurden, nun auch auf <span class="notranslate">iOS</span> funktionieren (vorausgesetzt, die <em>externen Namen</em> aller Funktionen auf <span class="notranslate">Android</span> und <span class="notranslate">iOS</span> sind gleich). Wenn Sie eine neue Erweiterung erstellen, können Sie die Funktionen einfach auf die gleiche Weise erstellen, wie zuvor beschrieben.</p>
    <p> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">Android (Rückrufe)</a></p>
  <div class="droptext" data-targetname="drop-down5">
    <p>Sie können die folgenden Callback-Funktionen in Ihren <span class="inline">.java</span> Erweiterungsdateien verwenden:</p>
    <p class="code">public void onStart()<br />public void onRestart()<br />public void onStop()<br />public void onDestroy()<br />public void onPause()<br />public void onResume()<br />public void onActivityResult(int requestCode, int resultCode, Intent data)<br />public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults)<br />public void onNewIntent(android.content.Intent newIntent)<br />public void onWindowFocusChanged(boolean hasFocus)<br />public void onConfigurationChanged(Configuration newConfig)<br /></p>
    <p><br /></p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">iOS (Rückrufe)</a></p>
  <div class="droptext" data-targetname="drop-down7">
    <p>Sie können die folgenden Callback-Funktionen in Ihren <span class="inline">.mm</span> Erweiterungsdateien verwenden:</p>
    <p class="code">-(void) Init<br />
      -(void) onLaunch:(NSDictionary*)launchOptions<br />
      -(void) onResume<br />
      -(void) onPause<br />
      -(void) applicationDidEnterBackground:(UIApplication *)application<br />
      -(void) applicationWillEnterForeground:(UIApplication *)application<br />
      -(void) onStop<br />
      -(void) applicationProtectedDataDidBecomeAvailable:(UIApplication *)application<br />
      -(void) applicationProtectedDataWillBecomeUnavailable:(UIApplication *)application<br />
      -(void) applicationDidReceiveMemoryWarning:(UIApplication *)application<br />
      -(void) applicationSignificantTimeChange:(UIApplication *)application<br />
      -(void) application:(UIApplication *)application willEncodeRestorableStateWithCoder:(NSCoder *)coder<br />
      -(void) application:(UIApplication *)application didDecodeRestorableStateWithCoder:(NSCoder *)coder<br />
      -(void) application:(UIApplication *)application didUpdateUserActivity:(NSUserActivity *)userActivity<br />
      -(void) application:(UIApplication *)application didFailToContinueUserActivityWithType:(NSString *)userActivityType error:(NSError *)error<br />
      -(void) application:(UIApplication *)application handleWatchKitExtensionRequest:(NSDictionary *)userInfo reply:(void (^)(NSDictionary *replyInfo))reply<br />
      -(void) applicationShouldRequestHealthAuthorization:(UIApplication *)application<br />
      -(void) openURL:(NSURL *)url sourceApplication:(NSString *) sourceApplication annotation:(id)annotation<br />
      -(void) application:(UIApplication *)application userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)cloudKitShareMetadata</p>
    <p> </p>
  </div>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Extensions.htm">Der Erweiterungseditor</a></div>
        <div style="float:right">Nächste: <a href="Creating_An_Extension.htm">Eine Erweiterung erstellen</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Android Extensions
iOS Extensions
Source
Native
java
mm
h
-->
  <!-- TAGS
source_extensions
-->
</body>
</html>