<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Audio-Aufnahme</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the Audio Recording async event." />
  <meta name="rh-index-keywords" content="Objects - Async Audio Recording Event" />
  <meta name="search-keywords" content="Audio Recording,ev_audio_recording" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Audio-Aufnahme</h1>
  <p><img>Dieses Ereignis kann nur durch die <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_start_recording.htm"><span class="inline">audio_start_recording()</span></a> Funktion
    ausgelöst werden und gibt eine <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a> zurück, die in der Variablen <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>,
    gespeichert ist, die je nach dem <a class="glossterm" data-glossterm="Rückruf" href="Dialog.htm#">Callback</a> der Funktion, die das Ereignis ausgelöst hat, unterschiedliche Schlüssel/Wertpaare enthält.</p>
  <p>Die folgenden Schlüssel werden in der ds_map verfügbar sein:</p>
  <ul class="dropspotlist">
    <li class="dropspot">&quot;<span class="inline">buffer_id</span>&quot; - die ID des temporären <a href="../../../GameMaker_Language/GML_Reference/Buffers/Buffers.htm">Puffers</a>, den Sie zum Abrufen der Audiodaten verwenden können</li>
    <li class="dropspot">&quot;<span class="inline">channel_index</span>&quot; - der Index des Aufzeichnungskanals, wie er von der aufrufenden Funktion zurückgegeben wurde, von der diese Daten stammen</li>
    <li class="dropspot">&quot;<span class="inline">data_len</span>&quot; - die Länge der empfangenen Daten (in Bytes)</li>
  </ul>
  <p class="note"><strong>HINWEIS</strong>: Wie zu Beginn dieser Seite erwähnt, ist die Variable <span class="inline" style="font-size: 14px">async_load </span>nur in asynchronen Ereignissen gültig, da die DS-Map, auf die sie zeigt, zu Beginn des Ereignisses erstellt wird,
    und am Ende des Ereignisses wieder gelöscht wird. Beachten Sie jedoch, dass die temporäre <span class="notranslate">buffer</span>, in der alle Audiodaten zusammen mit der Karte gespeichert werden, am Ende des Ereignisses ebenfalls gelöscht wird. Kopieren Sie sie daher in eine benutzerdefinierte <span class="notranslate">buffer</span>, wenn Sie sie für eine spätere Verwendung aufbewahren möchten.</p>
  <p>Im folgenden Anwendungsbeispiel werden wir eine benutzerdefinierte <span class="notranslate">buffer</span> erstellen, um unser aufgenommenes Audio zu speichern, und unser Spiel so einstellen, dass es von der Eingangsquelle 0 aufnimmt:</p>
  <p class="code">channel_index = audio_start_recording(0);<br/> audio_buffer = buffer_create(len, buffer_fast, 1);</p>
  <p>Bei jedem Spielschritt, bei dem die Aufnahme erkannt wird, wird ein asynchrones Audioaufnahme-Ereignis ausgelöst, bei dem Sie die aufgenommene Eingabe wie folgt verarbeiten können:</p>
  <p class="code">var channel = async_load[? &quot;channel_index&quot;];<br/> if channel == channel_index<br/>    {<br/>    len = async_load[? &quot;data_len&quot;];<br/>    buffer_copy(async_load[? &quot;buffer_id&quot;], 0, len, audio_buffer, 0);<br/>    }</p>
  <p>Hier überprüfen wir einfach den &quot;channel_index&quot;-Schlüssel, um sicherzustellen, dass er mit dem Wert übereinstimmt, der beim Starten der Aufzeichnung zurückgegeben wurde, und wenn dies der Fall ist, kopieren wir den Inhalt der temporären <span class="notranslate">buffer</span>, die für dieses Ereignis erstellt wurde, in unsere benutzerdefinierte <span class="notranslate">buffer</span>. Danach können Sie
    mit dem benutzerdefinierten <span class="notranslate">buffer</span> machen, was Sie wollen - Sie können es mit den speziellen <span class="notranslate">buffer</span> Audiofunktionen abspielen, Sie können es verarbeiten und über das Netzwerk senden, Sie können es auf der Festplatte speichern... Sobald Sie Ihre Audioaufnahmen in einem <span class="notranslate">buffer</span> gespeichert haben, können Sie im Grunde
    alles tun, was Sie wollen.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Async_Events.htm">Asynchrone Ereignisse</a></div>
        <div style="float:right">Nächste: <a href="Cloud.htm">Wolke</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Audio Recording Event
ev_audio_recording
-->
  <!-- TAGS
ev_audio_recording
-->

</body></html>