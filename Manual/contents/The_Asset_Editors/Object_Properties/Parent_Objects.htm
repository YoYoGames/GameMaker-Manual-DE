<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Übergeordnete Objekte</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing object parenting" />
  <meta name="rh-index-keywords" content="Objects - Parents" />
  <meta name="search-keywords" content="parent,child,inheritance,object parenting" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
  <script src="../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Übergeordnete Objekte</h1>
  <p>Wenn Sie mit Objekten im <span data-keyref="GameMaker Name">GameMaker</span> <span class="notranslate">IDE</span> arbeiten, können Sie <strong>Eltern-/Kind-Hierarchien </strong> einrichten. Dazu klicken Sie im Objekteditor auf die Schaltfläche &quot;Übergeordnet&quot; und wählen dann ein anderes Objekt aus dem Asset-Browser
    als &quot;übergeordnetes&quot; Objekt des zu bearbeitenden Objekts auswählt:</p>
  <p><img>Jedes Objekt in Ihrem Spielprojekt kann also ein übergeordnetes Objekt haben, aber was bedeutet das? Nun, wenn einem Objekt ein übergeordnetes Objekt zugewiesen ist, kann es
    <span class="notranslate">code</span> , Aktionen und Ereignisse mit diesem Elternteil teilen. Diese gemeinsame Nutzung wird als &quot;Vererbung&quot; bezeichnet, und ein Objekt, das ein übergeordnetes Objekt hat, wird als &quot;untergeordnetes&quot; Objekt bezeichnet. Ein untergeordnetes Objekt kann nicht nur <span class="notranslate">code</span> mit dem übergeordneten Objekt teilen, sondern Sie können auch Prüfungen durchführen und Code ausführen
    auf übergeordneten Objekten durchführen, der automatisch auch die untergeordneten Objekte einbezieht, was viel Zeit und Energie spart.</p>
  <p>Wenn sich das kompliziert anhört, kann man ein übergeordnetes Objekt auch als eine Möglichkeit betrachten, Objekte unter demselben Dach zu &quot;gruppieren&quot;, so dass sie bestimmte Dinge gemeinsam haben, ohne ihre eigene Identität zu verlieren. Vielleicht ist das immer noch nicht
    noch nicht ganz klar, also lassen Sie uns ein paar Beispiele nennen...</p>
  <p>Angenommen, Sie haben ein &quot;Spieler&quot;-Objekt und vier verschiedene &quot;Feind&quot;-Objekte. Sie möchten, dass der Spieler stirbt, wenn er eines dieser vier Objekte berührt, und dies würde normalerweise vier verschiedene Kollisionsereignisse mit vier verschiedenen Sätzen von
    Aktionen oder <span class="notranslate">code</span>, eine für jedes der feindlichen Objekte. Wenn wir jedoch ein übergeordnetes Objekt für alle Feinde erstellen, können wir ein einziges Kollisionsereignis mit dem übergeordneten Objekt erzeugen, das unabhängig davon ausgelöst wird, welches der vier &quot;untergeordneten&quot; Feindobjekte den Spieler berührt.
    Objekten den Spieler berührt. Praktische Sache! Im eigentlichen <span data-keyref="GameMaker Name">GameMaker-Objekt</span> sieht das dann etwa so aus:</p>
  <p><img>Auf der linken Seite haben wir vier separate Kollisionsereignisse und auf der rechten Seite haben wir ein einziges Kollisionsereignis, da wir ein
    &quot;übergeordnetes&quot; Objekt erstellt und ihm alle feindlichen Objekte zugewiesen. Beachten Sie, dass ein übergeordnetes Objekt keine Ereignisse oder <span class="notranslate">code</span> in sich haben muss...</p>
  <p>Ein weiteres Beispiel für Parenting wäre ein Spiel, in dem man 10 unterschiedlich aussehende Objekte erstellen möchte, die sich alle gleich verhalten sollen. In diesem Fall würden Sie ein übergeordnetes Objekt erstellen und in diesem alle Verhaltensaktionen oder Code
    in den erforderlichen Ereignissen, und dann erstellst du deine zehn Objekte ohne Aktionen oder <span class="notranslate">code</span>, aber mit unterschiedlichen <span class="notranslate">sprites</span>, und weist ihnen dein übergeordnetes Objekt zu. Wenn Sie nun diese Instanzen in einem Raum platzieren, werden sie sich alle gleich verhalten, aber unterschiedlich aussehen,
    da sie die Ereignisse des übergeordneten Objekts &quot;erben&quot; werden.</p>
  <p>Schließlich können Sie mit Hilfe der Elternschaft Ereignisse und Verhaltensweisen &quot;mischen und anpassen&quot;. Wir werden dies mit einem letzten Beispiel veranschaulichen... Nehmen wir an, Sie wollen zwei Monster: eines, das sich nach oben und unten bewegt, und ein anderes, das sich nach links und rechts bewegt, aber Sie wollen auch, dass die
    beide die gleiche Gesundheit haben, auf den Spieler schießen und ihn verletzen, wenn sie mit ihnen zusammenstoßen. In diesem Fall kann man sehen, dass fast alle Ereignisse die gleichen Aktionen haben sollten, mit Ausnahme von ein oder zwei, die die Bewegung steuern. Also können wir wieder
    ein Objekt zum Elternobjekt des anderen machen, aber in diesem Fall definieren wir auch bestimmte Ereignisse für das Kindobjekt. Diese Ereignisse &quot;überschreiben&quot; die übergeordneten Ereignisse, was bedeutet, dass immer dann, wenn ein Ereignis für das Kindobjekt Aktionen enthält, diese ausgeführt werden
    anstelle der im Ereignis des Elternobjekts enthaltenen Aktionen ausgeführt werden. Wenn Sie auch das übergeordnete Ereignis ausführen möchten, können Sie das so genannte &quot;geerbte&quot; Ereignis mit der Funktion <a href="../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm"><span class="inline">event_inherited()</span></a>,
    oder der <span class="notranslate">GML</span> Visual-Aktion <a href="../../Drag_And_Drop/Drag_And_Drop_Reference/Instance/Call_Parent_Event.htm">Übergeordnetes Ereignis aufrufen</a>.</p>
  <p><img>Links oben ist das übergeordnete Objekt mit 5 Ereignissen zu sehen, rechts das &quot;untergeordnete&quot; Objekt. Das untergeordnete Objekt
    hat ebenfalls 5 Ereignisse, aber zwei davon überschreiben die geerbten Ereignisse des übergeordneten Objekts (die Ereignisse <strong>"Schritt" </strong>und " <strong>Zeichnen" </strong>) und die anderen drei sind ausgegraut, da sie die vom übergeordneten Objekt geerbten Ereignisse sind. Geerbte Ereignisse
    werden im Ereignis-Editor mit dem Symbol &quot;Übergeordnetes Ereignis überschreiben&quot; gekennzeichnet:</p>
  <p><img>Wenn Sie auf <img> auf ein Ereignis klicken, das vererbt wurde,
    wird der Editor <span class="notranslate">code</span> geöffnet, um das vererbte übergeordnete Ereignis <span class="notranslate">code</span> anzuzeigen. Sie können dieses <span class="notranslate">code</span> jedoch nicht bearbeiten, da Sie es nur im übergeordneten Objekt selbst bearbeiten können. Sie können mit der rechten Maustaste <img> auf ein beliebiges übergeordnetes Ereignis klicken, um das folgende Menü mit Optionen zu öffnen:</p>
  <p><img>Hier können Sie zwischen zwei Optionen wählen <strong>Öffnen Sie </strong>das übergeordnete Ereignis, um das <span class="notranslate">code</span> zu untersuchen, oder wählen Sie die Option <strong>Vererben </strong>des
    Ereignis erben oder das Ereignis <strong>außer Kraft setzen </strong>. Wenn Sie " <strong>Erben" </strong>wählen, wird der Editor <span class="notranslate">code</span> mit der Funktion <a href="../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm"><span class="inline">event_inherited()</span></a> bereits
    (oder die Aktion " <a href="../../Drag_And_Drop/Drag_And_Drop_Reference/Instance/Call_Parent_Event.htm">Übergeordnetes Ereignis aufrufen"</a>, wenn Sie <span class="notranslate">GML</span> Visual verwenden). Alle weiteren <span class="notranslate">code</span>, die Sie in diesem Ereignis platzieren, werden nun ausgeführt, ebenso wie die <span class="notranslate">code</span>, die das übergeordnete Objekt
    hat. Wenn Sie das Ereignis <strong>überschreiben </strong>, wird das Fenster <span class="notranslate">code</span> ebenfalls geöffnet, nur wird jetzt die Funktion <span class="inline">event_inherited()</span> nicht aufgerufen, so dass alles, was Sie hier hinzufügen, <em>anstelle </em>des Codes
    im übergeordneten Objekt ausgeführt.</p>
  <p class="note"><strong>HINWEIS</strong>: Vom Editor <span class="notranslate">code</span> aus können Sie schnell zum übergeordneten Objekt navigieren, indem Sie mit der rechten Maustaste auf <img> klicken und im Popup-Menü die Option <strong>Gehe zu Objekt</strong> wählen. Sie können auch (wenn das Ereignis überschrieben wurde) die Option <strong>Vererbtes Ereignis öffnen</strong> wählen, um direkt zum Editor <span class="notranslate">code</span> zu gelangen, in dem das übergeordnete Ereignis <span class="notranslate">code</span> enthalten ist.</p>
  <p>Wenn Sie in <span class="notranslate">code</span> ein übergeordnetes Objekt anvisieren, gilt <span class="notranslate">code</span> auch für die &quot;Kinder&quot; des übergeordneten Objekts. Dies geschieht, wenn Sie in einer Aktion angeben, dass die Aktion auf Instanzen eines bestimmten Objekts angewendet werden muss, und in <span class="notranslate">code</span> 
    geschieht dies, wenn Sie die <a href="../../GameMaker_Language/GML_Overview/Language_Features/with.htm"><span class="inline">with()</span></a> Anweisung. Es wird auch so funktionieren, wenn Sie <span class="notranslate">code</span> Funktionen aufrufen, wie <a href="../../GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_position.htm"><span class="inline">instance_position()</span></a>,
    <a href="../../GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_number.htm"><span class="inline">instance_number()</span></a>, etc... wobei - wenn Sie ein übergeordnetes Objekt angeben - alle Instanzen der übergeordneten <em>und </em>untergeordneten Instanzen
    in die Prüfungen einbezogen werden. Schließlich funktioniert das Parenting auch, wenn man sich auf Variablen in anderen Objekten bezieht, wie im obigen Beispiel des Monsters, wenn ich die Geschwindigkeit von Feind 1 auf 10 setze, dann wird die Geschwindigkeit von Feind 2 ebenfalls auf 10 gesetzt, da es sich um ein Kindobjekt von Feind
    1.</p>
  <p>In den meisten Fällen gilt es als gute Praxis, ein übergeordnetes Basisobjekt zu erstellen, das das gesamte Standardverhalten enthält, aber niemals eine Instanz davon im Spiel verwendet. Verwenden Sie lieber alle Kindobjekte und verwenden Sie das Elternobjekt nur in
    Situationen, wie ich sie oben beschrieben habe, für Kollisionen, zum Referenzieren von Variablen usw... Sie sollten auch wissen, dass Eltern auch Eltern haben können! Natürlich kann man keinen Zyklus &quot;Elternteil 1 ist Kind von Elternteil 2 ist Kind von Elternteil
    1&quot;, aber man kann eine so genannte &quot;Objekthierarchie&quot; erstellen, in der &quot;<em>Elternteil 3 </em>ist Kind von <em>Elternteil 2 </em>ist Kind von <em>Elternteil 1</em>&quot;. Dies ist äußerst nützlich, um Ihr Spiel zu strukturieren, und es wird Ihnen dringend empfohlen
    zu lernen, diesen Mechanismus zu nutzen.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Objects.htm">Der Objekt-Editor</a></div>
        <div style="float:right">Nächste: <a href="Physics_Objects.htm">Physikalische Objekte</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Parent Objects
Child Objects
parent
child
inheritance
-->
  <!-- TAGS
parent_objects
-->
</body>
</html>