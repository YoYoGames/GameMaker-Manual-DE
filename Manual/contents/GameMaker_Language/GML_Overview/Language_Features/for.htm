<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>für</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the for function" />
  <meta name="rh-index-keywords" content="for" />
  <meta name="search-keywords" content="for" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>für</h1>
  <p>Eine der gebräuchlichsten Möglichkeiten, eine <a class="glossterm" data-glossterm="Anweisung" href="#">Anweisung</a> (oder mehrere Anweisungen) mehrfach zu iterieren, ist die Verwendung einer <span class="inline">for</span> <span class="notranslate">loop</span>, die diese Form hat:</p>
  <p class="code">for (&lt;assignment&gt;; &lt;expression&gt;; &lt;operation&gt;;)<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p>
  <p>Das funktioniert folgendermaßen: Zuerst wird die Zuweisung ausgeführt, die einer Variablen einen Wert zuweist, dann wird der <a class="glossterm" data-glossterm="Ausdruck" href="#">Ausdruck</a> ausgewertet und, wenn er <span class="inline">true</span> ist, werden die Anweisungen in den geschweiften Klammern{} ausgeführt. Als nächstes wird die Operation an der zugewiesenen Variablen ausgeführt und dann wird der Ausdruck erneut ausgewertet. Dies <span class="notranslate">loop</span> wird so lange fortgesetzt, bis der Ausdruck als <span class="inline">false</span> erkannt wird.</p>
  <p>Das klingt vielleicht kompliziert, wenn man es so schreibt, aber man sollte es so interpretieren:</p>
  <ol>
    <li>Die erste Zuweisung initialisiert die for-Schleife</li>
    <li>Der Ausdruck prüft, ob die <span class="notranslate">loop</span> beendet werden soll.</li>
    <li>Die Anweisung wird ausgeführt</li>
    <li>Die Operation wird durchgeführt</li>
    <li>Gehen Sie zurück zu Schritt 2 und führen Sie den Ausdruck erneut aus und fahren Sie fort oder verlassen Sie die Schleife</li>
  </ol>
  <p>Dies ist äußerst nützlich für sich wiederholende Aufgaben, die auf andere Weise mehrere Zeilen <span class="notranslate">code</span> erfordern würden, und wird häufig als Zähler für die Auswertung von Arrays, das Zeichnen von Dingen, das Setzen inkrementeller Werte usw. verwendet. Das folgende <span class="notranslate">code</span> Beispiel zeigt eine typische Anwendung für diese Art von Anweisung:</p>
  <p class="code">for (var i = 0; i &lt; 10; i += 1)<br />
    {<br />
        draw_text(32, 32 + (i * 32), string(i) + &quot;. &quot;+ string(scr[i]));<br />
    }</p>
  <p>Die obige <span class="notranslate">code</span> initialisiert eine <span class="inline">for</span> <span class="notranslate">loop</span>, die bei 0 beginnt und bis (und einschließlich) 9 zählt, und verwendet dann den <span class="notranslate">loop</span> Wert von <span class="inline">i</span>, um die in einem Array gespeicherten Werte auf dem Bildschirm zu zeichnen. Beachten Sie, dass die Variable <span class="inline">for</span> <span class="notranslate">loop</span> <span class="inline">i</span> nicht nur verwendet wird, um <span class="notranslate">loop</span> durch das Array zu ziehen, sondern auch, um eine Zahl zu zeichnen und <span data-keyref="GameMaker Name">GameMaker</span> mitzuteilen, wohin die Werte im Raum gezeichnet werden sollen. Diese Flexibilität ist einer der Hauptgründe, warum <span class="inline">for</span> <span class="notranslate">loops</span> in der Programmierung so wichtig ist.</p>
  <p><strong>Wann sollten Sie <span class="inline">for</span> <span class="notranslate">loop</span> verwenden?</strong> Immer dann, wenn Sie eine feste Anzahl von Iterationen über eine oder mehrere Anweisungen durchführen müssen, wobei Sie die <a class="glossterm" data-glossterm="Iteration" href="#">Iteration</a>, die gerade ausgeführt wird, im Auge behalten und diesen Iterationswert verwenden.</p>
  <p class="note"><b>HINWEIS</b>: Wenn Sie mit anderen zusammenarbeiten, werden Sie mehrere Beispiele sehen, in denen die Variablen &quot;<span class="inline">i</span>&quot; und &quot;<span class="inline">j</span>&quot; für die Zählervariable <span class="notranslate">loop</span> verwendet werden. Dies sind <b>keine</b> obligatorischen Variablennamen und Sie können alles Mögliche wie &quot;<span class="inline">a</span>&quot; oder &quot;<span class="inline">foo</span>&quot; oder was auch immer verwenden. Die Verwendung von &quot;<span class="inline">i</span>&quot; und &quot;<span class="inline">j</span>&quot; ist einfach eine Standardkonvention in der Programmierung.</p>
  <p>Es ist erwähnenswert, dass Sie die speziellen Anweisungen <span class="inline"><a href="break.htm">break</a></span> und <span class="inline"><a href="continue.htm">continue</a></span> auch innerhalb von <span class="inline">for</span> <span class="notranslate">loop</span> verwenden können. Wenn Sie <span class="inline">break</span> verwenden, wird <span class="notranslate">loop</span> sofort beendet und mit <span class="notranslate">code</span> fortgefahren, das sich in dem Ereignis oder der Funktion befindet, nachdem <span class="notranslate">loop</span> beendet sein sollte, z.B.:</p>
  <p class="code">var _inst = noone;<br />
    for (var i = 0; i &lt; 10; i += 1)<br />
    {<br />
        _inst = instance_find(obj_Enemy_Parent, i);<br />
        if instance_exists(_inst)<br />
        {<br />
            if _inst.object_index == obj_Enemy_Melee<br />
            {<br />
                break;<br />
            }<br />
        }<br />
    }<br />
    target = _inst;</p>
  <p>Die obige <span class="notranslate">code</span> <span class="notranslate">loops</span> durch die 10 nächstgelegenen Instanzen des gegebenen &quot;Eltern&quot;-Objekts, und wenn eine Instanz gefunden wird, prüft es die Instanz-Objekt-ID, und wenn es eine Instanz von <span class="inline">obj_Enemy_Melee</span> ist, dann wird <span class="notranslate">loop</span> mit <span class="inline">break</span> beendet und der ID-Wert einer Variablen zugewiesen (wenn keine Instanz gefunden wird, dann wird das Schlüsselwort <span class="inline"><a href="../Instance_Keywords.htm">noone</a></span> der Variablen hinzugefügt).</p>
  <p>Ein Beispiel für die Verwendung von <span class="inline">continue</span> in einer <span class="inline">for</span> <span class="notranslate">loop</span> wäre:</p>
  <p class="code">var _val = 0;<br />
    for (var i = 0; i &lt; 10; i += 1)<br />
    {<br />
        if (val_array[i] &lt;= 0)<br />
        {<br />
            continue;<br />
        }<br />
        _val += val_array[i];<br />
    }<br />
    draw_text(32, 32, &quot;Positive Values Total = &quot; + string(_val));</p>
  <p>Diese <span class="notranslate">code</span> prüft den Wert, der in jeder Array-Position eines <a href="../Arrays.htm">1D-Arrays</a> der Länge 10 gespeichert ist, und wenn einer davon kleiner oder gleich 0 ist, wird <span class="inline">continue</span> die <span class="notranslate">loop</span>, was bedeutet, dass die aktuelle Iteration endet, <span class="inline">i</span> inkrementiert wird und die nächste <span class="notranslate">loop</span> Iteration gestartet wird. Ist der Wert größer als 0, wird er zur lokalen Variablen <span class="inline">_val</span> addiert, und nach Beendigung der <span class="notranslate">loop</span> wird der Gesamtwert auf den Bildschirm gezeichnet.</p>
  <p>Weitere Beispiele für <span class="notranslate">loop</span> Schlüsselwörter finden Sie in den Abschnitten über <a href="repeat.htm"><span class="inline">repeat</span></a>, <a href="while.htm"><span class="inline">while</span></a>, und <a href="do___until.htm"><span class="inline">do / until</span></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Language_Features.htm">Sprachliche Merkmale</a></div>
        <div style="float:right">Nächste: <a href="switch.htm"><span class="notranslate">switch</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
for
-->
  <!-- TAGS
for
-->
</body>
</html>