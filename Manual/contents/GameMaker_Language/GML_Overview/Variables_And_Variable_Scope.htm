<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Variablen und Variablenumfang</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining variables and their scoping in GML" />
  <meta name="rh-index-keywords" content="Variables And Variable Scope" />
  <meta name="search-keywords" content="variables,scope,local variables,instance variables,global variables" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Variablen und Variablenumfang</h1>
  <p>Wie jede Programmiersprache verwendet <b>GML</b> <i>Variablen</i> als Grundeinheit für die meisten Programmiervorgänge. Variablen werden verwendet, um Informationen im Speicher des Geräts für eine spätere (oder sofortige) Verwendung zu speichern, und sie werden mit einem Namen versehen, damit Sie in den Funktionen <span class="notranslate">runtime</span> und <span class="notranslate">script</span> auf sie verweisen können. Eine Variable in <b>GML</b> kann viele verschiedene Informationen speichern <a href="Data_Types.htm"><strong>Datentypen</strong></a>Eine Variable in GML kann viele verschiedene Informationen speichern, wie z.B. eine reelle Zahl (z.B.: 100, 2.456575, -56 etc...), eine Zeichenkette (z.B.: &quot;Hallo Welt!&quot;), eine ganze Zahl (z.B.: 1, 556, -7) oder einen booleschen Wert (<span class="inline">true</span> oder <span class="inline">false</span>), sowie andere Dinge:</p>
  <p class="code">var _num = 126.4545;<br />
    var _str = &quot;Hello World&quot;;<br />
    new_num = _num * 100;<br />
    global.my_string = _str + &quot; I said&quot;;</p>
  <p>Sie können auch Variablen verwenden, um zum Beispiel die von Funktionen zurückgegebenen Werte zu speichern:</p>
  <p class="code">var _id = instance_nearest(x, y, obj_Tree);<br />
    root = sqrt(1000);<br />
    global.str = string_upper(&quot;Hello World&quot;);</p>
  <p>Eine Variable ist also etwas, das wir benennen und verwenden können, um einen Wert zur späteren Verwendung in einer oder mehreren Operationen zu speichern. Ein großartiges Beispiel für eine Variable in der &quot;realen Welt&quot; ist <b>pi 𝜋 . </b>.. eine Variable, die jeder kennt und die den Wert 3,14159265 (etc...) enthält. Warum haben wir sie in unserer Sprache? Nun, es ist viel einfacher, zu jemandem &quot;pi&quot; zu sagen als &quot;drei Komma eins vier eins fünf neun zwei sechs fünf&quot;! Die Benennung von Dingen auf diese Weise macht das Leben viel einfacher und bedeutet auch, dass wir, sollte sich der Wert dieser Variablen jemals ändern, die Zahl nicht überall ändern müssen, da der <i>Variablenname</i> immer noch derselbe ist.</p>
  <p>Bei der Bildung von Variablen in <b>GML</b> muss der Name mit einem Buchstaben oder dem Unterstrichsymbol &quot;_&quot; beginnen und darf nur Buchstaben, Zahlen und das Unterstrichsymbol &quot;_&quot; mit einer maximalen Länge von 64 Zeichen enthalten. Gültige Variablen sind also Dinge wie <span class="inline">fish</span>, <span class="inline">foo_bar</span>, <span class="inline">num1</span> oder <span class="inline">_str</span>, während ungültige Variablen <span class="inline">6fish</span>, <span class="inline">foo bar</span> oder <span class="inline">*num</span> wären.</p>
  <p>In vielen Programmiersprachen müssen Sie eine Variable erst &quot;zuweisen&quot;, bevor Sie sie verwenden können. Das bedeutet im Wesentlichen, dass Sie dem Computer den Namen mitteilen, den Sie für die Variable verwenden möchten, und ihr einen Anfangswert zuweisen. Die Variable erhält dann einen Platz im Speicher, um den Wert zu speichern oder Operationen mit ihr durchzuführen. Die Zuweisung einer Variablen erfolgt in Form von:</p>
  <p class="code">&lt;variable&gt; = &lt;expression&gt;;</p>
  <p>Ein Ausdruck kann ein einfacher Wert sein, kann aber auch komplizierter sein, so dass man, anstatt einer Variablen einen Wert zuzuweisen, auch einen Wert zum aktuellen Wert der Variablen hinzufügen kann, zum Beispiel mit <span class="inline"><b>+=</b></span>:</p>
  <p class="code">a = 100;   // Assigning a simple value<br />
    b = 200;<br />
    c = 300;<br />
    a += b;    // Assigning with operation<br />
    a = b + c; // Assigning with expression</p>
  <p class="note"><span class="note">HINWEIS</span> Die Website <span class="notranslate">GameMaker Language</span> akzeptiert auch &quot;<span class="inline">:=</span>&quot; für Zuweisungen, obwohl dies in der Regel nicht die gebräuchlichste Art der Zuweisung ist:</p>
  <p class="code">&lt;variable&gt; := &lt;expression&gt;;</p>
  <p>In ähnlicher Weise können Sie mit <span class="inline"><b>-=</b></span> subtrahieren, mit <span class="inline"><b>*=</b></span> multiplizieren, mit <span class="inline"><b>/=</b></span> dividieren oder mit <span class="inline"><b>|=</b></span>, <span class="inline"><b>&amp;=</b></span> oder <span class="inline"><b>^=</b></span> bitweise Operatoren verwenden. Sie können auch mit <span class="inline"><b>++</b></span>, <span class="inline"><b>--</b></span><i>eins</i> zu einem Wert addieren oder von ihm subtrahieren. Weitere Informationen finden Sie im Abschnitt über <a href="Expressions_And_Operators.htm">Ausdrücke und Operatoren</a>.</p>
  <p>Beachten Sie, dass Sie Folgendes <i>nicht</i> tun <i>können</i> (oder irgendeine Variante):</p>
  <p class="code">a = b = c = 4;</p>
  <p>Stattdessen sollte es so gemacht werden:</p>
  <p class="code">a = 4;<br />
    b = 4;<br />
    c = 4;</p>
  <p>Die oben gezeigten Variablenzuweisungen sind alle <strong>Instanzvariablen </strong>, aber es gibt noch drei andere Hauptvariablenkategorien, wenn Sie mit <span data-keyref="GameMaker Name">GameMaker</span> programmieren, und jede hat ihren eigenen <strong>Anwendungsbereich </strong>(der als ihr Einsatzgebiet oder ihre Reichweite betrachtet werden kann). Die verschiedenen Arten von Variablen und ihre Reichweite werden auf den folgenden Seiten beschrieben:</p>
  <ul class="colour">
    <li><a href="Variables/Local_Variables.htm">Lokale Variablen</a></li>
    <li><a href="Variables/Instance_Variables.htm">Instanz-Variablen</a></li>
    <li><a href="Variables/Global_Variables.htm">Globale Variablen</a></li>
    <li><a href="Variables/Constants.htm">Konstanten</a></li>
  </ul>
  <p>Die <span class="notranslate">GameMaker Language</span> hat auch mehrere verschiedene eingebaute Variablen, die jeden der oben genannten Bereiche haben können (außer <i>lokal</i>). Diese Variablen sind besonders, da sie standardmäßig als Teil der Objekte und Räume in der Spielwelt enthalten sind. Einige eingebaute globale Variablen sind im oben erwähnten Abschnitt aufgelistet, und die verschiedenen Teile des Handbuchs für <span class="notranslate">sprites</span>, Räume, Objekte, etc... umreißen auch die jeweils verfügbaren eingebauten Variablen. Beispiele für solche eingebauten Instanzvariablen wären:</p>
  <ul class="colour">
    <li><span class="inline"><a href="../GML_Reference/Asset_Management/Sprites/Sprite_Instance_Variables/sprite_index.htm">sprite_index</a></span></li>
    <li><a href="../GML_Reference/Asset_Management/Paths/Path_Variables/path_index.htm"><span class="inline">path_scale</span></a></li>
    <li><a href="../GML_Reference/Asset_Management/Instances/Instance_Variables/speed.htm"><span class="inline">speed</span></a></li>
  </ul>
  <p>Und Beispiele für eingebaute globale Variablen wären:</p>
  <ul class="colour">
    <li><span class="inline"><a data-xref="{title}" href="../GML_Reference/Cameras_And_Display/Cameras_And_Viewports/view_xport.htm">view_xport</a></span></li>
    <li><span class="inline"><a data-xref="{title}" href="../GML_Reference/Asset_Management/Instances/instance_count.htm">instance_count</a></span></li>
    <li><span class="inline"><a data-xref="{title}" href="../GML_Reference/Asset_Management/Rooms/room.htm">room</a></span></li>
  </ul>
  <p>Die meisten eingebauten Variablen können wie andere Variablen geändert und gesetzt werden, und einige können sogar <a href="Arrays.htm">Arrays</a> sein, nur dass man sie nicht wie eine normale Variable setzen muss, um sie zu erstellen, da sie bereits mit einem Standardwert initialisiert sind.</p>
  <p>Schließlich gibt es eine Reihe von Funktionen, die dem Setzen, Abrufen oder Überprüfen von Variablen gewidmet sind und auf der folgenden Seite zur Verfügung stehen:</p>
  <ul class="colour">
    <li><a href="../GML_Reference/Variable_Functions/Variable_Functions.htm">Variable Funktionen</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="GML_Overview.htm">GML-Übersicht</a></div>
        <div style="float:right">Nächste: <a data-xref="{title}" href="Data_Types.htm">Datentypen</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
variables
variables - built-in
variables - scope
declaring variables
scope
built-in variables
-->
  <!-- TAGS
variables
-->
</body>
</html>