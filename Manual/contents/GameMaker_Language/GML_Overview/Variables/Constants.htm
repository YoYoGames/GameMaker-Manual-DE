<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Konstanten</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the different GML constants" />
  <meta name="rh-index-keywords" content="Constants,macro,enum,pointer_invalid,pointer_null,undefined,NaN,infinity,true,false,pi" />
  <meta name="search-keywords" content="constants,macros,enums,macro,enum" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Konstanten</h1>
  <p>Eine Konstante ist eine Art von Variable, die einmal zu Beginn des Spiels festgelegt wird und sich dann nicht mehr ändert. Tatsächlich <em>können</em> konstante Werte <em>nicht mehr geändert werden, nachdem sie deklariert wurden</em>. Daher sind sie ideal für die Speicherung von Werten, die während des Spiels zur Identifizierung spezieller Daten verwendet werden.</p>
  <p>In <span class="notranslate">GameMaker Language</span> gibt es zwei Arten von benutzerdefinierten Konstanten: <strong>Makros</strong> und <strong>Enums</strong>, die beide im Folgenden erläutert werden. Beachten Sie auch, dass jeder Wert, der immer gleich ist, als Konstante eingestuft wird, unabhängig vom <a href="../Data_Types.htm">Datentyp</a>, z. B. eine Zeichenkette oder die Zahl 3.</p>
  <p class="note"><span class="note">HINWEIS</span> <span class="notranslate">GameMaker Language</span> verfügt auch über eine Reihe von eingebauten Konstanten, die zur Kennzeichnung bestimmter Dinge verwendet werden. Diese werden auf den entsprechenden Seiten für die <span class="notranslate">runtime</span> Funktionen, die sie benötigen, im Abschnitt <a href="../../GML_Reference/GML_Reference.htm">GML-Referenz</a> beschrieben.</p>
  <h2>Makros</h2>
  <p>Makros sind zwar keine Variablen, aber sie ähneln ihnen in ihrer Verwendung, d. h. es handelt sich um benannte Werte, die Sie in Ihrem <span class="notranslate">code</span> verwenden können, um <a class="glossterm" data-glossterm="fest codiert" href="#">hart kodierte</a> Werte zu ersetzen. Im Grunde ist ein Makro eine benannte Variable, die einen Ausdruck enthält. Du kannst deine eigenen Makros mit dem <a href="../Script_Functions.htm">Skript-Editor</a> definieren und sie dann in deinen <span class="notranslate">code</span> und Aktionen verwenden, als wären sie reguläre Variablen, mit dem einzigen Unterschied, dass sie <i>im Spiel nicht geändert werden können</i>.</p>
  <p>Die <span class="notranslate">syntax</span> Struktur für ein Makro ist wie folgt:</p>
  <p class="code">#macro <i>&lt;variable&gt;</i> <i>&lt;expression&gt;</i></p>
  <p>Nehmen wir an, Sie definieren das folgende Makro &quot;<span class="inline">total_weapons</span>&quot;:</p>
  <p class="code">#macro total_weapons 10</p>
  <p class="note_heading">Makro <span class="notranslate">syntax</span>...</p>
  <p class="note">Die oben gezeigte <span class="notranslate">syntax</span> muss korrekt verwendet werden, um Makros zu definieren. Sie können weder ein Gleichheitszeichen (wie bei Variablen) noch ein Semikolon am Ende (wie in einer normalen Anweisung) verwenden. Andernfalls wird Ihre Makrodefinition ungültig.<br>
    <br>
    Dies ist zum Beispiel nicht die richtige Art, ein Makro zu definieren:<br>
    <br>
   <span class="inline2">#macro total_weapons = 10;</span><br>
    <br>
    Wenn Sie das Gleichheitszeichen und den Doppelpunkt entfernen, wird daraus eine gültige Makrodefinition.
  </p>
  <p>Sie könnten dies dann in Ihrem <span class="notranslate">code</span> wie folgt verwenden:</p>
  <p class="code">pos++;<br />
    <br />
    if (pos &gt;= TOTAL_WEAPONS)<br />
    {<br />
        pos = 0;<br />
    }
  </p>
  <p>Beachten Sie, dass Sie den Wert der Konstante nicht ändern können, so dass <span class="notranslate">code</span> das Spiel zum Absturz bringen wird:</p>
  <p class="code">total_weapons = 11;</p>
  <p>Sie können ein Makro an beliebiger Stelle in Ihrem <span class="notranslate">code</span> oder in einem Skript definieren und es wird <i>vorkompiliert</i> und in Ihr Spiel eingefügt, als ob es von Anfang an vorhanden wäre. Wir empfehlen jedoch, dass Sie ein spezielles <span class="notranslate">script</span> -Asset erstellen und alle Ihre Makros dort definieren. Das ist später einfacher zu organisieren und zu debuggen!</p>
  <p>Wenn Sie den Wert eines Makros zur Laufzeit ändern müssen, sollten Sie es wahrscheinlich zu einer <a href="Global_Variables.htm">globalen Variablen</a> machen, da diese von <span class="notranslate">code</span> während eines Spiels geändert werden können, es sei denn, Sie setzen das Makro als<span> <a href="../Runtime_Functions.htm">Laufzeit </a></span> <a href="../Runtime_Functions.htm"><span class="notranslate">function</span></a>. Wenn Sie das Makro auf eine Funktion setzen, bedeutet das, dass diese Funktion jedes Mal aufgerufen wird, wenn Sie das Makro verwenden. Zum Beispiel:</p>
  <p class="code">#macro col make_colour_hsv(irandom(255), 255, 255)</p>
  <p>Sie würden dieses Makro dann etwa so aufrufen:</p>
  <p class="code">image_blend = col;</p>
  <p>Wenn Sie dieses <span class="notranslate">code</span> verwenden, wird das Bild bei jeder Verwendung des Makros in einer anderen Farbe überblendet. Es ist erwähnenswert, dass Sie Makros auch über mehrere Zeilen aufteilen können, indem Sie das Zeichen <span class="inline"><span class="inline">\</span> verwenden, um anzuzeigen, wo der Zeilenumbruch stattfindet. Ein Beispiel wäre so etwas wie:</p>
  <p class="code">#macro hello show_debug_message(&quot;Hello&quot; + \<br />
    string(player_name) + \<br />
    &quot;, how are you today?&quot;);</p>
  <p>Dies ist rein kosmetisch, da die Aufteilung eines Makros auf diese Weise keine Auswirkungen auf das Ergebnis des endgültigen Makros hat, wenn es verwendet wird, und dient lediglich dazu, mehrzeiligen Text in Makros zu unterstützen, die längere Zeilen <span class="notranslate">code</span> haben.</p>
  <p>Ein sehr wichtiges Merkmal von Makros ist, dass sie für die Verwendung mit bestimmten <a href="../../../Settings/Configurations.htm">Konfigurationen</a> (Configs) definiert werden können, d. h. Sie können denselben Makronamen verwenden, ihm aber je nach der aktuell ausgewählten Konfiguration unterschiedliche Werte geben. Wenn Sie z. B. eine Konfiguration für <span class="notranslate">Android</span> Anzeigen und eine andere für <span class="notranslate">iOS</span> Anzeigen haben, können Sie ein einziges Makro definieren, das den erforderlichen App-ID-Wert enthält:</p>
  <p class="code">#macro ad_id &quot;&quot;;<br />
    #macro Android:ad_id &quot;com.yoyogames.googlegame&quot;<br />
    #macro iOS:ad_id &quot;com.yoyogames.appstoregame&quot;</p>
  <p>Wie Sie sehen können, geben Sie zuerst den Konfigurationsnamen, dann einen Doppelpunkt <span class="inline">:</span> und dann den Makronamen und den Wert an. Beachten Sie, dass zwischen dem Doppelpunkt <span class="inline">:</span> und dem Konfigurationsnamen oder dem Makronamen kein Leerzeichen stehen darf, da sonst ein Fehler auftritt.</p>
  <h2 id="enumhead">Enums</h2>
  <p>Ein Enum ist ein &quot;Aufzähler&quot;, der es Ihnen im Wesentlichen ermöglicht, einen eigenen begrenzten Datentyp mit einer Liste konstanter Werte zu erstellen, die wie folgt aufgebaut sind</p>
  <p class="code">enum <i>&lt;variable&gt;</i><br />
    {<br />
    <i>    &lt;MEMBER&gt;</i> [= <i>&lt;VALUE&gt;</i>],<br />
    <i>    &lt;<i>MEMBER</i>&gt;</i> [= <i>&lt;<i>VALUE</i>&gt;</i>],<br />
        // etc...<br />
    }
  </p>
  <p>Im folgenden Beispiel erstellen wir ein Enum für die Farben des Regenbogens und weisen ihm verschiedene Konstanten und Standardwerte zu:</p>
  <p class="code">enum rainbowcolours<br />
    {<br />
        RED,<br />
        ORANGE,<br />
        YELLOW,<br />
        GREEN,<br />
        BLUE,<br />
        INDIGO,<br />
        VIOLET<br />
    }</p>
  <p>Die Enum-Einträge können nur <b>Integer-Zahlen</b> oder <b><a class="glossterm" data-glossterm="Ausdruck" href="#">Ausdrücke</a></b> mit vorhergehenden Enums sein <b>, die zu einer Integer-Zahl ausgewertet werden</b>, und sind standardmäßig von 0 aufwärts nummeriert, so dass unser obiges Beispiel standardmäßig <span class="inline">red = 0</span>, <span class="inline">orange = 1</span>, <span class="inline">yellow = 2</span>, usw. lauten würde.</p>
  <p>Sie können den Enum-Variablen auch zum Zeitpunkt der Erstellung Werte zuweisen:</p>
  <p class="code">enum enum_test<br />
    {<br />
        VAL = 10<br />
    }<br />
    <br />
    enum RAINBOW<br />
    {<br />
        RED = 5,<br />
        ORANGE = 5 * 2,<br />
        YELLOW = 15,<br />
        GREEN = 20,<br />
        BLUE = 25,<br />
        INDIGO = 30,<br />
        VIOLET = 35 * ENUM_TEST.VAL<br />
    }
  </p>
  <p>Beachten Sie, dass im obigen Beispiel eine andere Aufzählung verwendet wird, um einen Ausdruck für &quot;violet&quot; zu erstellen. Dies funktioniert nur, wenn die Enum, auf die verwiesen wird, <i>vor</i> der Enum erstellt wurde, die sie in einem Ausdruck verwendet, aber es funktioniert nicht für Variablen oder Funktionen, da der Enum-Wert in der Lage sein muss, als Konstante ausgewertet zu werden, wenn das Projekt <a class="glossterm" data-glossterm="Kompilieren" href="#">kompiliert</a> wird. Beachten Sie auch, dass alle Enum-Werte als <b>Integer-Werte</b> ausgewertet werden, und wenn Sie Ihre eigenen erstellen, sollten Sie sich bewusst sein, dass <i>nur Integer-Werte zulässig sind</i>, damit Enums funktionieren. Dieser Wert kann eine beliebige Integer-Zahl sein, die eine Fließkommazahl mit doppelter Genauigkeit darstellen kann, einschließlich negativer Werte.</p>
  <p>Um später auf den Wert innerhalb eines bestimmten Aufzählungstyps zuzugreifen, können Sie die Methode point <span class="inline">&quot;.&quot;</span> verwenden, etwa so:</p>
  <p class="code">variable = &lt;enum_name&gt;.&lt;<em>enum_variable</em>&gt;;</p>
  <p>Nehmen wir als Beispiel die Aufzählung &quot;<span class="inline">rainbowcolours</span>&quot;, die wir oben in <span class="notranslate">code</span> erstellt haben:</p>
  <p class="code">colour_value = rainbowcolours.green * rainbowcolours.red;</p>
  <p>Die Variable <span class="inline">colour_value</span> würde nun den Wert 100 (20 * 5) enthalten.</p>
  <p>Beachten Sie, dass Sie die Werte für eine Enum-Konstante <em>nicht </em>mehr ändern <em>können </em>, nachdem sie erstellt wurde, genauso wie Sie Makros nicht mehr ändern können, nachdem sie erstellt worden sind.</p>
  <p class="note"><strong>HINWEIS</strong>: Enum-Werte werden als <span class="notranslate">int64s</span> gespeichert, so dass die Ausführung von <span class="inline"><a href="../../GML_Reference/Variable_Functions/is_real.htm">is_real()</a></span> auf sie <span class="inline">false</span> zurückgibt.</p>
  <p> </p>
  <h2>Eingebaute Konstanten</h2>
  <p>Die folgende Tabelle zeigt eine Liste der eingebauten Konstanten, die von einigen Funktionen und Operationen in Ihren Projekten zurückgegeben werden können:</p>
  <table>
    <tbody>
      <tr>
        <th>Konstante</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">pointer_null</span></td>
        <td>Diese Konstante zeigt an, dass der Zeiger nicht auf etwas Sinnvolles zeigt (dasselbe wie<span> </span><span class="inline">NULL</span> <span> </span> in C++ oder <span class="inline">null</span> in C#).<br>
          Dieser Wert ist <a class="glossterm" data-glossterm="falsy" href="../Data_Types.htm#">falsy</a>.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">pointer_invalid</span></td>
        <td>Diese Konstante bedeutet einfach, dass der Wert kein gültiger Zeiger ist</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">undefined</span></td>
        <td>Diese Konstante wird zurückgegeben, wenn eine Funktion <em>etwas</em> zurückgeben muss, aber keinen geeigneten oder &quot;richtigen&quot; Wert zurückgeben kann.<br>
          Dieser Wert ist <a class="glossterm" data-glossterm="falsy" href="../Data_Types.htm#">falsy</a>.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">NaN</span></td>
        <td><span>Diese Konstante, die zurückgegeben werden kann, wenn <span class="notranslate">compiler</span> das Ergebnis einer Operation nicht als Zahl auswerten kann - zum Beispiel kann 0 / 0 nicht als reelle Zahl definiert werden und wird daher dargestellt durch </span><span class="inline">NaN</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">infinity</span></td>
        <td><span class="inline"><span data-highlight-container="true"><span data-highlight="true">
                <font face="open_sansregular"><span style="font-size: 18px; font-weight: 400;">This constant </span>
              <span>bezieht sich auf eine Zahl, die als unendlich angesehen wird, z. B. das Ergebnis, das man erhält, wenn man eine beliebige Fließkommazahl durch Null dividiert, z. B.: 1,0/0.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">true</span></td>
        <td>Diese Konstante steht für den Wert 1, den <span data-keyref="GameMaker Name">GameMaker</span> als boolesches &quot;true&quot; auswertet (beachten Sie, dass jeder Wert gleich oder größer als 1 als <span class="inline">true</span> ausgewertet wird).</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">false</span></td>
        <td>Diese Konstante steht für den Wert 0, den <span data-keyref="GameMaker Name">GameMaker</span> als boolesches &quot;false&quot; auswertet (beachten Sie, dass jeder Wert kleiner oder gleich 0 als <span class="inline">false</span> ausgewertet wird).</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">pi</span></td>
        <td>Diese Konstante entspricht dem Wert von Pi: 3,141592653589793280 usw... obwohl der genaue Wert von verschiedenen Faktoren wie dem Betriebssystem oder der <span class="notranslate">platform</span> abhängt.</td>
      </tr>
    </tbody>
  </table>
  <p>Siehe <a data-xref="{text}" href="../../../Additional_Information/Type_Tables.htm#h">Gleichheitstabelle</a> für Informationen über Gleichheitsvergleiche für einige der oben aufgeführten Konstanten.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Variables_And_Variable_Scope.htm">Variablen und Variablenumfang</a></div>
        <div style="float:right">Nächste: <a href="Local_Variables.htm">Lokale Variablen</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
constants
macros
enums
macro
enum
-->
  <!-- TAGS
constants
macro
enum
-->
</body>
</html>