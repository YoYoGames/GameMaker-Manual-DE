<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physik_gelenk_friktion_erzeugen</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_friction_create" />
  <meta name="rh-index-keywords" content="physics_joint_friction_create" />
  <meta name="search-keywords" content="physics_joint_friction_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physik_gelenk_friktion_erzeugen</h1>
  <p>Das Reibungsgelenk unterscheidet sich von allen anderen Gelenken in der Physiksimulation insofern, als die erstellte Verbindung nicht die Position oder Bewegung der Instanz einschränkt, sondern ihre Geschwindigkeit und Drehung. Dies funktioniert, indem die maximalen Eingangswerte für Kraft und Drehmoment auf die zweite Instanz angewendet werden, um die Geschwindigkeit und den Drehimpuls auf die gleichen Werte wie die der ersten Instanz zu bringen. Wenn Sie also eine stationäre und eine sich bewegende Instanz haben und diese mit einem Reibungsgelenk verbinden, wird die sich bewegende Instanz allmählich langsamer, bis sie ebenfalls stationär ist. Wenn sich beide Instanzen bewegen, wird die Bewegungsgeschwindigkeit der zweiten Instanz an die der ersten Instanz angepasst.</p>
  <p><img>Wie bei den meisten anderen Gelenken geben Sie die Instanzen an, die miteinander verbunden werden sollen, sowie die Position, an der das Gelenk im Raum erstellt werden soll. Du gibst dann die maximale Kraft und das maximale Drehmoment (Richtungs- und Rotationsreibung) an, und wenn du den &quot;col&quot;-Wert auf <span class="inline">true</span> setzt, dann können die beiden Instanzen miteinander interagieren und kollidieren, aber <i>nur</i>, wenn sie Kollisionsereignisse haben, aber wenn es auf <span class="inline">false</span> gesetzt ist, werden sie nicht kollidieren, egal was passiert.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">physics_joint_friction_create(inst1, inst2, anchor_x, anchor_y, max_force, max_torque, col)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">inst1</span></td>
        <td><span data-keyref="Type_ID_Instance">Instanz-ID</span></td>
        <td><span class="notranslate">The first instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">inst2</span></td>
        <td><span data-keyref="Type_ID_Instance">Instanz-ID</span></td>
        <td><span class="notranslate">The second instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">anchor_x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">anchor_y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">max_force</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The maximum frictional force that will be applied</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">max_torque</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The maximum rotational force that will be applied</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">col</span></td>
        <td><span data-keyref="Type_Bool">Boolesche</span></td>
        <td><span class="notranslate">Whether the two instances can collide (true) or not (false)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_ID_Physics_Joint">Physics Joint ID</span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var mainFixture, o_id;<br />
    mainFixture = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);<br />
    o_id = instance_create_layer(x+300, y, &quot;Instances&quot;, obj_Rudder);<br />
    physics_fixture_bind(mainFixture, id);<br />
    physics_fixture_bind(mainFixture, o_id);<br />
    physics_joint_friction_create(id, o_id, x, y, 10, 0.3, true);<br />
    physics_fixture_delete(mainFixture);</p>
  <p>Die obige <span class="notranslate">code</span> erstellt ein Fixture und bindet es an zwei Instanzen, bevor sie beide mit einem Friction Joint verbunden werden.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Rücken: <a href="Joints.htm">Gelenke</a></div>
        <div style="float:right">Nächste: <a href="physics_joint_delete.htm"><span class="notranslate">physics_joint_delete</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_friction_create
-->
  <!-- TAGS
physics_joint_friction_create
-->
</body>
</html>