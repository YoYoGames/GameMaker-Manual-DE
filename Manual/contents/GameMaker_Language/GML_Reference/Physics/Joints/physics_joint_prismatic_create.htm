<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physik_gelenke_prismatisch_erzeugen</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_prismatic_create" />
  <meta name="rh-index-keywords" content="physics_joint_prismatic_create" />
  <meta name="search-keywords" content="physics_joint_prismatic_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physik_gelenke_prismatisch_erzeugen</h1>
  <p>Wie ein Drehgelenk hat auch das prismatische Gelenk nur einen Freiheitsgrad, aber bei diesem Gelenk handelt es sich um ein Richtungsgelenk in Bezug auf eine Achse und nicht um ein Drehgelenk, das jede Form der Drehung verhindert. Hier ist ein Bild, das Ihnen die Funktionsweise veranschaulicht:</p>
  <p><img>Wir haben zwei Instanzen, die am Ankerpunkt verbunden sind, mit einer Achse für die Bewegung, die von <span class="notranslate">vector</span> definiert wird, den beiden x/y-Koordinaten der w_axis relativ zu den (0,0)-Koordinaten der physikalischen Welt (so würde eine x-Komponente von 0 und eine y-Komponente von 1 (0,1) das Gelenk zu einem vertikalen prismatischen Gelenk machen). Dieses Gelenk kann sich dann <i>nur</i> relativ zu dieser Achse bewegen, wie eine Feder oder ein Kolben. Wenn Sie die untere oder obere Trans-Grenze festlegen, begrenzen Sie im Grunde genommen den Betrag der Bewegung entlang dieser Achse, wobei die 0-Position genau der Punkt ist, den Sie mit w_anchor x/y definiert haben, so dass ein negativer Wert nach &quot;links&quot; von diesem Punkt entlang der Achse und ein positiver Wert nach &quot;rechts&quot; gehen würde, wie im folgenden Diagramm gezeigt (beachten Sie, dass &quot;links&quot; und &quot;rechts&quot; relative Begriffe sind!):</p>
  <p><img>Sie können auch festlegen, ob das Gelenk einen Motor hat oder nicht. Diese Richtung wird durch die Motorgeschwindigkeit definiert, wobei eine positive Zahl in Richtung der Achsenkoordinaten (&quot;rechts&quot;) und eine negative Zahl in Richtung des Ankerpunkts (&quot;links&quot;) zeigt. Die &quot;max_motor_force&quot; <span class="notranslate">argument</span> dient dazu, die Geschwindigkeit der Bewegung zu begrenzen, um einen ständig beschleunigenden Motor zu vermeiden und um den Einfluss einer Kollision auf die Bewegung zu begrenzen. Auf diese Weise können Sie einen Gelenkmotor verwenden, um die Gelenkreibung zu simulieren, indem Sie die Gelenkgeschwindigkeit auf Null und die maximale Kraft auf einen kleinen, aber signifikanten Wert setzen. Der Motor wird versuchen, die Bewegung des Gelenks zu verhindern, wird aber bei einer erheblichen Belastung nachgeben.</p>
  <p>Wie bei allen Gelenken, wenn Sie die &quot;col&quot; Wert auf <span class="inline">true</span> dann die beiden Instanzen können interagieren und miteinander kollidieren, aber <i>nur</i>, wenn sie Kollisions-Ereignisse haben, aber wenn es auf <span class="inline">false</span> eingestellt ist, werden sie nicht kollidieren, egal was.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">physics_joint_prismatic_create(inst1, inst2, w_anchor_x, w_anchor_y, w_axis_x, w_axis_x, lower_trans_limit, upper_trans_limit, limit, max_motor_force, motor_speed, motor, col)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">inst1</span></td>
        <td><span data-keyref="Type_ID_Instance">Instanz-ID</span></td>
        <td><span class="notranslate">The first instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">inst2</span></td>
        <td><span data-keyref="Type_ID_Instance">Instanz-ID</span></td>
        <td><span class="notranslate">The second instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor_x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x coordinate where the joint is anchored, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor_y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y coordinate where the joint is anchored, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_axis_x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x component of the axis vector</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_axis_y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y component of the axis vector</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">lower_trans_limit</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The lower permitted limit for the joint movement</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">upper_trans_limit</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The lower permitted limit for the joint movement</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">limit</span></td>
        <td><span data-keyref="Type_Bool">Boolesche</span></td>
        <td><span class="notranslate">Whether to limit the movement of the joint (true) or not (false)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">max_motor_force</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">Sets the maximum movement speed for the motor</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">motor_speed</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">This is the speed at which the motor should move</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">motor</span></td>
        <td><span data-keyref="Type_Bool">Boolesche</span></td>
        <td><span class="notranslate">Whether the motor should be active (true) or not (false)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">col</span></td>
        <td><span data-keyref="Type_Bool">Boolesche</span></td>
        <td><span class="notranslate">Whether the two instances can collide (true) or not (false)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_ID_Physics_Joint">Physics Joint ID</span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var mainFixture, o_id;<br />
    mainFixture = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);<br />
    o_id = instance_create_layer(x+25, y, &quot;Instances&quot;, obj_Piston);<br />
    physics_fixture_bind(mainFixture, id);<br />
    physics_fixture_bind(mainFixture, o_id);<br />
    physics_joint_prismatic_create(id, o_id, x, y, 0, 10, 0, 0, 0, 5, 0, 1, 1);<br />
    physics_fixture_delete(mainFixture);</p>
  <p>Die obige <span class="notranslate">code</span> erstellt und definiert eine neue Halterung und erzeugt dann eine Instanz von &quot;obj_Piston&quot;, wobei die erstellte Halterung an die beiden neuen Objekte gebunden wird. Die beiden Objekte werden dann durch ein prismatisches Gelenk verbunden, wobei sich die Ankerposition an denselben x/y-Koordinaten der ersten Instanz befindet und eine Achse durch die <span class="notranslate">vector</span> der x/y-Position und der x/y-Achse gebildet wird (in diesem Fall 0,10, was &quot;unten&quot; ist). Es gibt keine Beschränkungen für die Bewegung entlang dieser Achse, aber wir haben einen Motor mit einer Geschwindigkeit von 0 und einer maximalen Kraft von 5 hinzugefügt, um die Reibung der Gelenke zu simulieren.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Rücken: <a href="Joints.htm">Gelenke</a></div>
        <div style="float:right">Nächste: <a href="physics_joint_pulley_create.htm"><span class="notranslate">physics_joint_pulley_create</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_prismatic_create
-->
  <!-- TAGS
physics_joint_prismatic_create
-->
</body>
</html>