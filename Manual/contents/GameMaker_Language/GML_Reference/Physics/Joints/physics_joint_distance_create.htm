<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physik_gelenk_distanz_erzeugen</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_distance_create" />
  <meta name="rh-index-keywords" content="physics_joint_distance_create" />
  <meta name="search-keywords" content="physics_joint_distance_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physik_gelenk_distanz_erzeugen</h1>
  <p>Eine der einfachsten Verbindungen ist eine Abstandsverbindung, die besagt, dass der Abstand zwischen zwei Punkten auf zwei Instanzen konstant sein muss. Wenn Sie eine Abstandsverbindung angeben, sollten die beiden Instanzen bereits erstellt sein und eine Halterung zugewiesen haben, dann definieren Sie die beiden Ankerpunkte in Raumkoordinaten. Der erste Ankerpunkt ist mit der Instanz 1 verbunden, der zweite Ankerpunkt mit der Instanz 2, und der Abstand zwischen diesen Punkten gibt die Länge der Abstandsbedingung an. Das Bild unten zeigt, wie das funktioniert:</p>
  <p><img>Wie Sie sehen können, werden die Ankerpunkte als Raumkoordinaten angegeben, so dass bei ihrer Definition Vorsicht geboten ist, insbesondere wenn die Instanzen gleichzeitig mit den Joints erstellt werden und nicht über den Raumeditor im Raum platziert werden. Sie sollten auch bedenken, dass die Joints unabhängig von der Größe der <span class="notranslate">sprite</span> der Instanzen oder der an sie angehängten Fixtures erstellt werden. Wenn Sie also ein Distanzgelenk an einem anderen Ort als dem Ursprung der Instanz erstellen, ist es immer noch gültig und schränkt die beiden Instanzen relativ zu der Position ein, an der es erstellt wurde. Wenn du den &quot;col&quot;-Wert auf <span class="inline">true</span> setzt, können die beiden Instanzen miteinander interagieren und kollidieren, aber <i>nur</i>, wenn sie Kollisionsereignisse haben; wenn er jedoch auf <span class="inline">false</span> gesetzt ist, werden sie nicht kollidieren, egal was passiert.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">physics_joint_distance_create(inst1, inst2, w_anchor1_x, w_anchor1_y, w_anchor2_x, w_anchor2_y, col)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">inst1</span></td>
        <td><span data-keyref="Type_ID_Instance">Instanz-ID</span></td>
        <td><span class="notranslate">The first instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">inst2</span></td>
        <td><span data-keyref="Type_ID_Instance">Instanz-ID</span></td>
        <td><span class="notranslate">The second instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor1_x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The first x coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor1_y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The first y coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor2_x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The second x coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor2_y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">the second y coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">col</span></td>
        <td><span data-keyref="Type_Bool">Boolesche</span></td>
        <td><span class="notranslate">Whether the two instances can collide (true) or not (false)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_ID_Physics_Joint">Physics Joint ID</span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var mainFixture, o_id;<br />
    mainFixture = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);<br />
    o_id=instance_create_layer(x+300, y, &quot;Instances&quot;, obj_Rudder);<br />
    physics_fixture_bind(mainFixture, id);<br />
    physics_fixture_bind(mainFixture, o_id);<br />
    physics_joint_distance_create(id, o_id, x + 50, y, o_id.x - 50, o_id.y, 0);<br />
    physics_fixture_delete(mainFixture);</p>
  <p>Die obige <span class="notranslate">code</span> erstellt und definiert ein neues Fixture und erstellt dann eine Instanz von &quot;obj_Rudder&quot;. Das Fixture wird dann der Instanz zugewiesen, auf der die <span class="notranslate">code</span> läuft, sowie der neu erstellten Instanz, und es wird eine Verbindung zwischen ihnen hergestellt. Abschließend wird das Fixture gelöscht, da es nicht mehr benötigt wird.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Rücken: <a href="Joints.htm">Gelenke</a></div>
        <div style="float:right">Nächste: <a href="physics_joint_revolute_create.htm"><span class="notranslate">physics_joint_revolute_create</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_distance_create
-->
  <!-- TAGS
physics_joint_distance_create
-->
</body>
</html>