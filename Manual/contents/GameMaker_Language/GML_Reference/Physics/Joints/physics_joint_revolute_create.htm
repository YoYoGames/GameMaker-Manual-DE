<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_joint_revolute_create</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_revolute_create" />
  <meta name="rh-index-keywords" content="physics_joint_revolute_create" />
  <meta name="search-keywords" content="physics_joint_revolute_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physik_gelenk_revolute_erzeugen</h1>
  <p>Ein Revolventengelenk zwingt zwei Körper dazu, einen gemeinsamen Ankerpunkt (oft als Scharnierpunkt bezeichnet) zu teilen, und das Gelenk hat einen einzigen Freiheitsgrad - die relative Drehung der beiden Körper um diesen Punkt. Um eine Drehverbindung anzugeben, müssen Sie zwei Instanzen und einen einzelnen Ankerpunkt im Raum angeben, wie Sie in der Abbildung sehen können:</p>
  <p><img>Wenn Sie sich das Bild ansehen, können Sie erkennen, dass die beiden Instanzen so erstellt wurden, dass sie sich überlappen, und an dem Punkt, an dem sie sich berühren, haben wir ein Drehgelenk definiert. Dieses Gelenk kann nun dank der Werte &quot;ang_min_limit&quot; und &quot;ang_max_limit&quot; in seiner Drehfreiheit eingeschränkt werden. Wie funktioniert das? Schauen wir uns ein anderes Bild an:</p>
  <p><img>Wie Sie sehen können, entsprechen die Winkel in der Physikwelt <i>nicht</i> den Standardwinkeln von <span data-keyref="GameMaker Name">GameMaker</span>, bei denen rechts 0 Grad ist und es dann gegen den Uhrzeigersinn weitergeht, so dass oben 90, links 180 und unten 270 ist. Nein, wenn es sich um ein Drehgelenk handelt, verläuft die 0-Grad-Achse von der Gelenkposition zum Ursprung der zweiten durch die Funktion definierten Instanz, und die Winkel werden dann im Uhrzeigersinn berechnet. Wenn Sie <span class="notranslate">switch</span> für die Winkelbegrenzung verwenden, werden die Grenzen relativ zu dieser 0-Grad-Achse definiert, und der Grenzbereich <i>sollte den Wert Null einschließen</i>, da das Gelenk sonst am Anfang des Raumes schlingert. Schließlich können Sie festlegen, ob das Gelenk einen Motor hat oder nicht. Das bedeutet, dass sich das Gelenk, wenn es nicht durch eine Kollision beeinflusst wird, in eine Richtung bewegt, die durch die Motordrehzahl definiert ist, wobei eine positive Zahl für den Uhrzeigersinn und eine negative Zahl für den Gegenuhrzeigersinn steht. Das &quot;max_motor_torque&quot; <span class="notranslate">argument</span> dient dazu, die Rotationsgeschwindigkeit zu begrenzen, um einen ständig beschleunigenden Motor zu vermeiden und um den Einfluss einer Kollision auf die Rotation zu begrenzen. Auf diese Weise können Sie einen Gelenkmotor verwenden, um Gelenkreibung zu simulieren, indem Sie die Gelenkgeschwindigkeit auf Null und das maximale Drehmoment auf einen kleinen, aber signifikanten Wert setzen. Der Motor wird versuchen, die Drehung des Gelenks zu verhindern, wird aber bei einer erheblichen Belastung nachgeben.</p>
  <p>Wie bei allen Gelenken, wenn Sie die &quot;col&quot; Wert auf <span class="inline">true</span> dann die beiden Instanzen können interagieren und miteinander kollidieren, aber <i>nur</i>, wenn sie Kollisions-Ereignisse haben, aber wenn es auf <span class="inline">false</span> eingestellt ist, werden sie nicht kollidieren, egal was.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">physics_joint_revolute_create(inst1, inst2, w_anchor_x, w_anchor_y, ang_min_limt, ang_max_limit, ang_limit, max_motor_torque, motor_speed, motor, col)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">inst1</span></td>
        <td><span data-keyref="Type_ID_Instance">Instanz-ID</span></td>
        <td><span class="notranslate">The first instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">inst2</span></td>
        <td><span data-keyref="Type_ID_Instance">Instanz-ID</span></td>
        <td><span class="notranslate">The second instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor_x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor_y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ang_min_limit</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The lower permitted limit for the joint angle</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ang_max_limit</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The upper permitted limit for the joint angle</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ang_limit</span></td>
        <td><span data-keyref="Type_Bool">Boolesche</span></td>
        <td><span class="notranslate">Whether the to limit the angle of the joint (true) or not (false)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">max_motor_torque</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">Sets the maximum motor torque used to achieve the desired motor speed (in Newtons per meter)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">motor_speed</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">This is the speed at which the motor should rotate</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">motor</span></td>
        <td><span data-keyref="Type_Bool">Boolesche</span></td>
        <td><span class="notranslate">Whether the motor should be active (true) or not (false)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">col</span></td>
        <td><span data-keyref="Type_Bool">Boolesche</span></td>
        <td><span class="notranslate">Whether the two instances can collide (true) or not (false)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_ID_Physics_Joint">Physics Joint ID</span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var mainFixture, o_id;<br />
    mainFixture = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);<br />
    o_id=instance_create_layer(x+25, y, &quot;Instances&quot;, obj_Door);<br />
    physics_fixture_bind(mainFixture, id);<br />
    physics_fixture_bind(mainFixture, o_id);<br />
    physics_joint_revolute_create(id, o_id, x+25, y, -90, 90, 1, 0, 0, 0, 0);<br />
    physics_fixture_delete(mainFixture);</p>
  <p>Die obige <span class="notranslate">code</span> erstellt und definiert eine neue Halterung und erstellt dann eine Instanz von &quot;obj_Door&quot;, wobei die erstellte Halterung an die beiden neuen Objekte gebunden wird. Die beiden Objekte werden dann durch ein Drehgelenk ohne Motor verbunden, wobei die Winkel auf +/- 90 Grad begrenzt sind. Schließlich wird die Vorrichtung gelöscht, da sie nicht mehr benötigt wird.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Rücken: <a href="Joints.htm">Gelenke</a></div>
        <div style="float:right">Nächste: <a href="physics_joint_prismatic_create.htm"><span class="notranslate">physics_joint_prismatic_create</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_revolute_create
-->
  <!-- TAGS
physics_joint_revolute_create
-->
</body>
</html>