<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_fixture_set_sensor</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_fixture_set_sensor" />
  <meta name="rh-index-keywords" content="physics_fixture_set_sensor" />
  <meta name="search-keywords" content="physics_fixture_set_sensor" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_fixture_set_sensor</h1>
  <p>Manchmal möchtest du, dass dein Spiel erkennt, wenn zwei Instanzen mit Fixtures kollidieren, aber keine physische Reaktion auf die Kollision zeigt. Dies kann erreicht werden, indem man die Halterung in einen Sensor umwandelt, was im Grunde bedeutet, dass sie ein Kollisionsereignis erzeugt, aber ohne physische Reaktion, so dass man diese Instanzen als &quot;Auslöser&quot; für andere Ereignisse im Spielraum verwenden kann. Jedes Fixture kann als Sensor gekennzeichnet werden, und es macht keinen Unterschied, ob die Instanz, an die es gebunden ist, statisch oder in Bewegung ist.</p>
  <p class="note"><b>HINWEIS</b>: Eine Sensorvorrichtung löst das Kollisionsereignis <b>nur</b> dann aus, wenn die Kollision <b>zum ersten Mal auftritt</b>, d. h. Sie erhalten keinen Strom von Kollisionsereignissen, wenn sich die beiden Körper weiter überlappen (was normalerweise der Fall wäre). Wenn sich die beiden Körper nicht mehr überlappen und sich erneut überlappen, wird ein weiteres Kollisionsereignis ausgelöst.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">physics_fixture_set_sensor(fixture, state)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">fixture</span></td>
        <td><span data-keyref="Type_ID_PhyFixture">Physik Fixture ID</span></td>
        <td><span class="notranslate">the index of the fixture</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">state</span></td>
        <td><span data-keyref="Type_Bool">Boolesche</span></td>
        <td><span class="notranslate">whether a fixture is a sensor (true) or not (false)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">physics_fixture_set_sensor(fix_Cloud, 1);</p>
  <p>Die obige <span class="notranslate">code</span> setzt den Sensorstatus des in &quot;fix_Cloud&quot; indizierten Geräts auf true.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Fixtures.htm">Einrichtungsgegenstände</a></div>
        <div style="float:right">Nächste: <a href="physics_fixture_set_kinematic.htm"><span class="notranslate">physics_fixture_set_kinematic</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
physics_fixture_set_sensor
-->
  <!-- TAGS
physics_fixture_set_sensor
-->
</body>
</html>