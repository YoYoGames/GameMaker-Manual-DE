<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_fixture_bind</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_fixture_bind" />
  <meta name="rh-index-keywords" content="physics_fixture_bind" />
  <meta name="search-keywords" content="physics_fixture_bind" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_fixture_bind</h1>
  <p>Nachdem wir unsere Vorrichtung definiert haben, muss sie an eine Instanz gebunden werden. Das bedeutet, dass die <i>Eigenschaften</i> des Geräts an die ausgewählte Instanz übertragen werden, <b>nicht an das Gerät selbst</b>, so dass ein Gerät an mehrere Instanzen gebunden werden kann, wenn alle die gleichen Eigenschaften haben sollen. Sie können einen Objektindex für das Ziel angeben und alle Instanzen, die zu diesem Zeitpunkt im Raum vorhanden sind, erhalten die Eigenschaften dieses Fixtures (aber keine neuen Instanzen des Objekts, die später erstellt werden), oder Sie können die speziellen Schlüsselwörter <i>other</i> und <i>all</i> verwenden. Du kannst sogar ein übergeordnetes Objekt angeben und alle untergeordneten Instanzen mit diesem übergeordneten Objekt erhalten ebenfalls das Fixture. Sobald das Fixture an alle benötigten Instanzen gebunden wurde, kann es gelöscht werden, wenn es nicht mehr benötigt wird, und die Instanzen mit den Eigenschaften des Fixtures sind davon nicht betroffen und behalten diese Eigenschaften bei.</p>
  <p>Das Fixture wird an die Instanz gebunden, wobei der Schwerpunkt am Ursprung der Instanz positioniert wird, und Polygon-Fixtures werden basierend auf der Position der Punkte <i>relativ</i> zum Ursprung gebunden. Wenn Sie Ihr Fixture an einen anderen Punkt als den Ursprung binden wollen, sollten Sie <a href="physics_fixture_bind_ext.htm"><span class="inline">physics_fixture_bind_ext()</span></a>.</p>
  <p><img>Die Funktion gibt auch einen eindeutigen &quot;id&quot;-Wert für das <i>gebundene</i> Gerät zurück<b>(nicht das Gerät selbst</b>), der dann verwendet werden kann, um die physikalischen Eigenschaften aus der Instanz zu entfernen (&quot;un-bind&quot;), indem die Funktion <a href="physics_remove_fixture.htm"><span class="inline">physics_remove_fixture()</span></a>. Auf diese Weise können Sie physikalische Eigenschaften einer Instanz hinzufügen und entfernen, ohne Objekte zu zerstören und neu zu erstellen.</p>
  <p class="note"><b>HINWEIS</b>: Fixtures sollten gelöscht werden, wenn sie nicht mehr benötigt werden, da andernfalls ein Speicherleck entstehen kann, das Ihr Spiel verlangsamt und schließlich zum Absturz bringt.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">physics_fixture_bind(fixture, target)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">fixture</span></td>
        <td><span data-keyref="Type_ID_PhyFixture">Physik Fixture ID</span></td>
        <td><span class="notranslate">The fixture that is to be bound</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">target</span></td>
        <td><span data-keyref="Type_ID_Instance">Instanz-ID</span> oder <span data-keyref="Type_Asset_Object">Objekt Asset</span></td>
        <td><span class="notranslate">The target instance that is to receive the fixture (can be an instance id, an object id, <i>other</i>, or <i>all</i>)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var fix, inst;<br />
    fix = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(fix, 16);<br />
    physics_fixture_set_density(fix, 1.0);<br />
    inst = instance_create_layer(x, y, &quot;Instances&quot;, genericBodyObject);<br />
    my_fix = physics_fixture_bind(fix, inst);<br />
    physics_fixture_delete(fix);</p>
  <p>In der obigen <span class="notranslate">code</span> wird eine Halterung erstellt und ihr Index der Variablen &quot;fix&quot; zugewiesen. Anschließend werden Form und Dichte der Vorrichtung definiert, bevor sie an die Instanz gebunden wird, die mit dem in der Variablen &quot;my_fix&quot; gespeicherten Index für die <b>gebundene</b> Vorrichtung erstellt wurde. Abschließend wird die Vorrichtung gelöscht, um Speicherlecks zu vermeiden, da sie nicht mehr benötigt wird.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Fixtures.htm">Einrichtungsgegenstände</a></div>
        <div style="float:right">Nächste: <a href="physics_fixture_bind_ext.htm"><span class="notranslate">physics_fixture_bind_ext</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
physics_fixture_bind
-->
  <!-- TAGS
physics_fixture_bind
-->
</body>
</html>