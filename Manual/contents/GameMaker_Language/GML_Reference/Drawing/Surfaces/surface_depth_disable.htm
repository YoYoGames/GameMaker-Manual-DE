<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>oberfläche_tiefe_deaktivieren</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for surface_depth_disable" />
  <meta name="rh-index-keywords" content="surface_depth_disable" />
  <meta name="search-keywords" content="surface_depth_disable" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>oberfläche_tiefe_deaktivieren</h1>
  <p>Diese Funktion deaktiviert die automatische Tiefenerzeugung <span class="notranslate">buffer</span> für <i>alle</i> Flächen, die nach der Deaktivierung erstellt werden. Normalerweise haben alle Oberflächen die Tiefe <span class="notranslate">buffers</span>, so dass, wenn Sie 3D-Objekte auf sie zeichnen, diese korrekt nach Tiefe sortiert werden.
    um die funktionale Parität zwischen dem Rendering auf Oberflächen und dem Rendering auf der Rückseite <span class="notranslate">buffer</span> aufrechtzuerhalten. Durch die Zuweisung von Tiefe <span class="notranslate">buffers</span> verdoppelt sich jedoch die für Oberflächen benötigte Speichermenge, was ein übermäßiger und unnötiger Overhead sein kann
    vor allem, wenn Ihr Spiel sehr speicherintensiv ist, und für 2D-Spiele sind sie im Allgemeinen nicht erforderlich.</p>
  <p>Um diese Funktion zu verwenden, rufen Sie sie auf <i>, bevor</i> Sie eine Fläche erstellen, und können sie danach wieder aktivieren (falls erforderlich). Alle Oberflächen, die erstellt werden, wenn die Tiefenfunktion <span class="notranslate">buffer</span> deaktiviert ist, verwenden beim Zeichnen nicht mehr die Tiefenfunktion <span class="notranslate">buffer</span>, was dazu führt, dass
    Dies führt dazu, dass die Dinge, die auf die Oberfläche gezeichnet werden, die gleiche Tiefe haben. Die folgenden Bilder veranschaulichen dies in der Praxis:</p>
  <p><img>In der obigen Abbildung zeichnen wir ein Rechteck und ein Dreieck mit einem Scheitelpunkt <span class="notranslate">buffer</span> in 3D. Die
    Koordinaten für das rote Dreieck platzieren es hinter dem grünen Rechteck, aber die <span class="notranslate">code</span> zum Zeichnen des Dreiecks wird <i>nach der</i> <span class="notranslate">code</span> für das Rechteck aufgerufen, und wenn die Tiefe <span class="notranslate">buffer</span> aktiviert ist, wird das Dreieck immer noch hinter dem Rechteck gezeichnet
    gezeichnet, da die 3D-Tiefe beachtet wird. Wenn wir jedoch die Tiefe <span class="notranslate">buffer</span> für die Oberfläche deaktivieren, wird nur die Reihenfolge <span class="notranslate">code</span> beachtet und das Dreieck wird über dem Rechteck gezeichnet.</p>
  <p class="note"><b>HINWEIS</b>: Um die Tiefe in 3D bei der Verwendung von Oberflächen korrekt zu erhalten, sollten Sie nicht nur die Tiefenfunktion <span class="notranslate">buffer</span> aktivieren, sondern auch die Funktionen z-writing und z-testing aktivieren. Siehe die Funktionen <a href="../GPU_Control/gpu_get_ztestenable.htm"><span class="inline"><span style="font-size:14px;">gpu_set_ztestenable()</span></a>    und <a href="../GPU_Control/gpu_get_zwriteenable.htm"><span class="inline"><span style="font-size:14px;">gpu_set_zwriteenable()</span></a> für weitere Informationen.</p>
  <p class="note"><b>HINWEIS</b>: Wenn Ihr Spiel 100% 2D ist oder Sie wissen, dass Sie keine Oberflächentiefe benötigen <span class="notranslate">buffer</span>, dann sollte es in Ordnung sein, diese Funktion nur einmal zu Beginn des Spiels aufzurufen, um die <span class="notranslate">buffer</span> zu deaktivieren.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">surface_depth_disable(disable);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Typ</th>
        <th>Beschreibung</th>
     </tr>
      <tr>
        <td><span class="notranslate">disable</span></td><td><span data-keyref="Type_Bool"></span></td>
        <td><span class="notranslate">If set to <span class="inline">true</span> wird der Tiefenpuffer für erstellte Flächen deaktiviert.</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var _depth_setting = surface_get_depth_disable();<br/> surface_depth_disable(false);
    <br/> surface_with_depth = surface_create(room_width, room_height);<br/> surface_depth_disable(true);
    <br/> surface_without_depth = surface_create(room_width, room_height);<br/> surface_depth_disable(_depth_setting);
  </p>
  <p>Die obige <span class="notranslate">code</span> speichert die aktuelle Einstellung für die Tiefe <span class="notranslate">buffer</span> in einer Variablen und erstellt dann zwei Oberflächen, eine mit und eine ohne Tiefenpufferung, bevor sie die ursprüngliche Einstellung wiederherstellt.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Rückseite: <a href="Surfaces.htm">Oberflächen</a></div>
        <div style="float:right">Nächste: <a href="surface_get_height.htm"><span class="notranslate">surface_get_height</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
surface_depth_disable
-->
  <!-- TAGS
surface_depth_disable
-->
</body>
</html>