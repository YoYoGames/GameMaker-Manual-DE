<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Oberflächen</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for the Surface functions and variables" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Surfaces,application_surface,application surface,app surface" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Oberflächen</h1>
  <p>Bei den normalen Zeichenereignissen zeichnet <span data-keyref="GameMaker Name">GameMaker</span> nicht direkt auf den Bildschirm, sondern auf eine <b>Oberfläche</b>, die <i>Anwendungsoberfläche</i>. Diese Oberfläche ist im Grunde eine leere &quot;Leinwand&quot;, die später manipuliert werden kann, bevor sie bei Bedarf auf den Bildschirm gezeichnet wird, und in den meisten Fällen übernimmt <span data-keyref="GameMaker Name">GameMaker</span> diese Aufgabe für Sie (obwohl Sie sie auch selbst in <span class="notranslate">code</span> für Shader, Skalierung und viele andere Dinge manipulieren können - weitere Einzelheiten finden Sie weiter unten).</p>
  <p>Abgesehen von dieser Anwendungsoberfläche können Sie jedoch auch eigene Oberflächen erstellen und diese verwenden, um verblüffende oder subtile Spezialeffekte in Ihrem Spiel zu erzeugen. Zum Beispiel können Sie Oberflächen verwenden, um Instanzen zu &quot;fangen&quot;, die dann zerstört werden können, und auf diese Weise können Sie einen Abziehbild-Effekt erzeugen, bei dem die <span class="notranslate">sprite</span> für die Instanz auf der Oberfläche angezeigt wird, als ob sie noch existierte, was grafische Effekte wie Trümmer, Blut, etc... ohne wirklichen Verarbeitungsaufwand ermöglicht. Eine weitere Möglichkeit, Oberflächen zu nutzen, ist die Verwendung als Texturen, die manipuliert werden können, oder die Erstellung von <span class="notranslate">sprites</span> &quot;on the fly&quot;, oder die Erstellung komplexer Überlagerungen - die Verwendungsmöglichkeiten für Oberflächen sind endlos!</p>
  <p>Normale Oberflächen sind recht einfach zu verwenden, aber es gibt ein paar Grundregeln, die Sie bei ihrer Verwendung beachten sollten:</p>
  <ul class="colour">
    <li>Zunächst sollten Sie wissen, dass Oberflächen<i>(mit Ausnahme</i> der Anwendungsoberfläche) &quot;flüchtig&quot; sind. Das bedeutet, dass die Oberfläche <strong>zerstört werden kann</strong>, wenn das Gerät oder das Fenster den Fokus verliert oder minimiert wird (gute Beispiele dafür sind, wenn Sie unter Windows mit ALT +Tab zu einem anderen Fenster und wieder zurück wechseln, oder auf einem <span class="notranslate">Android</span> -Gerät, wenn die Anwendung aufgrund eines Aufrufs den Fokus verliert). Dies liegt daran, dass sie <em>nur</em> im Texturspeicher<a class="glossterm" data-glossterm="VRAM" href="#">(VRAM</a>) gespeichert ist und überschrieben werden kann, wenn das Ziel <span class="notranslate">platform</span> diesen Speicher für etwas anderes benötigt. <i><b>immer</b></i> eine Art von ausfallsicherer <span class="notranslate">code</span> vorhanden sein, normalerweise mit der <a href="surface_exists.htm"><span class="inline">surface_exists()</span></a> Funktion.</li>
  </ul>
  <p class="note" style="padding-top: 0.5em;padding-right: 1em;padding-bottom: 0.5em;padding-left: 4em"><span class="note">HINWEIS</span><strong> </strong>Dies scheint nicht mit <span class="notranslate">sprites</span> oder anderen visuellen Objekten zu passieren (ist aber tatsächlich der Fall!), da sie auch im regulären Speicher (RAM) gespeichert werden, und wenn sie aus dem Texturspeicher (VRAM) entfernt werden, werden sie sofort aus dem regulären Speicher wiederhergestellt, wenn das Spiel den Fokus wiedererlangt.</p>
  <ul class="colour">
    <li>Zweitens sollten Sie beachten, dass Oberflächen große Mengen an VRAM benötigen können und Sie daher versuchen sollten, sie so klein wie möglich zu halten. Normalerweise würden Sie versuchen, sie nicht größer als die Größe der Ansicht oder des Anzeigefensters zu halten.</li>
    <li>Drittens sollten Sie <b>Oberflächen nur im Draw-Ereignis erstellen</b>. Wenn Sie eine Oberfläche im Create-Event einer Instanz erstellen, erhalten Sie möglicherweise den <i>gleichen</i> Index wie die <span class="inline">application_surface</span>. Das kann dann zu vielen Problemen und Verwirrungen führen, da Sie denken, dass Sie Ihre eigene Oberfläche verwenden, aber in Wirklichkeit das aktuelle Render-Target benutzen. Sie sollten auch immer versuchen, das <i>Zeichnen</i> auf eine Oberfläche im Draw-Ereignis zu begrenzen, da aufgrund der optimierten Art und Weise, wie <span data-keyref="GameMaker Name">GameMaker</span> auf den Bildschirm zeichnet, empfohlen wird, alle Zeichenfunktionen <i>innerhalb des Draw-Ereignisses</i> zu halten - dazu gehört auch das Löschen einer Oberfläche, wenn sie zum ersten Mal erstellt wird usw... Das Zeichnen auf eine Oberfläche außerhalb des Draw-Ereignisses ist zwar möglich und kann für manche Effekte sogar notwendig sein, aber es ist nicht die Art, wie es gemacht werden <em>sollte</em>.</li>
    <li>Viertens: Wenn Sie manuell auf eine Fläche zeichnen, befindet sich die Fläche <i>immer</i> an der Position (0,0). Das bedeutet, dass Sie möglicherweise <em>absolute</em> Koordinaten in <em>relative</em> Koordinaten für die Fläche umwandeln müssen. Wenn Sie beispielsweise eine Fläche in Kameragröße haben und etwas, das derzeit in der Kamera sichtbar ist, auf diese Fläche zeichnen möchten, sollten Sie die x- und y-Koordinaten der Kameraansicht von den tatsächlichen x- und y-Koordinaten subtrahieren, um eine relative Position zur (0,0)-Position der Fläche zu erhalten. Die <span class="notranslate">code</span> würde also etwa so aussehen:</li>
  </ul>
  <p class="code">if view_current = 0<br />
    {<br />
        surface_set_target(surf);<br />
        with (obj_Effect)<br />
        {<br />
            var _vx = camera_get_view_x(view_camera[1]);<br />
            var _vy = camera_get_view_y(view_camera[1]);<br />
            draw_sprite(sprite_index, image_index, x - _vx, y - _vy);<br />
        }<br />
        surface_reset_target();<br />
    }<br />
    else<br />
    {<br />
        draw_surface(surf, 0, 0);<br />
    }</p>
  <ul class="colour">
    <li>Schließlich ist noch anzumerken, dass beim Zeichnen auf eine Oberfläche die Farbe <em>und die</em> Alphakomponente jedes Pixels berücksichtigt werden, sowohl von der Oberfläche selbst als auch von dem, was auf sie gezeichnet wird. Dies kann zu einigen eher unintuitiven Ergebnissen führen (z. B. ergibt das Zeichnen einer <span class="notranslate">sprite</span> mit 0,5 Alpha auf eine Oberfläche mit 0 Alpha ein endgültiges Alpha von 0,25). Die Gründe hierfür werden auf der folgenden Seite erläutert, die Sie lesen sollten, bevor Sie mit Flächen arbeiten: <a href="../../../../Additional_Information/Guide_To_Using_Blendmodes.htm">Anleitung zur Verwendung von Blendmodes</a></li>
  </ul>
  <p class="note"><span class="note">HINWEIS</span> Dies gilt nicht für die <a href="application_surface.htm">Anwendungsoberfläche</a>, sondern nur für vom Benutzer erstellte Oberflächen.</p>
  <p>Die grundlegende Verwendung einer Oberfläche würde folgendermaßen aussehen:</p>
  <ul class="colour">
    <li>Sie erstellen zunächst eine Fläche und weisen deren Index einer Variablen zu.</li>
    <li>Sie würden dann das Zeichenziel auf die Oberfläche und nicht auf das Display setzen.</li>
    <li>Als Nächstes zeichnen Sie die gewünschten Dinge und führen weitere Manipulationen durch.</li>
    <li>Wenn Sie fertig sind, setzen Sie das Zeichenziel zurück, so dass alle weiteren Zeichnungen wieder auf dem Bildschirm stattfinden.</li>
    <li>Schließlich zeichnen Sie die Oberfläche (oder verwenden sie in einem Shader, oder was auch immer erforderlich ist).</li>
  </ul>
  <p>Eine Sache, die Sie beachten sollten, ist, dass Sie, wenn Sie die gesamte Anzeige auf eine Oberfläche zeichnen wollen (einschließlich Kacheln, Hintergründe etc...), einfach auf die Anwendungsoberfläche selbst zugreifen können (siehe unten für weitere Details) oder Sie können eine Oberfläche einem Viewport zuweisen, indem Sie die Variable <a href="../../Cameras_And_Display/Cameras_And_Viewports/view_surface_id.htm"><span class="inline">view_surface_id[0..7]</span></a> zuweisen. Damit wird alles, was in diesem Viewport sichtbar ist, auf die entsprechende Oberfläche gezeichnet.</p>
  <p>Die folgenden Funktionen sind für den Umgang mit Flächen gedacht (diese Funktionen sind speziell für die Erstellung und Bearbeitung von Flächen gedacht, aber um sie tatsächlich auf den Bildschirm zu zeichnen, sollten Sie die speziellen Zeichenfunktionen verwenden, die weiter unten zu finden sind):</p>
  <ul class="colour">
    <li><a href="surface_exists.htm"><span class="notranslate">surface_exists</span></a></li>
    <li><a href="surface_create.htm"><span class="notranslate">surface_create</span></a></li>
    <li><a href="surface_create_ext.htm"><span class="notranslate">surface_create_ext</span></a></li>
    <li><a href="surface_resize.htm"><span class="notranslate">surface_resize</span></a></li>
    <li><a href="surface_set_target.htm"><span class="notranslate">surface_set_target</span></a></li>
    <li><a href="surface_set_target_ext.htm"><span class="notranslate">surface_set_target_ext</span></a></li>
    <li><a href="surface_get_target.htm"><span class="notranslate">surface_get_target</span></a></li>
    <li><a href="surface_get_target_ext.htm"><span class="notranslate">surface_get_target_ext</span></a></li>
    <li><a href="surface_reset_target.htm"><span class="notranslate">surface_reset_target</span></a></li>
    <li><a href="surface_copy.htm"><span class="notranslate">surface_copy</span></a></li>
    <li><a href="surface_copy_part.htm"><span class="notranslate">surface_copy_part</span></a></li>
    <li><a href="surface_depth_disable.htm"><span class="notranslate">surface_depth_disable</span></a></li>
    <li><a href="surface_get_height.htm"><span class="notranslate">surface_get_height</span></a></li>
    <li><a href="surface_get_width.htm"><span class="notranslate">surface_get_width</span></a></li>
    <li><a href="surface_get_texture.htm"><span class="notranslate">surface_get_texture</span></a></li>
    <li><a href="surface_get_depth_disable.htm"><span class="notranslate">surface_get_depth_disable</span></a></li>
    <li><a href="surface_getpixel.htm"><span class="notranslate">surface_getpixel</span></a></li>
    <li><a href="surface_getpixel_ext.htm"><span class="notranslate">surface_getpixel_ext</span></a></li>
    <li><a href="surface_free.htm"><span class="notranslate">surface_free</span></a></li>
    <li><a href="surface_save.htm"><span class="notranslate">surface_save</span></a></li>
    <li><a href="surface_save_part.htm"><span class="notranslate">surface_save_part</span></a></li>
  </ul>
  <p> </p>
  <p>Zum Zeichnen von Flächen gibt es folgende Funktionen:</p>
  <p class="note"><b><span class="note">HINWEIS</span> </b>Bei der Arbeit mit Flächen besteht die Möglichkeit, dass sie jederzeit nicht mehr existieren, da sie im Texturspeicher abgelegt sind. Sie sollten <b>IMMER</b> überprüfen, ob eine Fläche existiert, indem Sie <span style="font-size:1px;"><a href="surface_exists.htm"><span class="inline">surface_exists()</span></a></span> überprüfen, bevor Sie sie direkt referenzieren.</p>
  <ul class="colour">
    <li><a href="draw_surface.htm"><span class="notranslate">draw_surface</span></a></li>
    <li><a href="draw_surface_ext.htm"><span class="notranslate">draw_surface_ext</span></a></li>
    <li><a href="draw_surface_part.htm"><span class="notranslate">draw_surface_part</span></a></li>
    <li><a href="draw_surface_part_ext.htm"><span class="notranslate">draw_surface_part_ext</span></a></li>
    <li><a href="draw_surface_stretched.htm"><span class="notranslate">draw_surface_stretched</span></a></li>
    <li><a href="draw_surface_stretched_ext.htm"><span class="notranslate">draw_surface_stretched_ext</span></a></li>
    <li><a href="draw_surface_tiled.htm"><span class="notranslate">draw_surface_tiled</span></a></li>
    <li><a href="draw_surface_tiled_ext.htm"><span class="notranslate">draw_surface_tiled_ext</span></a></li>
    <li><a href="draw_surface_general.htm"><span class="notranslate">draw_surface_general</span></a></li>
  </ul>
  <p> </p>
  <p>Schließlich gibt es zwei Funktionen zum Speichern und Abrufen von Flächen in <a href="../../Buffers/Buffers.htm">Puffern</a>:</p>
  <ul class="colour">
    <li><a href="../../Buffers/buffer_get_surface.htm"><span class="notranslate">buffer_get_surface</span></a></li>
    <li><a href="../../Buffers/buffer_set_surface.htm"><span class="notranslate">buffer_set_surface</span></a></li>
  </ul>
  <p> </p>
  <p>Wie bereits erwähnt, rendert <span data-keyref="GameMaker Name">GameMaker</span> die meisten Dinge nicht direkt auf dem Bildschirm, sondern auf der <b>Programmoberfläche</b>. Dabei handelt es sich im Wesentlichen um eine Oberfläche - genau wie jede andere, die Sie mit den Oberflächenfunktionen selbst erstellen können - und als solche kann sie manipuliert, gezeichnet, an Shader gesendet werden, usw.. Im Grunde kann alles, was Sie normalerweise mit einer selbst erstellten Oberfläche tun würden, auch auf die Anwendungsoberfläche angewendet werden.</p>
  <p class="note"><b>HINWEIS</b>: Das einzige, was Sie mit der Anwendungsoberfläche <b>nicht</b> tun <b>können</b>, ist, sie freizugeben. Sie ist immer vorhanden, obwohl sich der Indexwert für den Zugriff auf sie ändern kann.</p>
  <p>Wenn Sie Ihr Spiel ausführen, wird diese Oberfläche beim ersten Aufruf des <a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm">Draw-Ereignisses</a> in jedem neuen Raum, den Sie betreten, erstellt, was bedeutet, dass bis zu diesem Zeitpunkt nichts gezeichnet wird. Sie können jedoch die Position der Anwendungsoberfläche abrufen und ihre Größe im <b>Create-Ereignis</b> oder in jedem anderen Ereignis ändern, ohne dass Fehler auftreten, und die verwendeten Werte sind für die Oberfläche relevant, wenn sie erstellt wird. Die aktuelle <span class="notranslate">sequence</span> der Ereignisse für die Erstellung und das Zeichnen der Anwendungsoberfläche ist wie folgt:</p>
  <ul class="colour">
    <li>Ereignis vor der Auslosung<br>
               --- &gt; <b>die Anwendungsoberfläche wird erstellt (falls sie nicht existiert) und das Rendering-Ziel wird festgelegt</b></li>
    <li><b></b>Für jeden sichtbaren Viewport, oder, wenn keine Viewports aktiv sind, einmal
      <ul class="colour">
        <li>Ereignis "Beginn der Zeichnung</li>
        <li>Ereignis "Zeichnen</li>
        <li>Ereignis Zeichnungsende<br>
                  --- &gt; <b>das Rendering-Ziel der Anwendungsoberfläche wird hier zurückgesetzt</b></li>
      </ul>
    </li>
    <li><b></b>Ereignis nach der Auslosung<br>
              --- &gt; <b>die Anwendungsoberfläche wird nun standardmäßig in den <a class="glossterm" data-glossterm="Display-Puffer" href="#">Anzeigepuffer</a> </b> gezeichnet <b><br>
                         (obwohl Sie </b> <span class="notranslate">switch</span> dies mit <span class="inline"><a href="application_surface_draw_enable.htm">application_surface_draw_enable()</a></span> ausschalten können)</li>
    <li><b></b>Ereignis "Draw GUI begin</li>
    <li>GUI-Ereignis Zeichnen</li>
    <li>GUI-Endereignis zeichnen</li>
  </ul>
  <p>Die Verwendung dieser Oberfläche bedeutet, dass Sie leicht unglaubliche Übergänge mit Shadern erstellen können, oder den Bildschirm nehmen und ihn um eine 3D-Form wickeln, oder einfach ein Spiel mit niedriger Auflösung auf einen Bildschirm mit beliebiger Auflösung skalieren können... Die Möglichkeiten sind endlos!</p>
  <p>Um auf diese Oberfläche zuzugreifen, müssen Sie die integrierte globale Variable <span class="inline">application_surface</span> verwenden, die auf der folgenden Seite erläutert wird:</p>
  <ul class="colour">
    <li><a href="application_surface.htm"><span class="notranslate">application_surface</span></a></li>
  </ul>
  <p> </p>
  <p>Außerdem gibt es einige spezielle Funktionen, die <em>nur </em>für die Anwendungsoberfläche bestimmt sind:</p>
  <ul class="colour">
    <li><a href="application_surface_enable.htm"><span class="notranslate">application_surface_enable</span></a></li>
    <li><a href="application_surface_is_enabled.htm"><span class="notranslate">application_surface_is_enabled</span></a></li>
    <li><a href="application_get_position.htm"><span class="notranslate">application_get_position</span></a></li>
    <li><a href="application_surface_draw_enable.htm"><span class="notranslate">application_surface_draw_enable</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Drawing.htm">Zeichnung</a></div>
        <div style="float:right">Nächste: <a href="../Lighting/Lighting.htm">Beleuchtung</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Surfaces
app surface
application surface
-->
  <!-- TAGS
surfaces_functions
-->
</body>
</html>