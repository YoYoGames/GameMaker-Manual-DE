<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Video_Zeichnen</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <meta name="template" content="../../../../assets/masterpages/Manual_Keyword_Page.htt" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Reference page for video_draw" />
  <meta name="rh-index-keywords" content="video_draw" />
  <meta name="search-keywords" content="video_draw, draw video, render video" />
  <meta name="condition-tags" content="" />
</head>
<body>
  <h1>Video_Zeichnen</h1>
  <p>Diese Funktion zeichnet das aktuelle Bild des <a href="video_open.htm">geöffneten Videos</a> auf eine Fläche (oder zwei Flächen). Sie gibt die Oberfläche(n) als Teil ihres Rückgabe-Arrays zurück, das <a href="../Surfaces/draw_surface.htm">manuell gezeichnet</a> werden kann.</p>
  <p>Die Funktion gibt auch Daten über den Status des Videos zurück, auf die weiter unten eingegangen wird.</p>
  <p>Stellen Sie sicher, dass diese Funktion nur nach einem Aufruf von <span class="inline"><a href="video_open.htm">video_open()</a></span>, aber vor einem Aufruf von <span class="inline"><a href="video_close.htm">video_close()</a></span> aufgerufen wird, da sie sonst nichts bewirkt (da kein Video geladen wird).</p>
  <h2>Daten zurücksenden</h2>
  <p>Die Funktion gibt ein Array zurück, dessen erstes Element (<span class="inline2">[0]</span>) ein reeller Wert ist. Dieser Wert gibt den Status des Videos an und wird sein:</p>
  <ul class="colour">
    <li><strong>0</strong>, wenn das Video ohne Probleme abgespielt wird</li>
    <li><strong>-1</strong>, wenn ein Fehler aufgetreten ist</li>
    <li>Auf einigen <span class="notranslate">platforms</span>, <strong>-2</strong>, wenn das Video nicht mehr abgespielt wird (zu diesem Zeitpunkt kann es mit einem <span class="inline"><a href="video_close.htm">video_close()</a></span> -Aufruf aus dem Speicher entfernt werden)
      <ul>
        <li>Es wird empfohlen, stattdessen die <a data-xref="{text}" href="Videos.htm#h">Async Callbacks</a> zu verwenden, um zu wissen, wann ein Video endet</li>
      </ul>
    </li>
  </ul>
  <p>Wenn dieser Statuswert <strong>0</strong> ist, enthält das Array mehr Daten, die vom Format des Videos abhängen. Sie können das Videoformat erfahren, indem Sie <span class="inline"><a href="video_get_format.htm">video_get_format()</a></span> aufrufen.</p>
  <h2>RGBA-Videos</h2>
  <p><span>Bei RGBA-Videos enthält die Position <span class="inline2">[1]</span> die Fläche, auf der das Videobild gezeichnet wurde. Sie können diese Fläche abrufen und <a href="../Surfaces/draw_surface.htm">sie</a> manuell <a href="../Surfaces/draw_surface.htm">zeichnen</a>.</span></p>
  <h2>YUV-Videos</h2>
  <p><span>Einige <span class="notranslate">platforms</span> (insbesondere Konsolen) verwenden das YUV-Farbformat für Videos, bei dem zwei Oberflächen verwendet werden. In diesem Fall hat das Feld die Positionen <span class="inline2">[1]</span> und <span class="inline2">[2]</span> mit zwei Flächen:</span></p>
  <ul class="colour">
    <li><span><span class="inline2">[1]</span> ist die Hauptvideofläche in schwarz-weiß</span></li>
    <li><span><span class="inline2">[2]</span> ist die Chroma-Fläche, die alle Farbdaten enthält</span></li>
  </ul>
  <p>Diese beiden Oberflächen werden dann mit einem YUV-Shader kombiniert, bevor sie zur Texturierung eines benutzerdefinierten Quad verwendet werden, das das Video auf den Bildschirm zeichnet.</p>
  <p>Lesen Sie <a data-xref="{title}" href="YUV_Videos.htm">YUV-Videos</a>, um zu erfahren, wie Sie diese beiden Flächen mit einem Shader zeichnen können.</p>
  <p>Die spezifischen Implementierungsdetails für eine bestimmte Konsole finden Sie in der entsprechenden Dokumentation auf dem <a href="https://help.yoyogames.com/hc/en-us/">YoYo Games Helpdesk</a>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">video_draw();</p>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Array"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Overview/Arrays.htm">Array</a></span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var _data = video_draw();<br />
    var _status = _data[0];<br />
    var _video_status = video_get_status();<br />
    <br />
    if (_status == 0 &amp;&amp; _video_status == video_status_playing)<br />
    {<br />
        var _surface = _data[1];<br />
    <br />
        draw_surface(_surface, x, y);<br />
    }
  </p>
  <p>Das obige <span class="notranslate">code</span> ruft <span class="inline">video_draw()</span> auf und überprüft, ob der zurückgegebene Status 0 ist, was bedeutet, dass das Video abgespielt wird. In diesem Fall wird die Oberflächen-ID abgerufen und an der Position der Instanz gezeichnet. Dies funktioniert nur bei RGBA-Videos.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Zurück: <a data-xref="{title}" href="Videos.htm">Video-Wiedergabe</a></div>
        <div>Nächste: <a data-xref="{title}" href="YUV_Videos.htm">YUV-Videos</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
video_draw
-->
  <!-- TAGS
video_draw
-->
</body>
</html>