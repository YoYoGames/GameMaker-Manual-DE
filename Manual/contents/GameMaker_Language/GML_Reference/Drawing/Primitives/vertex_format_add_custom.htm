<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>vertex_format_add_custom</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for vertex_format_add_custom" />
  <meta name="rh-index-keywords" content="vertex_format_add_custom,vertex_type_float1,vertex_type_float2,vertex_type_float3,vertex_type_float4,vertex_type_colour,vertex_type_ubyte4,vertex_usage_position,vertex_usage_colour,vertex_usage_normal,vertex_usage_blendweight,vertex_usage_blendindices,vertex_usage_depth,vertex_usage_tangent,vertex_usage_binormal,vertex_usage_fog,vertex_usage_sample,vertex_usage_texcoord" />
  <meta name="search-keywords" content="vertex_format_add_custom,vertex_type_float1,vertex_type_float2,vertex_type_float3,vertex_type_float4,vertex_type_colour,vertex_type_ubyte4,vertex_usage_position,vertex_usage_colour,vertex_usage_normal,vertex_usage_blendweight,vertex_usage_blendindices,vertex_usage_depth,vertex_usage_tangent,vertex_usage_binormal,vertex_usage_fog,vertex_usage_sample,vertex_usage_texcoord" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>vertex_format_add_custom</h1>
  <p>Mit dieser Funktion können Sie einen benutzerdefinierten Datentyp für bestimmte Scheitelpunktformatattribute als Teil des neu zu erstellenden Scheitelpunktformats verwenden. Die verfügbaren Werte, die verwendet werden können, werden durch die unten aufgeführte Datentypkonstante definiert, die Sie auswählen:</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Draw_Vertex_Data_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_format_add_custom.htm">Scheitelpunkt Datentyp Konstante</a></span></th>
      </tr>
      <tr>
        <th>Konstante</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_float1</span></td>
        <td>Ein einzelner Gleitkommawert</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_float2</span></td>
        <td>Zwei Gleitkommawerte</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_float3</span></td>
        <td>Drei Gleitkommawerte</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_float4</span></td>
        <td>Vier Gleitkommawerte</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_colour</span></td>
        <td>Vier Komponentenwerte (r, g, b, a)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_ubyte4</span></td>
        <td>Vier vorzeichenlose Byte-Werte (von 0 bis 255)</td>
      </tr>
    </tbody>
  </table>
  <p><br>
    Die Verwendung dieser Konstanten muss ebenfalls definiert werden, damit die Werte in dem zu erstellenden Shader richtig &quot;gebunden&quot; werden können. Dies ist notwendig, da DX und OpenGL unterschiedliche Anforderungen haben. Wenn Sie sie also nicht richtig binden, werden sie im Shader nicht richtig dargestellt. Die verfügbaren Verwendungskonstanten, die Sie wählen können, sind unten aufgelistet und die, die Sie verwenden, hängen von den Besonderheiten des zu erstellenden Shaders ab:</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Draw_Vertex_Usage"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_format_add_custom.htm">Scheitelpunktverwendung Typ Konstante</a></span></th>
      </tr>
      <tr>
        <th>Konstante</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_position</span></td>
        <td>Positionswerte (x, y, z)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_colour</span></td>
        <td>Farbwerte (r, g, b, a)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_normal</span></td>
        <td>Scheitelnormalwerte (nx, ny, nz)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_textcoord</span></td>
        <td>UV-Koordinaten (u, v)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_blendweight</span></td>
        <td>das Blendgewicht der Eingabematrix (z. B. für Skelettanimation)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_blendindices</span></td>
        <td>die Indizes der zu verwendenden Matrizen (z. B. für Skelettanimationen)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_depth</span></td>
        <td>Scheitelpunkttiefe <span class="notranslate">buffer</span> Wert</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_tangent</span></td>
        <td>Tangenswerte</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_binormal</span></td>
        <td>binormale Werte</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_fog</span></td>
        <td>Nebelwerte</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_sample</span></td>
        <td>Probenehmer-Index</td>
      </tr>
      <tr>
        <td><span class="inline">vertex_usage_psize</span></td>
        <td>point size for point sprites</td>
      </tr>
    </tbody>
  </table>
  <p><br>
    Bei der Verwendung von benutzerdefinierten Formaten wie diesen sind einige wichtige Dinge zu beachten:</p>
  <ul class="colour">
    <li>Die Funktion <span class="inline">vertex_format_add_custom()</span> unterstützt nur <span class="inline">vertex_usage_position</span>, <span class="inline">vertex_usage_colour</span>, <span class="inline">vertex_usage_normal</span> und <span class="inline">vertex_usage_textcoord</span> bei Verwendung von GLSL-Shadern. Diese werden auf die Shader-Attribute <span class="inline">in_Position</span>, <span class="inline">in_Colour[0 - ...]</span> bzw. <span class="inline">in_Normal</span> abgebildet (alles, was nicht eines dieser drei Attribute ist - z. B. Texturkoordinaten - kann auf jedes beliebige Attribut abgebildet werden, das Sie definieren).</li>
    <li>Im Allgemeinen sollten Sie <span class="inline">vertex_usage_textcoord</span> für alle zusätzlichen Parameter verwenden, wo dies möglich ist, da Typen wie <span class="inline">vertex_usage_blendweight</span> und <span class="inline">vertex_usage_tangent</span> in den meisten Shader-Sprachen so gut wie veraltet sind und wahrscheinlich nicht richtig konvertiert werden können. Verwenden Sie stattdessen <span class="inline">vec</span>, <span class="inline">vec2</span>, <span class="inline">vec3</span> oder <span class="inline">vec4</span> Typen <span class="inline">vertex_usage_textcoord</span> und alles sollte gut funktionieren.</li>
    <li>GLSL ES unterstützt <i>keine</i> Integer-Attribute, so dass die Übergabe von <span class="inline">ivec4</span> nicht funktioniert (dieser Typ wird normalerweise bei der Übergabe von <span class="inline">vertex_usage_blendindices</span> verwendet). Was Sie tun müssen, ist in Textur-Koordinaten übergeben und dann in den Shader, konvertieren sie in <span class="inline">ivec4</span> wie folgt:</li>
  </ul>
  <p> </p>
  <p class="code">attribute vec3 in_Position;<br />
    attribute vec4 in_BlendIndices;<br />
    attribute vec4 in_BlendWeights;<br />
    <br />
    varying vec4 v_vColour;<br />
    varying mat4 v_mat;<br />
    <br />
    void main()<br />
    {<br />
        gl_Position = gm_Matrices[MATRIX_WORLD_VIEW_PROJECTION] * vec4( in_Position.xyz, 1.0);<br />
        v_vColour = in_BlendWeights;<br />
         ivec4 t = ivec4(in_BlendIndices);<br />
         v_mat = gm_Matrices[ t.x ];<br />
    }
  </p>
  <ul class="colour">
    <li>Überblendungsgewichte werden normalerweise in einem Array gespeichert, auf das dann über Überblendungsindizes zugegriffen wird. Hier sehen Sie jedoch, dass <span class="inline">in_BlendIndices</span> nicht als <span class="inline">ivec4</span> -Attribut definiert wird, sondern als <span class="inline">vec4</span>, das dann in <span class="notranslate">code</span> in ein <span class="inline">ivec4</span> umgewandelt wird. Dieses wird dann verwendet, um das mit <span class="inline">gm_Matrix</span> erstellte Array zu indizieren (auf ein Array kann nur über einen <span class="inline">INT</span> -Wert zugegriffen werden - nicht über einen Float).</li>
    <br />
     
  </ul>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">vertex_format_add_custom</span>(type, usage);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Constant_Draw_Vertex_Data_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_format_add_custom.htm">Scheitelpunkt Datentyp Konstante</a></span></td>
        <td><span class="notranslate">The data type that this custom vertex data will hold (see the <b><i>type constants</i></b> listed above).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">usage</span></td>
        <td><span data-keyref="Type_Constant_Draw_Vertex_Usage"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_format_add_custom.htm">Scheitelpunktverwendung Typ Konstante</a></span></td>
        <td><span class="notranslate">The use that the data will get(see the <b><i>usage constants</i></b> listed above).</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Void"><a data-rhwidget="HyperlinkPopover" href="../../../../../LINKGOESHERE">N/A</a></span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">vertex_format_begin();<br />
    vertex_format_add_textcoord();<br />
    vertex_format_add_custom(vertex_type_float3, vertex_usage_position);<br />
    my_format = vertex_format_end();</p>
  <p>Die obige <span class="notranslate">code</span> erstellt ein neues Vertex-Format mit nur Textur und 3 benutzerdefinierten Fließkommawerten für die Position. Es speichert dann die Format-ID in der Variablen &quot;my_format&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Primitives_And_Vertex_Formats.htm">Primitive und Vertex-Formate</a></div>
        <div style="float:right">Nächste: <a href="vertex_format_end.htm"><span class="notranslate">vertex_format_end</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
vertex_format_add_custom
vertex_type_float1
vertex_type_float2
vertex_type_float3
vertex_type_float4
vertex_type_colour
vertex_type_ubyte4
vertex_usage_position
vertex_usage_colour
vertex_usage_normal
vertex_usage_textcoord
vertex_usage_blendweight
vertex_usage_blendindices
vertex_usage_depth
vertex_usage_tangent
vertex_usage_binormal
vertex_usage_fog
vertex_usage_sample
-->
  <!-- TAGS
vertex_format_add_custom
-->
</body>
</html>