<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gerät_maus_x_zu_gui</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for device_mouse_x_to_gui" />
  <meta name="rh-index-keywords" content="device_mouse_x_to_gui" />
  <meta name="search-keywords" content="device_mouse_x_to_gui" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gerät_maus_x_zu_gui</h1>
  <p>Diese Funktion gibt die x-Position der Berührung auf dem Gerät in Bezug auf die GUI-Ebene zurück. Da die GUI-Ebene unabhängig von der Bildschirmauflösung <i>und der</i> Raumgröße auf eine unterschiedliche Größe eingestellt werden kann, kann es manchmal kompliziert sein, den genauen Punkt auf der GUI-Ebene zu ermitteln, an dem ein Benutzer den Bildschirm berührt hat. Mit dieser Funktion können Sie diese Position auf der Grundlage der tatsächlichen GUI-Größe ermitteln, was die Erstellung von GUI-Schaltflächen und HUD-Elementen und die Interaktion damit erleichtert. Wenn Sie diese Funktion auf HTML5 oder PC und Mac <span class="notranslate">modules</span> ausführen, wird dieser Wert ständig aktualisiert, solange das Gerät (in der Regel eine Maus) angeschlossen ist. Bei mobilen Geräten wird dieser Wert jedoch nur aktualisiert, während der Bildschirm berührt wird, und es ist zu beachten, dass die maximale Anzahl der Berührungen, die erkannt werden können, stark vom verwendeten Gerät und dem Betriebssystem abhängt.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">device_mouse_x_to_gui(device);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Typ</th>
        <th>Beschreibung</th>
     </tr>
      <tr>
        <td><span class="notranslate">device</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The device (from 0 - <i>n</i>) that is being checked.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">if device_mouse_check_button(0, mb_left)<br />
    {<br />
        if device_mouse_x_to_gui(0) &gt; 0 &amp;&amp; device_mouse_x_to_gui(0) &lt; 32<br />
        {<br />
            pressed = true;<br />
        }<br />
        else<br />
        {<br />
            pressed = false;<br />
        }<br />
    }</p>
  <p>Die obige <span class="notranslate">code</span> prüft, ob die Gerätemaus gedrückt wird, und wenn ja, fragt sie die x-Position des Geräts auf der GUI-Ebene ab, um zu sehen, ob sie innerhalb der Parameter liegt. Ist dies der Fall, so wird die Variable &quot;pressed&quot; auf <span class="inline">true</span> gesetzt, andernfalls wird sie auf <span class="inline">false</span> gesetzt.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Device_Input.htm">Geräteeingabe</a></div>
        <div style="float:right">Nächste: <a href="device_mouse_y_to_gui.htm"><span class="notranslate">device_mouse_y_to_gui</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
device_mouse_x_to_gui
-->
  <!-- TAGS
device_mouse_x_to_gui
-->
</body>
</html>