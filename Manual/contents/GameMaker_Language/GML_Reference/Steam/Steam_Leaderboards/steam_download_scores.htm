<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>steam_download_scores</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for steam_download_scores" />
  <meta name="rh-index-keywords" content="steam_download_scores" />
  <meta name="search-keywords" content="steam_download_scores" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>steam_download_scores</h1>
  <p>Diese Funktion wird verwendet, um einen sequentiellen Bereich von Leaderboard-Einträgen nach Leaderboard-Rang abzurufen. Die Parameter <tt>start_idx</tt> und <tt>end_idx</tt> steuern den angeforderten Bereich von Rängen. So können Sie beispielsweise die Top 10 in einem Leaderboard für Ihr Spiel anzeigen, indem Sie den Startwert auf 1 und den Endwert auf 10 setzen. Der Name der Bestenliste ist eine Zeichenkette, die Sie beim Erstellen der Bestenliste mit der Funktion <a href="steam_create_leaderboard.htm"><tt>steam_create_leaderboard()</tt></a>Die Funktion gibt einen Wert zurück, der dann zur Identifizierung des Rückrufs im <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Steam.htm">Steam-Async-Ereignis</a> verwendet werden kann, oder sie gibt -1 zurück, wenn sie fehlgeschlagen ist. Beachte, dass beim Herunterladen einer Bestenliste der Schlüssel &quot;entries&quot; der <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>asynchron_laden</tt></a> Karte einen zusätzlichen &quot;data&quot;-Schlüssel haben kann, wenn zusätzliche <span class="notranslate">buffer</span> Daten zusammen mit dem Spielstand hochgeladen wurden (siehe <a href="steam_upload_score_buffer.htm"><tt>steam_upload_score_buffer()</tt></a>). Diese Daten <span class="notranslate">buffer</span> sind <b>Base 64 kodiert</b> und Sie müssen daher die Funktion <a href="../../Buffers/buffer_base64_decode.htm"><tt>buffer_base64_decode()</tt></a> auf <span class="notranslate">buffer</span> verwenden, bevor Sie die Daten lesen.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">steam_download_scores(lb_name, start_idx, end_idx);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">lb_name</span></td>
        <td>Der Name der Rangliste, von der Sie die Ergebnisse herunterladen (eine Zeichenkette).</td>
      </tr>
      <tr>
        <td><span class="notranslate">start_idx</span></td>
        <td>Die Startposition innerhalb der Rangliste.</td>
      </tr>
      <tr>
        <td><span class="notranslate">end_idx</span></td>
        <td>Die Endposition innerhalb der Rangliste.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Erweitertes Beispiel:</h4>
  <p>In diesem erweiterten Beispiel werden wir die Top-Ten-Rangliste für das gegebene Leaderboard abfragen und die Ergebnisse im <b>Steam Async Event</b> parsen. Zu Beginn müssen wir die Scores mit dem folgenden Code abfragen:</p>
  <p class="code">score_get = steam_download_scores(&quot;Game Scores&quot;, 1, 10);</p>
  <p>Dies sendet eine Anfrage an die <span class="notranslate">Steam</span> <span class="notranslate">Server</span> für die Spielstände aus dem Leaderboard &quot;Game Scores&quot; und speichert die <b>async id</b> der Anfrage in der Variable &quot;score_get&quot;. dies wird dann in der <b>Steam Async Event</b> in der folgenden Weise behandelt werden:</p>
  <p class="code">var async_id = ds_map_find_value(async_load, &quot;id&quot;);<br />
    if async_id == score_get<br />
    {<br />
        var entries = ds_map_find_value(async_load, &quot;entries&quot;);<br />
        var map = json_decode(entries);<br />
        if ds_map_exists(map, &quot;default&quot;)<br />
        {<br />
            ds_map_destroy(map);<br />
            exit;<br />
        }<br />
        else<br />
        {<br />
            var list = ds_map_find_value(map, &quot;entries&quot;);<br />
            var len = ds_list_size(list);<br />
            var entry;<br />
            for(var i = 0; i &lt; len; i++;)<br />
            {<br />
                entry = ds_list_find_value(list, i );<br />
                steam_name[i] = ds_map_find_value(entry, &quot;name&quot;);<br />
                steam_score[i] = ds_map_find_value(entry, &quot;score&quot;);<br />
                steam_rank[i] = ds_map_find_value(entry, &quot;rank&quot;);<br />
            }<br />
        }<br />
        ds_map_destroy(map)<br />
    }</p>
  <p>Hier wird zunächst der &quot;id&quot;-Schlüssel der speziellen <tt>async_load</tt> DS-Map überprüft. Wenn dieser Wert mit dem Wert der ursprünglichen Callback-Funktion übereinstimmt (der in der Variablen &quot;score_get&quot; gespeichert ist), fahren wir mit der Verarbeitung der Daten fort. Als erstes wird die <tt>async_load</tt> ds_map nach dem Schlüssel &quot;entries&quot; geparst, der ein JSON-Objekt mit den Daten der Bestenliste enthält. Dieses JSON-Objekt wird dann dekodiert (siehe <a href="../../File_Handling/Encoding_And_Hashing/json_decode.htm"><tt>json_decode()</tt></a>) als eine weitere DS-Map dekodiert, und diese neue Map-ID wird in der Variablen &quot;map&quot; gespeichert.</p>
  <p>Diese Karte wird auf den Schlüssel &quot;default&quot; geprüft, und wenn dieser gefunden wird, wird die Karte zerstört und das Ereignis beendet. Wenn kein &quot;default&quot;-Schlüssel gefunden wird, analysiert <span class="notranslate">code</span> die Karte, um die notwendigen Informationen über die Bestenliste zu extrahieren, indem zunächst eine DS-Liste aus dem &quot;entries&quot;-Schlüssel der DS-Karte extrahiert wird und dann in einer Schleife jeder Eintrag der Liste durchlaufen wird, um <i>eine weitere</i> DS-Karte mit dem Namen, der Punktzahl und dem Rang jedes Eintrags zu erhalten. Diese Werte werden dann in Arrays gespeichert.</p>
  <p>Sobald <span class="notranslate">loop</span> beendet ist, wird die JSON DS-Map zerstört (was wiederum alle internen Maps und Listen zerstört). Es besteht keine Notwendigkeit, die <tt>async_load</tt> DS-Map zu zerstören, da dies von <span class="notranslate">GameMaker Studio 2</span> übernommen wird.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Steam_Leaderboards.htm">Bestenlisten</a></div>
        <div style="float:right">Nächste: <a href="steam_download_scores_around_user.htm"><span class="notranslate">steam_download_scores_around_user</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
steam_download_scores
-->
  <!-- TAGS
steam_download_scores
-->
</body>
</html>