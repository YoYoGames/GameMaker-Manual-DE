<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>string_format</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for string_format" />
  <meta name="rh-index-keywords" content="string_format" />
  <meta name="search-keywords" content="string_format" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>string_format</h1>
  <p>Wandelt eine reelle Zahl in eine Zeichenkette mit eigener Formatierung um, wobei Sie wählen können, wie viele &quot;Stellen&quot; in der Zeichenkette gespeichert werden und wie viele Nachkommastellen ebenfalls gespeichert werden. Beides kann sehr praktisch sein, denn manche Spiele bevorzugen es, einen Spielstand als eine bestimmte Anzahl von Ziffern anzuzeigen, während die Kontrolle über die Nachkommastellen gut für eine hohe Genauigkeit sein kann, die die zwei Nachkommastellen von <a href="string.htm"><span class="inline">string()</span></a> nicht bieten können. Wenn die Anzahl der angegebenen Stellen größer ist als der anzuzeigende Wert und/oder die Anzahl plus die angegebenen Nachkommastellen kleiner ist als die Gesamtzahl der Stellen, dann werden Leerzeichen vor dem Wert hinzugefügt, um die Differenz auszugleichen (siehe das Beispiel unten). Ist der angegebene Wert kleiner als die Gesamtzahl und die Anzahl der einzubeziehenden Dezimalstellen, werden rechts vom Dezimalkomma Nullen hinzugefügt. Das Standardformat ist ohne zusätzliche Leerzeichen auf der linken Seite und mit nur zwei Dezimalstellen auf der rechten Seite, z. B. &quot;265,73&quot;.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">string_format(val, tot, dec);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">val</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The real number to be turned into a string.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">tot</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The total number of places of the main number to be shown. Zeroes or spaces will be inserted to match this.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">dec</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The number of decimal places to be included.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_String">String</span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">str1 = string_format(1234, 8, 0);<br />
    str2 = string_format(pi, 1, 10);<br />
    str3 = string_format(pi, 5, 5);</p>
  <p>Dadurch wird <span class="inline">str1</span> auf &quot;1234&quot;, <span class="inline">str2</span> auf &quot;3,1415926535&quot; und <span class="inline">str3</span> auf &quot;3,14159&quot; gesetzt.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Strings.htm">Streicher</a></div>
        <div style="float:right">Nächste: <a href="string_insert.htm"><span class="notranslate">string_insert</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
string_format
-->
  <!-- TAGS
string_format
-->
</body>
</html>