<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Ein Multiplayer-Spiel erstellen</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Follow this tutorial to make your first multiplayer game" />
  <meta name="template" content="../../../assets/masterpages/Manual_Page.htt" />
  <meta name="condition-tags" content="Export:Beta" />
</head>
<body>
  <h1>Ein Multiplayer-Spiel erstellen</h1>
  <p class="note">Auf dieser Seite werden Sie durch die einzelnen Schritte zur Erstellung Ihres ersten Mehrspieler-Spiels geführt.<br>
    <br>
    Für Informationen über das Rollback-System lesen Sie <a data-xref="{title}" href="Rollback_System.htm">Rollback-System</a>.<br>
    <br>
    Für Details zu allen Rollback-Funktionen lesen Sie <a data-xref="{title}" href="Rollback_Functions/Rollback_Functions.htm">Rollback-Funktionen</a>.
  </p>
  <h2>Projekt einrichten</h2>
  <p>Starten Sie ein neues Projekt, und erstellen Sie ein <span class="notranslate">sprite</span> für Ihr Player-Objekt. Sie können ein Bild importieren oder einfach ein ausgefülltes Quadrat erstellen.</p>
  <p>Erstellen Sie zwei Objekte:</p>
  <ul class="colour">
    <li><strong>obj_game</strong>: Hier wird dein Multiplayer-Spiel verwaltet.</li>
    <li><strong>obj_player</strong>: Dies ist Ihr eigentliches Spielerobjekt. Jeder angeschlossene Spieler hat seine eigene Instanz dieses Objekts, die er steuern kann.<br>
      <br>
      Weisen Sie dem Player-Objekt Ihren Spieler <span class="notranslate">sprite</span> zu.
    </li>
  </ul>
  <p><img class="center_shadow" height="220" src="../../../assets/Images/Scripting_Reference/GML/Reference/Rollback/rollback_assets.png" width="196" /></p>
  <p>Fahre fort und platziere <strong>obj_game</strong> in einem Raum. Platziere <strong>obj_player</strong> <strong>nicht</strong>, da es automatisch erstellt wird.</p>
  <h2>Starten des Spiels</h2>
  <p>Fügen Sie das Ereignis "Create" zu <strong>obj_game</strong> hinzu und schreiben Sie die folgende <span class="notranslate">code</span> in dieses Ereignis:</p>
  <p class="note"><span class="note">HINWEIS</span> Wenn Sie <span class="notranslate">GML</span> Visual verwenden, verwenden Sie die entsprechenden <a href="../../../Drag_And_Drop/Drag_And_Drop_Reference/Rollback/Rollback_Actions.htm">Rollback-Aktionen</a>.</p>
  <p class="code">rollback_define_player(obj_player);<br />
    <br />
    var _joined = rollback_join_game();<br />
    <br />
    if (!_joined)<br />
    {<br />
        rollback_create_game(2);<br />
    }
  </p>
  <p>Er definiert zunächst das zu verwendende Spielerobjekt und versucht, einem Spiel beizutreten, indem er <a href="Rollback_Functions/rollback_join_game.htm"><span class="inline">rollback_join_game()</span></a>. Diese Funktion gibt <span class="inline">true</span> zurück, wenn das System ein Spiel gefunden hat, dem man beitreten kann (was bedeutet, dass man sich auf der richtigen URL befindet).</p>
  <p>Wenn dem Spiel nicht beigetreten werden konnte, wird <span class="inline">false</span> zurückgegeben. Wenn der zurückgegebene Wert <span class="inline">false</span> ist, rufen wir <a href="Rollback_Functions/rollback_create_game.htm"><span class="inline">rollback_create_game()</span></a> um unser eigenes Spiel zu veranstalten. Dort geben wir an, dass das Spiel maximal 2 Spieler zulassen soll.</p>
  <p class="note"><span class="note">HINWEIS</span> Zurzeit können Sie nur Spiele für bis zu 4 Spieler erstellen.</p>
  <p>Die obige <span class="notranslate">code</span> wird zwei Instanzen von <strong>obj_player</strong> in der linken oberen Ecke des Raumes erzeugen, aber sie werden noch nicht steuerbar sein.</p>
  <p><img class="center_shadow" height="335" src="../../../assets/Images/Scripting_Reference/GML/Reference/Rollback/rollback_player_spawned.png" width="447" /></p>
  <h2>Bewegliche Spieler</h2>
  <p>Die Eingaben werden durch das Rollback-System verwaltet und automatisch zwischen den Spielern synchronisiert.</p>
  <p>Rufen Sie in Ihrem Player-Objekt <span class="inline"><a href="Rollback_Functions/rollback_get_input.htm">rollback_get_input()</a></span> auf, um eine Struktur mit allen Standardeingaben abzurufen, die wie folgt lauten:</p>
  <p class="note"><span class="inline"><strong>left</strong>, <strong>right</strong>, <strong>up</strong>, <strong>down</strong>, <strong>Z</strong>, <strong>X</strong>, <strong>C</strong>, <strong>space</strong></span><br>
    <br>
    <em>Diese zeigen an, ob der Schlüssel gehalten wird.</em> <span class="inline">*<strong>_pressed</strong></span> <em>und </em><span class="inline">*<strong>_released</strong></span> <em>sind ebenfalls vorhanden.</em>
  </p>
  <p>Um Ihre eigenen Eingaben zu definieren, siehe <a data-xref="{title}" href="Defining_Inputs.htm">Eingaben definieren</a>.</p>
  <p>Richten Sie nun den Player mit den folgenden <span class="notranslate">code</span> in seinen Ereignissen Create und Step ein:</p>
  <p class="code">// Create Event<br />
    move_speed = 5;<br />
    <br />
    // Step Event<br />
    var _input = rollback_get_input();<br />
    <br />
    if (_input.left) x -= move_speed;<br />
    if (_input.right) x += move_speed;<br />
    if (_input.up) y -= move_speed;<br />
    if (_input.down) y += move_speed;
  </p>
  <p>Dadurch wird eine Variable mit der Geschwindigkeit des Spielers eingerichtet, und im Step-Ereignis wird die Eingabestruktur abgerufen.</p>
  <p>Mit jeder gedrückten Pfeiltaste wird die Instanz auf der entsprechenden Achse verschoben, z. B. wird durch Drücken der linken Taste die X-Achse verkleinert, durch Drücken der oberen Taste die Y-Achse und so weiter.</p>
  <h2>Spieler-Standorte</h2>
  <p>Bevor wir den Test durchführen, sollten wir sicherstellen, dass die Spieler an bestimmten Orten erstellt werden, anstatt in der linken oberen Ecke des Raumes zu spawnen.</p>
  <p>Schreiben Sie in das Ereignis "Create" Ihres Player-Objekts Folgendes:</p>
  <p class="code">if (player_id == 0)<br />
    {<br />
        x = 300;<br />
    }<br />
    else if (player_id == 1)<br />
    {<br />
        x = room_width - 300;<br />
    }<br />
    <br />
    y = room_height / 2;
  </p>
  <p><span class="inline"><a data-xref="{title}" href="Rollback_Variables/player_id.htm">player_id</a></span> ist eine integrierte Instanzvariable, die die ID der Player-Instanz speichert.</p>
  <p>Da unser Spiel zwei Spieler hat, hat der erste Spieler die ID <strong>0</strong> und der zweite Spieler die ID <strong>1</strong>.</p>
  <p>Auf dieser Grundlage ändern wir die anfängliche X-Position des Spielers. Die Y-Position ist für beide gleich.</p>
  <p>Starten Sie nun das Spiel, und Sie werden beide Spieler sehen, wobei Sie den ersten steuern können:</p>
  <p><video class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Rollback/rollback_two_players_synctest.mp4" width="856" height="420" controls="" align="center"></video></p>
  <p>Der zweite Spieler bewegt sich erratisch von selbst, was eine Funktion des Rollback-Systems ist. Es liefert automatisch in jedem Frame Zufallswerte für alle definierten Eingaben, als eine grundlegende Form des Tests für Ihr Spiel.</p>
  <p>Sie können die automatische Zufallsbewegung deaktivieren, indem Sie <a href="Rollback_Functions/rollback_use_random_input.htm"><span class="inline">rollback_use_random_input(false)</span></a>deaktivieren oder einen <a href="Defining_Inputs.htm#h1">eigenen &quot;Schein&quot;-Eingang</a> für den anderen Spieler einrichten.</p>
  <h2>Online-Verbindung</h2>
  <p>Ihr grundlegendes Multiplayer-Beispiel ist fertig und bereit, ins Internet gestellt zu werden.</p>
  <p>Standardmäßig startet das System im <strong>Sync-Test-Modus</strong>, mit dem Sie Ihr Spiel offline testen können. Um die Online-Funktionalität zu aktivieren, muss die zweite <span class="notranslate">argument</span> von <span class="inline"><a href="Rollback_Functions/rollback_create_game.htm">rollback_create_game()</a></span> auf <span class="inline">false</span> gesetzt werden (wodurch der Sync-Test deaktiviert wird).</p>
  <p>Es muss auch eine Standardregion festgelegt werden, nämlich die dritte <span class="notranslate">argument</span>. Siehe: <a data-xref="{text}" href="Rollback_Functions/rollback_create_game.htm#h">Abrufen von Regionsnamen</a></p>
  <p class="code">// obj_game: Create event<br />
    rollback_define_player(obj_player);<br />
    <br />
    var _joined = rollback_join_game();<br />
    <br />
    if (!_joined)<br />
    {<br />
        rollback_create_game(2, false, &quot;Europe&quot;); // &lt;- disable Sync Test, set default region<br />
    }
  </p>
  <p>Melden Sie sich in Ihrem Opera GX-Browser bei <a href="https://gx.games">GX.games</a> an.</p>
  <p>Lassen Sie das Spiel über das <strong>Opera GX-Ziel</strong> laufen. Wenn das Rollback-System beginnt, wird ein neuer &quot;Raum&quot; erstellt: kein <span class="notranslate">GameMaker</span> Raum-Asset, sondern ein <strong>virtueller Raum</strong>, in dem die Spieler zusammen spielen werden.</p>
  <h2>Spieler einladen</h2>
  <p>Wenn Ihr Spiel beginnt, sehen Sie die Spieler-Instanzen nicht sofort. Stattdessen wartet das System, bis alle Spieler beigetreten sind, bevor es das Spiel startet.</p>
  <p class="note"><span class="tip">TIPP</span> Sie können das Spiel starten, bevor Spieler beigetreten sind, indem Sie <a href="Rollback_Functions/rollback_start_game.htm"><span class="inline">rollback_start_game()</span></a>. Wenn Sie <a href="Rollback_Functions/rollback_use_manual_start.htm"><span class="inline">rollback_use_manual_start()</span></a> anrufen, wartet das Spiel darauf, dass Sie es manuell starten, auch wenn alle Spieler bereits beigetreten sind.</p>
  <p>Während Sie warten, sehen Sie eine Schaltfläche &quot;<strong>Copy Share Url</strong>&quot; unter Ihrem Spiel. Scrollen Sie nach unten, wenn Sie die Schaltfläche nicht sehen.</p>
  <p><img>Dadurch wird ein Link zu Ihrem Spiel kopiert, den Sie in ein anderes Browserfenster einfügen können, um als zweiter Spieler teilzunehmen.</p>
  <p>Es müssen beide Browserfenster gleichzeitig sichtbar sein, da sonst der Spieler, dessen Fenster ausgeblendet ist, eine Zeitüberschreitung erleidet und Ihr Spiel beendet wird.</p>
  <p>Sobald beide Spielinstanzen verbunden und synchronisiert sind, können Sie jeden Spieler über sein Browserfenster steuern:</p>
  <p><img>Sie können beide Fenster nebeneinander öffnen, indem Sie sie ziehen und ihre Größe ändern.</p>
  <p>Während des Tests werden in der oberen linken Ecke des Spiels Debug-Meldungen angezeigt, die Ihnen Informationen über den Zustand des Spiels geben. Sie können dies deaktivieren, indem Sie <span class="inline"><a href="Rollback_Functions/rollback_display_events.htm">rollback_display_events(false)</a></span> aufrufen.</p>
  <h2 id="h">Verlassen eines Raumes</h2>
  <p>Rufen Sie  auf. <a href="Rollback_Functions/rollback_leave_game.htm"><span class="inline">rollback_leave_game()</span></a> um einen Spieler dazu zu bringen, den Raum zu verlassen. Lesen Sie die <a href="Rollback_Functions/rollback_leave_game.htm">Funktionsseite</a> für ausführliche Informationen zu ihrer Verwendung.</p>
  <h2>Spiel-Logik</h2>
  <p>Das Rollback-System wird automatisch Spielerinstanzen erstellen, wenn alle Spieler beigetreten sind, solange Sie <a href="Rollback_Functions/rollback_define_player.htm"><span class="inline">rollback_define_player()</span></a>.</p>
  <p>Dennoch können Sie vor dem Spielbeginn alle anderen <span class="notranslate">code</span> ausführen, d. h. Sie müssen darauf achten, dass Sie Ihre Kernspiellogik erst dann starten, wenn alle Spieler beigetreten sind.</p>
  <p>Wenn Sie beispielsweise feindliche Instanzen mithilfe eines Alarms spawnen, starten Sie diesen Alarm erst, wenn das Ereignis " <a data-xref="{text}" href="Rollback_Events.htm#h">Rollback Start"</a> ausgelöst wird.</p>
  <h2>Wichtige Ereignisse</h2>
  <p>Wichtige Ereignisse in Ihrem Spiel, wie z. B. der Sieg eines Spielers und das Ende des Levels, sollten dann stattfinden, wenn alle Spieler synchronisiert sind. Andernfalls könnte eine falsche Vorhersage dazu führen, dass ein Spieler fälschlicherweise den Sieg davonträgt, was seltsam erscheinen würde, wenn das Spiel schließlich rückgängig gemacht wird.</p>
  <p>Siehe das Beispiel auf <span class="inline"><a href="Rollback_Functions/rollback_sync_on_frame.htm">rollback_sync_on_frame()</a></span>, wie man das richtig macht.</p>
  <h2>Weitere Lektüre</h2>
  <p>Ihr erstes Multiplayer-Spiel ist nun abgeschlossen!</p>
  <p>Lesen Sie die folgenden Seiten, um alles über das Rollback-System zu erfahren:</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="Rollback_System.htm">Rollback-System</a></li>
    <li><a data-xref="{title}" href="Defining_Inputs.htm">Definieren von Eingaben</a></li>
    <li><a data-xref="{title}" href="Rollback_Constraints.htm">Rollback-Einschränkungen</a></li>
    <li><a data-xref="{title}" href="Rollback_Events.htm">Rollback-Ereignisse</a></li>
    <li><a data-xref="{title}" href="Rollback_Preferences.htm">Spieler-Einstellungen</a></li>
  </ul>
  <p>Sie können einen Chat zu Ihrem Spiel hinzufügen, indem Sie <a href="Rollback_Functions/rollback_chat.htm"><span class="inline">rollback_chat()</span></a>.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Zurück: <a data-xref="{title}" href="Rollback_Multiplayer.htm">Rollback Multiplayer</a></div>
        <div>Nächste: <a data-xref="{title}" href="Rollback_System.htm">Rollback-System</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
</body>
</html>