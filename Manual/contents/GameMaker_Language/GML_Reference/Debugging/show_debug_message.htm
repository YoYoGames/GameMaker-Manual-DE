<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>show_debug_message</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for show_debug_message" />
  <meta name="rh-index-keywords" content="show_debug_message" />
  <meta name="search-keywords" content="show_debug_message" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>show_debug_message</h1>
  <p>Mit dieser Funktion wird eine benutzerdefinierte Debug-Meldung erstellt, die im Fenster <span class="notranslate">compiler</span> unter <span class="notranslate">runtime</span> angezeigt wird. Beachten Sie, dass die Meldung <i>entweder</i> eine Zeichenkette oder eine reelle Zahl sein kann, aber wenn Sie beides benötigen, muss die Zahl zuerst mit der Funktion <a href="../Strings/Strings.htm"><span class="inline">string()</span></a> in eine Zeichenkette umgewandelt werden (siehe das Beispiel unten). Wenn die Zahl mehr als zwei Dezimalstellen hat, sollten Sie <a href="../Strings/string_format.htm"><span class="inline">string_format()</span></a> verwenden, um sie anzuzeigen, da Dezimalzahlen standardmäßig auf die nächsten zwei Dezimalstellen gerundet werden (so würde &quot;1,2468&quot; im Ausgabefenster als &quot;1,25&quot; angezeigt).</p>
  <p>Debug-Meldungen, die mit dieser Funktion angezeigt werden, werden im <a href="../../../Introduction/The_Output_Window.htm">Compiler-Ausgabefenster</a> unten auf <span class="notranslate">IDE</span> sowie in der <a href="../../../IDE_Tools/The_Debugger.htm">Grafikansicht</a> des Debuggers angezeigt, wenn das Spiel im Debug-Modus läuft. Wenn Sie die Meldungen nur im Debug-Modus sehen wollen, sollten Sie wahrscheinlich die Funktion <a href="debug_event.htm"><span class="inline">debug_event()</span></a> stattdessen verwenden.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">show_debug_message(string);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Typ</th>
        <th>Beschreibung</th>
     </tr>
      <tr>
        <td><span class="notranslate">string</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The custom debug message to show.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4><b>Beispiel:</b></h4>
  <p class="code">if !instance_exists(obj_Exit)<br />
    {<br />
        show_debug_message(&quot;Exit not created!&quot;);<br />
        show_debug_message(&quot;Error Num: &quot; + string(global.error));<br />
        game_end();<br />
    }</p>
  <p>Die obige <span class="notranslate">code</span> prüft, ob eine Instanz existiert und wenn nicht, wird eine Debug-Meldung im Kompilierfenster angezeigt und das Spiel beendet.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Debugging.htm">Fehlersuche</a></div>
        <div style="float:right">Nächste: <a href="show_debug_overlay.htm"><span class="notranslate">show_debug_overlay</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
show_debug_message
-->
  <!-- TAGS
show_debug_message
-->
</body>
</html>