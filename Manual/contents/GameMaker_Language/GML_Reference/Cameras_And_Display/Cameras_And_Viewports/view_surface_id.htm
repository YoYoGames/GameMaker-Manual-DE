<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>view_surface_id</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for view_surface_id" />
  <meta name="rh-index-keywords" content="view_surface_id" />
  <meta name="search-keywords" content="view_surface_id" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>view_surface_id</h1>
  <p>Mit dieser Variablen können Sie den Inhalt eines gegebenen Viewports festlegen, um auf eine Oberfläche zu zeichnen, oder die aktuelle Oberflächen-ID abrufen, wenn eine Oberfläche einem Viewport zugewiesen wurde. Wenn Sie mit Oberflächen arbeiten, ist es oft erforderlich, dass Sie den <i>gesamten</i> sichtbaren Bereich des Bildschirms auf die Oberfläche übertragen. Dies bedeutet, dass alles, was in der gewählten Ansicht angezeigt wird, nun auf die zugewiesene Oberfläche gezeichnet wird. Die Ansicht wird nun <i>nicht</i> auf den Bildschirm gezeichnet, was bedeutet, dass Sie entweder:</p>
  <ul class="colour">
    <li>Aktivieren Sie eine neue Ansicht und zeichnen Sie die Oberfläche nur in dieser Ansicht (mit <a href="view_current.htm"><span class="inline">view_current</span></a> um zu prüfen, welche Ansicht gezeichnet wird)</li>
    <li>Zeichnen Sie die Oberfläche im Draw GUI- oder Post Draw-Ereignis einer Instanz, da diese Ereignisse unabhängig von Ansichten sind.</li>
  </ul>
  <p>Sie können diese Variable auch auslesen, um den Index der Oberfläche zu erhalten, die der gewählten Ansicht zugewiesen wurde, oder sie gibt -1 zurück, wenn keine Oberfläche zugewiesen wurde, und im Allgemeinen sollte die für diese Funktion verwendete Oberfläche der Größe der Fachkamera selbst entsprechen (nicht dem Viewport). Das erweiterte Beispiel unten zeigt ein grundlegendes Setup für das Erfassen einer Ansicht und das Zeichnen im <b>Draw GUI-Ereignis</b>, und für weitere Informationen über Oberflächen siehe den Abschnitt <a href="../../Drawing/Surfaces/Surfaces.htm">Oberflächen</a>.</p>
  <p>Beachten Sie, dass Sie einen Viewport auch auf eine Oberfläche setzen können, indem Sie die Funktion <a href="view_set_surface_id.htm"><span class="inline">view_set_surface_id()</span></a>.</p>
  <div data-conref="../../../../assets/snippets/Recursive_Surface_Draw_Error.hts"> </div>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">view_surface_id[0...7];</p>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_ID_Surface">Surface ID</span> or -1 (if no surface has been assigned)</p>
  <p> </p>
  <h4>Erweitertes Beispiel:</h4>
  <p>In diesem erweiterten Beispiel werden wir eine Oberfläche erstellen und sie dem View-Port[0] zuweisen, damit sie die diesem Port zugewiesene Kameraansicht erfasst, und diese dann im Draw-GUI-Ereignis auf den Bildschirm zeichnen. Zunächst müssen wir unsere Oberflächenvariable im <b>Create-Event</b> einer Controller-Instanz initialisieren:</p>
  <p class="code">surf = -1;</p>
  <p>Wir setzen die Oberflächenvariable auf -1, da alle Oberflächenfunktionen wirklich in den <b>Draw-Ereignissen</b> verwendet werden sollten, um seltsame Fehler oder undefiniertes Verhalten zu vermeiden. So, mit, dass getan, würden wir dann haben diese in der wichtigsten <b>Draw-Ereignis</b>:</p>
  <p class="code">if !surface_exists(surf)<br />
    {<br />
        surf = surface_create(camera_get_view_width(view_camera[0]), camera_get_view_height(view_camera[0]));<br />
        view_surface_id[0] = surf;<br />
    }</p>
  <p>Oberflächen sind <i>flüchtig</i>, was bedeutet, dass sie jederzeit aufgrund der Speicherverwaltung des Betriebssystems und anderer Dinge aus dem Speicher entfernt werden können. Hier prüfen wir also, ob unsere Oberfläche existiert, und wenn nicht, erstellen wir sie und weisen sie der Ansicht 0 zu. Wenn das geschehen ist, wird alles, was in der Ansicht 0 erscheinen würde, stattdessen auf die von uns erstellte Oberfläche gezeichnet. Wenn du an dieser Stelle nichts weiter tust, wirst du beim Starten deines Spiels einfach einen leeren Bildschirm erhalten, da alles auf der Oberfläche gezeichnet wird, aber die Oberfläche selbst wird nirgendwo gezeichnet. Deshalb müssen wir jetzt die Oberfläche im <b>Draw GUI-Event</b> wie folgt auf den Bildschirm zeichnen:</p>
  <p class="code">if surface_exists(surf)<br />
    {<br />
        draw_surface_stretched(surf, 0, 0, display_get_gui_width(), display_get_gui_height());<br />
    }</p>
  <p>Diese <span class="notranslate">code</span> zeichnet nun die Oberfläche, die wir mit der Fachkamera erstellt haben, so, dass sie die gesamte GUI-Ebene ausfüllt.</p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Cameras_And_View_Ports.htm">Kameras und View Ports</a></div>
        <div style="float:right">Nächste: <a href="view_get_camera.htm"><span class="notranslate">view_get_camera</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
view_surface_id
-->
  <!-- TAGS
view_surface_id
-->
</body>
</html>