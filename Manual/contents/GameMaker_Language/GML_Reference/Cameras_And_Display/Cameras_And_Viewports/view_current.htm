<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ansehen_aktuell</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for view_current" />
  <meta name="rh-index-keywords" content="view_current" />
  <meta name="search-keywords" content="view_current" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>ansehen_aktuell</h1>
  <p>Diese <b>nur lesbare</b> Variable ist nur im <a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm"><b>Draw-Ereignis</b></a> und gibt den aktuell gerenderten Viewport zurück. Der Rückgabewert ändert sich während des Draw-Ereignisses, wenn Sie verschiedene Ansichten haben, da das Draw-Ereignis <i>einmal für jeden Viewport nacheinander</i> aufgerufen wird. Wenn du also (zum Beispiel) view port[0] und view port[1] in deinem Spielraum verwendest, wird das draw-Ereignis für <i>ALLE</i> Instanzen zweimal ausgeführt, einmal für jeden Port, und mit dieser Variable kannst du überprüfen, welche Ansicht gerade gezeichnet wird. Im Allgemeinen wird dies verwendet, um nur bestimmte Details zu einem einzelnen Port zu rendern, wenn mehrere View Ports gleichzeitig im Raum sichtbar sind. Siehe das Beispiel <span class="notranslate">code</span> unten.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">view_current;</p>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span> (view port index from 0 to 7)</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">if view_current == 0<br />
    {<br />
        var xx = camera_get_view_x(view_camera[0]);<br />
        var yy = camera_get_view_y(view_camera[0]);<br />
        draw_text(xx + 32, yy + 32, &quot;Player 1&quot;);<br />
    }<br />
    else<br />
    {<br />
        var xx = camera_get_view_x(view_camera[1]);<br />
        var yy = camera_get_view_y(view_camera[1]);<br />
        draw_text(xx + 32, yy + 32, &quot;Player 2&quot;);<br />
    }</p>
  <p>Die obige <span class="notranslate">code</span> prüft, welche Ansicht gerade gezeichnet wird und zeichnet dann je nach Rückgabewert einen anderen Text für jede Ansicht.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Cameras_And_View_Ports.htm">Kameras und View Ports</a></div>
        <div style="float:right">Nächste: <a href="view_enabled.htm"><span class="notranslate">view_enabled</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
view_current
-->
  <!-- TAGS
view_current
-->
</body>
</html>