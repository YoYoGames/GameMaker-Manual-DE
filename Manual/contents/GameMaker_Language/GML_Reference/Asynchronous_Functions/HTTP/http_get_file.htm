<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_get_file</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for http_get_file" />
  <meta name="rh-index-keywords" content="http_get_file" />
  <meta name="search-keywords" content="http_get_file" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>http_get_file</h1>
  <p>Mit dieser Funktion können Sie sich mit der angegebenen URL verbinden, um Informationen in Form einer Datei abzurufen. Da es sich um eine asynchrone Funktion handelt, blockiert <span data-keyref="GameMaker Name">GameMaker</span> nicht, während er auf eine Antwort wartet, sondern läuft weiter, bis er eine Callback-Information erhält. Diese Information wird in Form einer Zeichenkette vorliegen und ein <b>Async-Ereignis</b> in jeder Instanz auslösen, die ein solches in ihren Objekteigenschaften definiert hat.</p>
  <p class="note"><b><span class="note">HINWEIS</span> </b>Bitte beachten Sie, dass aufgrund des XSS-Schutzes in Browsern Anfragen an und Versuche zum Laden von Ressourcen aus anderen Domänen blockiert werden und möglicherweise leere Ergebnisse liefern. Weitere Einzelheiten finden Sie im Abschnitt über <a href="HTTP.htm">domänenübergreifende Probleme</a>.</p>
  <p>Dieses Ereignis erzeugt einen &quot;Rückruf&quot;, der von allen <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">HTTP-Ereignissen</a> aufgegriffen wird. <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><span class="inline">DS Map</span></a> (besser bekannt als &quot;Wörterbuch&quot;), das ausschließlich für dieses Ereignis gilt und in der speziellen Variable <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a>. Diese DS-Map enthält je nach den zurückgegebenen Daten unterschiedliche Werte, d.h. das Ereignis wird bei jedem empfangenen Datenpaket mehrfach ausgelöst, so dass Sie z.B. einen Fortschrittsbalken anzeigen können. Die allgemeine Struktur der DS-Map sieht wie folgt aus:</p>
  <ul class="colour">
    <li><b>id: </b>Die ID, die vom Befehl zurückgegeben wurde. Wenn Sie eine Reihe von <span class="inline">http_</span> Anfragen absetzen, müssen Sie wissen, auf welche Sie eine Antwort erhalten, und daher würden Sie diesen Wert zum Vergleich mit dem Wert verwenden, den Sie beim Senden der Anfrage gespeichert haben, um die richtige Anfrage zu finden.</li>
    <li><b>Status: </b>Gibt einen Wert kleiner als 0 für einen Fehler, 0 für vollständig und 1 für den Empfang von Paketen zurück (siehe unten für weitere Einzelheiten).</li>
    <li><b>Ergebnis: </b>Die empfangenen Daten (nur String).</li>
    <li><b>url: </b>Die vollständige URL, die Sie angefordert haben.</li>
    <li><b>http_status: </b>Der rohe http-Status <span class="notranslate">code</span> (falls verfügbar). Dies gibt den Standard-Webstatus <span class="notranslate">code</span> für die meisten Browser zurück, z.B.: 304 für &quot;Not Modified&quot; oder 204 für &quot;No Content&quot;, usw...</li>
  </ul>
  <p>Wenn mehrere Pakete an das Spiel zurückgesendet werden, gibt der &quot;Status&quot;-Schlüssel des Rückrufs 1 zurück. In diesem Fall hat die DS-Map die folgenden zusätzlichen Schlüssel:</p>
  <ul class="colour">
    <li><b>&quot;contentLength&quot;: </b>Dies ist die Größe der Datei, die Sie laut Web <span class="notranslate">server</span> erwarten sollten (kann -1 sein, wenn <span class="notranslate">server</span> diese Daten nicht zurückgibt).</li>
    <li><b>&quot;sizeDownloaded&quot;: </b>Die Größe der Daten, die bereits heruntergeladen wurden.</li>
  </ul>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">http_get_file(url, local_target);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">url</span></td>
        <td><span data-keyref="Type_String">Zeichenfolge</span></td>
        <td><span class="notranslate">The web address of the server that you wish to get file from</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">local_target</span></td>
        <td><span data-keyref="Type_String">Zeichenfolge</span></td>
        <td><span class="notranslate">The local storage path to save the file to</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>Erweitertes Beispiel:</h4>
  <p>Die Funktion <span class="inline">http_get_file()</span> kann von jedem Ereignis aus aufgerufen werden, und da sie asynchron ist, kann der Rückruf fast sofort erfolgen oder mehrere Sekunden dauern. Der Aufruf der Funktion ist einfach und würde etwa so aussehen:</p>
  <p class="code">file = http_get_file(&quot;http://www.macsweeneygames.com/downloads/upgrade.zip&quot;, &quot;\Downloads\Upgrade.zip&quot;);</p>
  <p>Die obige <span class="notranslate">code</span> fordert eine Datei von der angegebenen URL an und legt fest, dass sie in den lokalen Speicherbereich heruntergeladen wird (wie in den HTML5-Spieloptionen angegeben), und zwar in ein Verzeichnis &quot;Downloads&quot; mit dem angegebenen Dateinamen (dieser muss nicht mit dem Namen der Quelldatei übereinstimmen, sollte aber die gleiche Dateierweiterung verwenden). Der Index der Karte <span class="inline">async_load</span> wird in der Variablen &quot;file&quot; gespeichert, so dass Sie im Asynchronous Event nach dem richtigen Callback suchen können, und wenn das Speicherverzeichnis nicht existiert, wird es erstellt. Das ausgelöste asynchrone Ereignis wäre das <b>HTTP-Sub-Ereignis</b>, und in diesem Ereignis würden Sie etwas wie das Folgende haben:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == file<br />
    {<br />
        var status = ds_map_find_value(async_load, &quot;status&quot;);<br />
        if status == 0<br />
        {<br />
            var path = ds_map_find_value(async_load, &quot;result&quot;);<br />
            var files = zip_unzip(path, &quot;/NewContent/&quot;);<br />
            if files &gt; 0<br />
            {<br />
                global.ExtraContent = true;<br />
            }<br />
        }<br />
    }</p>
  <p>Die obige <span class="notranslate">code</span> überprüft zunächst die &quot;id&quot; der erstellten ds_map und dann den Status des Callbacks. Wenn der Wert gleich 0 ist (was einen Erfolg signalisiert), wird das Ergebnis des Callbacks zusammen mit der <a href="../../File_Handling/Encoding_And_Hashing/zip_unzip.htm"><span class="inline">zip_unzip()</span></a> Funktion verwendet, um die heruntergeladene Datei in das angegebene Verzeichnis zu entpacken. Wenn das Entpacken erfolgreich war, wird eine globale Variable auf true gesetzt.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="HTTP.htm">HTTP</a></div>
        <div style="float:right">Nächste: <a href="http_post_string.htm"><span class="notranslate">http_post_string</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
http_get_file
-->
  <!-- TAGS
http_get_file
-->
</body>
</html>