<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>get_string_async</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for get_string_async" />
  <meta name="rh-index-keywords" content="get_string_async" />
  <meta name="search-keywords" content="get_string_async" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>get_string_async</h1>
  <p>Diese Funktion öffnet ein Fenster und zeigt eine Nachricht sowie ein Feld an, in das der Benutzer eine Zeichenfolge eingeben kann (die zu Beginn die mitgelieferte Standardzeichenfolge enthält). Da es sich um eine asynchrone Funktion handelt, blockiert <span data-keyref="GameMaker Name">der GameMaker</span> das Gerät, auf dem sie ausgeführt wird, <i>nicht</i>, während er auf eine Antwort wartet, sondern lässt die Ereignisse wie gewohnt weiterlaufen. Sobald der Benutzer seine Zeichenfolge eingegeben und die Schaltfläche &quot;Okay&quot; gedrückt hat, wird ein <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Dialog.htm">asynchrones Dialog-Ereignis </a>ausgelöst, das <i>nur</i> für die Dauer dieses Ereignisses eine DS-Map in der Variablen <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>.</p>
  <p>Diese Map enthält die drei Schlüssel &quot;<strong>id</strong>&quot;, &quot;<strong>status</strong>&quot; und &quot;<strong>result</strong>&quot;. &quot;id&quot; ist der Wert, der beim Aufruf der Funktion zurückgegeben wurde, &quot;status&quot; ist entweder <span class="inline">true</span>, wenn die Schaltfläche &quot;Okay&quot; gedrückt wurde, oder <span class="inline">false</span>, wenn die Nachricht abgebrochen wurde (falls zutreffend, da nicht alle Ziele auf <span class="notranslate">platforms</span> den Abbruch der Nachricht erlauben). Schließlich gibt &quot;result&quot; die vom Benutzer eingegebene Zeichenfolge zurück (oder eine leere Zeichenfolge &quot;&quot;, wenn keine eingegeben wurde).</p>
  <p class="note"><strong><em><span class="note">HINWEIS</span></em></strong><em> Diese Funktion ist <span data-keyref="Dialog for debug only"> <strong>nur</strong> zum <strong>Debuggen und Testen</strong></span>gedacht <span data-keyref="Dialog for debug only">und sollte nicht in veröffentlichten Spielen verwendet werden. Zu diesem Zweck sollten Sie eine benutzerdefinierte Benutzeroberfläche erstellen, um Eingaben von Spielern zu erhalten, so dass Sie die vollständige Kontrolle darüber haben, wie die Dialoge aussehen und sich verhalten.</span></em></p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">get_string_async</span>(string, default);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">string</span></td>
        <td><span data-keyref="Type_String">Zeichenfolge</span></td>
        <td><span class="notranslate">The message to show in the dialog.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">default</span></td>
        <td><span data-keyref="Type_String">Zeichenfolge</span></td>
        <td><span class="notranslate">The default string.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>Erweitertes Beispiel:</h4>
  <p> </p>
  <p>Das <b>linke Mausklick-Ereignis</b> (zum Beispiel) des Objekts, das die Nachricht anzeigt, würde den folgenden Code enthalten:</p>
  <p class="code">msg = get_string_async(&quot;What&#39;s your name?&quot;,&quot;Anon&quot;);</p>
  <p>In diesem Beispiel wird eine Meldung angezeigt, die den Benutzer auffordert, eine Zeichenfolge einzugeben und auf &quot;Okay&quot; zu drücken. Die Funktions-ID wird in der Variablen &quot;msg&quot; gespeichert und im asynchronen Ereignis &quot;Dialoge&quot; wie unten gezeigt verwendet:</p>
  <p class="code">var i_d = ds_map_find_value(async_load, &quot;id&quot;);<br />
    if (i_d == msg)<br />
    {<br />
        if (ds_map_find_value(async_load, &quot;status&quot;))<br />
        {<br />
            if (ds_map_find_value(async_load, &quot;result&quot;) != &quot;&quot;)<br />
            {<br />
                global.Name = ds_map_find_value(async_load, &quot;result&quot;);<br />
            }<br />
        }<br />
    }</p>
  <p>Die obige <span class="notranslate">code</span> überprüft den &quot;id&quot;-Schlüssel der zurückgegebenen <span class="inline">DS Map</span> mit dem in der Variablen &quot;msg&quot; gespeicherten Wert. Wenn sie gleich sind, wird geprüft, ob &quot;Okay&quot; gedrückt wurde (und nicht das Fenster geschlossen/abgebrochen wurde), und wenn <span class="inline">true</span> zurückgegeben wird, wird das &quot;Ergebnis&quot; eines Strings geprüft, um sicherzustellen, dass keine leeren Strings zurückgegeben wurden, bevor eine globale Variable gesetzt wird.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Dialog.htm">Dialog</a></div>
        <div style="float:right">Nächste: <a href="get_integer_async.htm"><span class="notranslate">get_integer_async</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
get_string_async
-->
  <!-- TAGS
get_string_async
-->
</body>
</html>