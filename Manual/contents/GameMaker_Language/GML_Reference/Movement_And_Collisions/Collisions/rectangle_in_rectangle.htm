<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Rechteck_im_Rechteck</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that gives an overview of the funtion rectangle_in_rectangle" />
  <meta name="rh-index-keywords" content="rectangle_in_rectangle" />
  <meta name="search-keywords" content="rectangle_in_rectangle" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Rechteck_im_Rechteck</h1>
  <p>Diese Funktion prüft zwei von Ihnen definierte rechteckige Bereiche, um festzustellen, ob das Quellrechteck entweder nicht kollidiert, vollständig innerhalb der Grenzen des Zielrechtecks liegt oder ob sie sich einfach nur berühren. Wenn sie sich nicht berühren, gibt die Funktion den Wert 0 zurück, wenn das Quellrechteck vollständig innerhalb des Zielrechtecks liegt, gibt sie den Wert 1 zurück, und wenn sie sich lediglich überlappen, gibt sie den Wert 2 zurück. Das folgende Bild veranschaulicht dies:</p>
  <p><img alt="Rectangle rectangle collision example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/rectangle_in_rectangle.png" /></p>
  <h4>Syntax:</h4>
  <p class="code">rectangle_in_rectangle(sx1, sy1, sx2, sy2, dx1, dy1, dx2, dy2);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Typ</th>
        <th>Beschreibung</th>
     </tr>
      <tr>
        <td><span class="notranslate">sx1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the left side of the source rectangle.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">sy1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the top side of the source rectangle.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">sx2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the right side of the source rectangle.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">sy2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the bottom side of the source rectangle.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">dx1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the left side of the destination rectangle to check against.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">dy1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the top side of the destination rectangle to check against.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">dx2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the right side of the destination rectangle to check against.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">dy2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the bottom side of the destination rectangle to check against.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">switch(rectangle_in_rectangle(x - 50, y - 50, x + 50, y + 50, mouse_x - 50, mouse_y - 50, mouse_x + 50, mouse_y + 50))<br />
    {<br />
        case 0: image_blend = c_yellow; break;<br />
        case 1: image_blend = c_red; break;<br />
        case 2: image_blend = c_orange; break;<br />
    }</p>
  <p>Die obige <span class="notranslate">code</span> prüft zwei rechteckige Bereiche auf Kollisionen und setzt die Instanz <span class="inline">image_blend</span> auf der Grundlage des Rückgabewerts.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Collisions.htm">Kollisionen</a></div>
        <div style="float:right">Nächste: <a href="rectangle_in_triangle.htm"><span class="notranslate">rectangle_in_triangle</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
rectangle_in_rectangle
-->
  <!-- TAGS
rectangle_in_rectangle
-->
</body>
</html>