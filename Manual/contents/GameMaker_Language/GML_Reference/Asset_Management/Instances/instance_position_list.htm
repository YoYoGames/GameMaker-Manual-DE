<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instanz_position_liste</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function instance_position_list" />
  <meta name="rh-index-keywords" content="instance_position_list" />
  <meta name="search-keywords" content="instance_position_list" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>instanz_position_liste</h1>
  <p>Mit dieser Funktion können Sie eine Position auf eine Kollision mit allen Instanzen eines anderen Objekts prüfen. Wenn Sie diese Funktion verwenden, prüfen Sie einen einzelnen Punkt im Raum auf alle Instanzen eines Objekts, und die Prüfung erfolgt anhand des Begrenzungsrahmens der Instanzen oder anhand der Maske der Instanzen, wenn für dieses Objekt präzise Kollisionen geprüft wurden.</p>
  <p>Sie geben auch eine <a href="../../Data_Structures/DS_Lists/DS_Lists.htm">DS-Liste</a> an, so dass die <a href="Instance_Variables/id.htm"><span class="inline">id</span></a> Werte aller Instanzen, die mit der aufrufenden Instanz kollidieren, an das Ende der angegebenen Liste angehängt werden. Sie können die Liste vor dem Aufruf dieser Funktion <a href="../../Data_Structures/DS_Lists/ds_list_clear.htm">löschen</a>, so dass sie nur die Ergebnisse dieses Funktionsaufrufs enthält. Du hast auch die Möglichkeit, die Liste nach dem Abstand zwischen der zu prüfenden Position und dem Ursprung der Instanzen zu ordnen, bei denen eine Kollision festgestellt wurde.</p>
  <p>Beachten Sie, dass die Funktion auch das spezielle Schlüsselwort <a href="../../../GML_Overview/Instance_Keywords.htm"><b><span class="inline">all</span></b></a>akzeptiert. In diesem Fall werden alle Instanzen aufgelistet, die in Kollision gefunden wurden. Die Funktion gibt die Anzahl der gefundenen Instanzen zurück, oder 0, wenn keine gefunden wurden.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">instance_position_list(x, y, obj, list, ordered);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x position to check for instances.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y position to check for instances.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">obj</span></td>
        <td><span data-keyref="Type_Asset_Object">Objekt Asset-</span> oder <span data-keyref="Type_ID_Instance">Instanz-ID</span></td>
        <td><span class="notranslate">The object to check for instances of.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">list</span></td>
        <td><span data-keyref="Type_ID_DS_List">DS-Liste ID</span></td>
        <td><span class="notranslate">The DS list to use to store the IDs of colliding instances.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ordered</span></td>
        <td><span data-keyref="Type_Bool">Boolesche</span></td>
        <td><span class="notranslate">Whether the list should be ordered by distance (<span class="inline">true</span>) oder nicht (<span class="inline">false</span>).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span> (The number of instances found to be in collision)</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var _list = ds_list_create();<br />
    var _num = instance_position_list(mouse_x, mouse_y, all, _list, false);<br />
    if (_num &gt; 0) <br />
    {<br />
        for (var i = 0; i &lt; _num; ++i;)<br />
        {<br />
            instance_destroy(_list[| i]);<br />
        }<br />
    }<br />
    ds_list_destroy(_list);</p>
  <p>Die obige <span class="notranslate">code</span> prüft auf eine Kollision mit allen Instanzen, die an der Mausposition gefunden werden. Diese werden zu einer DS-Liste hinzugefügt, die dann in einer Schleife durchlaufen wird, um jede der kollidierten Instanzen zu zerstören.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Instances.htm">Instanzen</a></div>
        <div style="float:right">Nächste: <a href="instance_id_get.htm"><span class="notranslate">instance_id_get</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
instance_position_list
-->
  <!-- TAGS
instance_position_list
-->
</body>
</html>