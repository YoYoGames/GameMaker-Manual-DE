<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>skript_ausfuehren</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function script_execute" />
  <meta name="rh-index-keywords" content="script_execute" />
  <meta name="search-keywords" content="script_execute" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>skript_ausfuehren</h1>
  <p>Diese Funktion wurde ursprünglich für den dynamischen Aufruf von <span class="notranslate">script</span> <i>Assets</i> entwickelt, aber mit der Einführung von benutzerdefinierten Funktionen kann sie nun auf zwei Arten verwendet werden:</p>
  <ul class="colour">
    <li>Die erste Möglichkeit ist die Unterstützung der <b>alten</b> <span class="notranslate">scripts</span>, bei der jede <span class="notranslate">script</span> eine einzelne Funktion war und der Titel der <span class="notranslate">script</span> auch der Name der Funktion war. Auf diese Weise verwendet, funktioniert es wie bisher und führt ein vom Benutzer erstelltes <span class="notranslate">script</span> Asset aus und übergibt das angegebene <span class="notranslate">arguments</span> an dieses. Beachten Sie, dass in diesem Fall nicht das <i>Skript</i> aufgerufen wird, sondern die gleichnamige <i>Skriptfunktion</i> innerhalb von <span class="notranslate">script</span>. <span style="text-align: justify;"></span></li>
    <li><span style="text-align: justify;">Die zweite Möglichkeit ist der Aufruf einer Funktion aus einem <span class="notranslate">script</span> Asset, das mehrere Funktionen enthält. In diesem Fall geben Sie den Namen der Funktion und die <span class="notranslate">arguments</span> an, die sie benötigt, und nicht den Namen des <span class="notranslate">script</span> Assets. Beachten Sie, dass dies nur für <a href="../../../GML_Overview/Script_Functions.htm">Skriptfunktionen</a> und nicht für <a href="../../../GML_Overview/Method_Variables.htm">Methoden</a> funktioniert, da nur <span class="notranslate">script</span> Funktionen eine <span class="notranslate">script</span> ID zugewiesen ist.</span></li>
  </ul>
  <p><span style="text-align: justify;"></span>Obwohl diese Funktion in erster Linie für die Unterstützung von Legacy-Programmen gedacht ist, ist sie nicht veraltet, da sie in Netzwerken und bei Remote-Prozeduraufrufen immer noch ihre Berechtigung hat. Es ist auch erwähnenswert, dass diese Funktion langsam ist und ihre häufige Verwendung die Leistung beeinträchtigen kann.</p>
  <p class="note"><span class="note">HINWEIS</span> Diese Funktion kann nicht mit integrierten Funktionen verwendet werden.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">script_execute(scr, arg0, arg1, arg2..., etc...);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">scr</span></td>
        <td><span data-keyref="Type_Asset_Script"><a href="../../../../../The_Asset_Editors/Scripts.htm" target="_blank">Skript-Anlage</a></span> oder <span data-keyref="Type_Function_Script"><a href="../../../../../GameMaker_Language/GML_Overview/Script_Functions.htm" target="_blank">Skript-Funktion</a></span></td>
        <td><span class="notranslate">The function/script that you want to call</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">arg0, arg1, arg2..., etc...</span></td>
        <td><span data-keyref="Type_Any"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm#variable" target="_blank">Variabel</a></span></td>
        <td><span class="notranslate">The different arguments that you want to pass through to the function/script</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Any"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm#variable" target="_blank">Variable</a></span> (Will depend on the return value from the script/function being called)</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">script_execute(choose(move_up, move_down, move_left, move_right), irandom(5));</p>
  <p>Das obige Beispiel <span class="notranslate">code</span> verwendet <span class="inline">script_execute</span>, um eine von vier benutzerdefinierten Funktionen (in diesem Fall im Zusammenhang mit Bewegung) auszuwählen und ihr eine zufällige Ganzzahl als erste <span class="notranslate">argument</span> zu übergeben.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Scripts.htm">Skripte</a></div>
        <div style="float:right">Nächste: <a href="script_execute_ext.htm"><span class="notranslate">script_execute_ext</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
script_execute
-->
  <!-- TAGS
script_execute
-->
</body>
</html>