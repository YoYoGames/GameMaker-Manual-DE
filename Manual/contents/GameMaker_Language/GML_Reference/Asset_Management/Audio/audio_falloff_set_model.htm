<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_falloff_set_model</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_falloff_set_model" />
  <meta name="rh-index-keywords" content="audio_falloff_set_model,audio_falloff_exponent_distance,audio_falloff_exponent_distance_clamped,audio_falloff_inverse_distance,audio_falloff_inverse_distance_clamped,audio_falloff_linear_distance,audio_falloff_linear_distance_clamped,audio_falloff_none" />
  <meta name="search-keywords" content="audio_falloff_set_model,audio_falloff_exponent_distance,audio_falloff_exponent_distance_clamped,audio_falloff_inverse_distance,audio_falloff_inverse_distance_clamped,audio_falloff_linear_distance,audio_falloff_linear_distance_clamped,audio_falloff_none" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">audio_falloff_set_model</span></h1>
  <p>Um die Vielseitigkeit der Audio-Engine zu erhöhen, können Sie in <span data-keyref="GameMaker Name">GameMaker</span> das für Ihr Spiel passende Falloff-Modell auswählen. Dieses Modell wird für <b>alle</b> Audiofunktionen im Spiel oder in der App verwendet. Daher sollten Sie sicherstellen, dass das von Ihnen gewählte Modell das richtige ist, da jedes Modell die Art und Weise beeinflusst, wie der Zuhörer die Klänge wahrnimmt, die Sie über Emitter oder mit der Funktion <span class="inline"><a href="audio_play_sound_at.htm">audio_play_sound_at()</a></span> abspielen.</p>
  <p>Das Standard-Falloff-Modell ist <span class="inline">audio_falloff_none</span>, d.h. es gibt keinen Falloff bei der Verwendung von Emittern oder positioniertem Audio, es sei denn, Sie ändern das Falloff-Modell.</p>
  <h2>Falloff-Modelle</h2>
  <p>Bei der Wiedergabe von Audiodaten über <span class="inline"><a href="audio_play_sound_at.htm">audio_play_sound_at()</a></span> oder bei der Einstellung des <a href="Audio_Emitters/audio_emitter_falloff.htm">Falloffs für einen Emitter</a> müssen Sie drei Einstellungen vornehmen: <span class="notranslate">arguments</span>. Jede dieser Einstellungen ist für ein bestimmtes Modell geeignet und wirkt sich auf die Art und Weise aus, wie der endgültige Klang vom Spieler gehört wird, je nachdem, wie weit der Zuhörer von der Quelle entfernt ist. Die drei <span class="notranslate">arguments</span> sind:</p>
  <ul class="colour">
    <li><b>Bezugsabstand</b>: Dies ist der Abstand zum Hörer, bei dem die Lautstärke des wiedergegebenen Tons normalerweise um die Hälfte abnimmt, bevor sie durch den Roll-off-Faktor oder den angegebenen maximalen Abstand beeinflusst wird.<b></b></li>
    <li><b>Maximaler Abstand</b>: Hier wird die Entfernung festgelegt, in der keine Dämpfung der Schallquelle mehr stattfindet. Dies kann der Punkt sein, an dem der Schall nicht mehr zu hören ist <i>, oder</i> der Punkt, an dem die Lautstärke nicht mehr unter den durch das gewählte Modell definierten Mindestwert sinkt.<b></b></li>
    <li><b>Abklingfaktor</b>: Der Falloff-Faktor wird bei der Entfernungsdämpfung auf der Grundlage des inversen Entfernungsmodells verwendet und legt die endgültige Mindestschwelle für einen Schall mit Falloff fest.</li>
  </ul>
  <p>Die Falloff-Modelle, die von diesen <span class="notranslate">arguments</span> betroffen sind, werden im <span data-keyref="GameMaker Name">GameMaker</span> durch die folgenden Konstanten dargestellt (die Tabelle zeigt auch die genauen Berechnungen):</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Audio_Falloff_Type"><a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/audio_falloff_set_model.htm" target="_blank">Audio-Falloff-Konstante</a></span></th>
      </tr>
      <tr>
        <th>Konstante</th>
        <th>Berechnung der Verstärkung</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_exponent_distance</span></td>
        <td><span class="inline"><br />
            gain = (listener_distance / reference_distance) ^ (-falloff_factor)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_exponent_distance_clamped</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            gain = (distance / reference_distance) ^ (-falloff_factor)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_exponent_distance_scaled</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            <br />
            gain = ((distance / reference_distance) ^ (-falloff_factor)) * (((maximum_distance - distance) / (maximum_distance - reference_distance)) ^ (distance / maximum_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_inverse_distance</span></td>
        <td><span class="inline"><br />
            gain = reference_distance / (reference_distance + falloff_factor * (listener_distance - reference_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_inverse_distance_clamped</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            gain = reference_distance / (reference_distance + falloff_factor * (distance - reference_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_inverse_distance_scaled</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            <br />
            gain = (reference_distance / (reference_distance + falloff_factor * (distance - reference_distance))) * (((maximum_distance - distance) / (maximum_distance - reference_distance)) ^ (distance / maximum_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_linear_distance</span></td>
        <td><span class="inline"><br />
            distance = min(distance, maximum_distance)<br />
            gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_linear_distance_clamped</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_none</span></td>
        <td><span class="inline"><br />
            gain = 1</span></td>
      </tr>
    </tbody>
  </table>
  <p>Die Modelle &quot;<span class="inline">_scaled</span>&quot; sind so skaliert, dass die Geräusche bei der maximalen Entfernung garantiert vollständig abfallen.</p>
  <p>Die folgenden Diagramme veranschaulichen, wie einige der oben genannten Konstanten funktionieren und den gespielten Ton beeinflussen:</p>
  <p><img alt="Distance Model Examples" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Distance_Models.png" /></p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">audio_falloff_set_model</span>(model);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">model</span></td>
        <td><span data-keyref="Type_Constant_Audio_Falloff_Type"><a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/audio_falloff_set_model.htm" target="_blank">Audio-Falloff-Konstante</a></span></td>
        <td><span class="notranslate">The <b>constant</b> used to set the falloff model.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code"><span data-field="title" data-format="default">audio_falloff_set_model</span>(audio_falloff_exponent_distance_clamped);<br />
    audio_play_sound_at(snd_Waterfall, x, y, 0, 100, 300, 1, true, 1);</p>
  <p>Die obige <span class="notranslate">code</span> stellt das Falloff-Modell ein und spielt dann den in der Variablen &quot;snd_Waterfall&quot; indizierten Sound, der an seiner Raumposition geloopt wird, mit einer Falloff-Referenz von 100, einem Falloff-Abstand von 300, einem Falloff-Faktor von 1 und einer niedrigen Priorität.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Audio.htm">Audio</a></div>
        <div style="float:right">Nächste: <a href="audio_sound_gain.htm"><span class="notranslate">audio_sound_gain</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
audio_falloff_set_model
audio_falloff_exponent_distance
audio_falloff_exponent_distance_clamped
audio_falloff_inverse_distance
audio_falloff_inverse_distance_clamped
audio_falloff_linear_distance
audio_falloff_linear_distance_clamped
audio_falloff_none
-->
  <!-- TAGS
audio_falloff_set_model
-->
</body>
</html>