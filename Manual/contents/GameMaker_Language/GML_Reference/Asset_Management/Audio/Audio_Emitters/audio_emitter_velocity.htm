<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_emitter_velocity</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_emitter_velocity" />
  <meta name="rh-index-keywords" content="audio_emitter_velocity" />
  <meta name="search-keywords" content="audio_emitter_velocity" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>audio_emitter_velocity</h1>
  <p>Diese Funktion kann verwendet werden, um einem Emitter <em>Doppler-Effekte </em>zu verleihen und eine Audio-Bewegung zu simulieren, die auf der <span class="notranslate">vector</span> basiert, die von den angegebenen relativen x-, y- und z-Positionen aufgelöst wird. Wenn sich der Emitter selbst nicht bewegt, brauchst du diese Werte normalerweise nicht zu setzen, aber wenn du zum Beispiel ein scrollendes Shooter-Spiel machst, bei dem die Feinde von rechts kommen und nach links scrollen, würdest du eine Geschwindigkeit von (hspeed, 0, 0) im create event der Feinde setzen (und den Emitter jeder Instanz im step event mit <a href="audio_emitter_position.htm"><span class="inline">audio_emitter_position()</span></a>), um allen Geräuschen, die von den feindlichen Instanzen ausgesendet werden, den richtigen Doppler zu geben, wenn sie die Spielerinstanz passieren (die wiederum die Funktion <a href="../Audio_Listeners/audio_listener_position.htm"><span class="inline">audio_listener_position()</span></a> verwenden würde, um den <i>Hörer</i> auf die richtige Position zu setzen).</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">audio_emitter_velocity(emitter, vx, vy, vz);</p>
  <table>
    <tbody>
      <tr class="rh-cursor-column">
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">emitter</span></td>
        <td><span data-keyref="Type_ID_Audio_Emitter">Audio-Sender-ID</span></td>
        <td><span class="notranslate">The index of the emitter to change.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">vx</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x vector value (default 0).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">vy</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y vector value (default 0).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">vz</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The z vector value (default 0).</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">s_emit = audio_emitter_create();<br />
    audio_emitter_position(s_emit, room_width, 0, 0);<br />
    audio_emitter_velocity(s_emit, -5, 0, 0);</p>
  <p>Die obige <span class="notranslate">code</span> erstellt einen Audioemitter und weist seinen Index der Variablen &quot;s_emit&quot; zu. Dieser Emitter wird dann an einer Position im Raum platziert und erhält eine Geschwindigkeit von 5 Pixeln pro Schritt entlang der x-Achse (er wird in Bezug auf den Zuhörer korrekt doppeln, als hätte er eine horizontale Geschwindigkeit von 5 Pixeln pro Schritt).</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Audio_Emitters.htm">Audio-Emitter</a></div>
        <div style="float:right">Nächste: <a href="audio_emitter_falloff.htm"><span class="notranslate">audio_emitter_falloff</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
audio_emitter_velocity
-->
  <!-- TAGS
audio_emitter_velocity
-->
</body>
</html>