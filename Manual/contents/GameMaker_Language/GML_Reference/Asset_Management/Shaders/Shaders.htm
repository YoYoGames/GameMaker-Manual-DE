<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Shader</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Shaders" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Shaders,_YY_GLSLES_,_YY_GLSL_,_YY_HLSL11_,_YY_PSSL_" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Shader</h1>
  <p>Shader sind ein unglaublich leistungsfähiges Werkzeug, um zu beeinflussen, was und wie Dinge von der Grafikkarte auf dem Bildschirm <a class="glossterm" data-glossterm="gerendert" href="#">dargestellt</a> werden. Da diese winzigen Programme auf der Grafikkarte selbst ausgeführt werden, bedeutet dies, dass sie extrem schnell zu verarbeiten sind und wertvolle CPU-Zyklen für weitere Spiellogik freigeben.</p>
  <p>Um einen Shader zu erstellen, müssen Sie sowohl einen <b>Vertex-Shader</b> als auch einen <b>Fragment-Shader</b> (auch <b>Pixel-Shader</b> genannt) mit dem <a href="../../../../The_Asset_Editors/Shaders.htm">Shader-Editor</a> geschrieben haben, und selbst wenn Sie (zum Beispiel) nur die Vertex-Positionen für eine gezeichnete Instanz oder nur die Farbwerte für die Pixel ändern möchten, benötigen Sie <b>beide</b> Programme, damit ein vollständiger Shader funktioniert.</p>
  <p class="note"><span class="note">HINWEIS</span> Shader erlauben es Ihnen <b>nicht</b>, den Wert von Variablen zu ändern, die Sie ihnen übergeben. Daher werden diese in der gesamten Dokumentation, die sich auf sie bezieht, als <b>Shader-Konstanten</b> bezeichnet.</p>
  <p>Einen vollständigen Überblick über die verfügbaren GLSL ES-Funktionen und -Variablen, mit denen Sie die Shader selbst programmieren können, finden Sie auf den <a href="https://www.khronos.org/registry/OpenGL/specs/es/2.0/es_cm_spec_2.0.pdf" target="_blank">OpenGL ES Shading Language (GLSL ES) Reference Pages</a>. Der folgende Link ist ebenfalls nützlich, da er einige Schnellreferenzkarten für die OpenGL ES API enthält (beachten Sie, dass nur die letzten beiden Karten für <span data-keyref="GameMaker Name">GameMaker</span> gelten): <a href="https://www.khronos.org/opengles/sdk/docs/reference_cards/OpenGL-ES-2_0-Reference-card.pdf">OpenGL ES Referenzkarten</a>.</p>
  <p>Die Verwendung eines Shaders in Ihren Projekten ist sehr einfach und erfordert nur ein paar Zeilen <span class="notranslate">code</span>, um die grundlegendsten Funktionen nutzen zu können:</p>
  <p class="code">shader_set(myShader);<br />
    draw_self();<br />
    shader_reset();</p>
  <p>Wie Sie sehen können, werden sie ähnlich wie Mischmodi und Oberflächen verwendet, wobei Sie zunächst den Shader auswählen (einstellen), das Gewünschte damit zeichnen und anschließend das Zeichenziel wieder zurücksetzen. Wenn Sie den gesamten Bildschirm durch einen Shader rendern möchten und nicht nur einen einzelnen <span class="notranslate">sprite</span> oder Hintergrund, müssen Sie eine Oberfläche einrichten, um die aktuelle Ansicht zu erfassen, und diese dann an den Shader weitergeben (siehe <a href="../../Drawing/Surfaces/Surfaces.htm">Oberflächen</a> für weitere Informationen).</p>
  <p class="note"><b>HINWEIS</b>: Shader können, wie alles, was mit Zeichnen zu tun hat, <b>nur im Draw-Ereignis verwendet werden</b>. Wenn Sie versuchen, einen Farbwert in einem Shader zu verwenden und das Objekt keine Textur hat, werden die Ergebnisse schwarz sein.</p>
  <p>Wenn der von Ihnen verwendete Shader Eingabewerte hat, werden diese mit den <i>Uniform-Funktionen</i> gesetzt. Sie würden zuerst das <i>Uniform-Handle</i> (das im Wesentlichen ein ID-Wert für die zu setzende Uniform ist) mit Hilfe der Funktion <a href="shader_get_uniform.htm"><span class="inline">shader_get_uniform()</span></a> im <b>Ereignis "Create"</b> der Instanz, die den Shader verwendet, und speichern dann diese Handles in Variablen, etwa so:</p>
  <p class="code">colour_to_find = shader_get_uniform(sShaderDemo5, &quot;f_Colour1&quot;);<br />
    colour_to_set = shader_get_uniform(sShaderDemo5, &quot;f_Colour2&quot;);</p>
  <p>Sobald Sie die einheitlichen Handles haben, können Sie sie im Shader <span class="notranslate">code</span> für das <b>Draw Event</b> wie folgt einstellen:</p>
  <p class="code">shader_set(sShaderDemo5);<br />
    shader_set_uniform_f(colour_to_find, 1, 1, 1);<br />
    shader_set_uniform_f(colour_to_set, 1, 0, 0);<br />
    draw_sprite(sprite_index, image_index, x + 24, y);<br />
    shader_reset();</p>
  <p>Abschließend ist zu beachten, dass Shader zwar von allen <span class="notranslate">platforms</span> akzeptiert werden, aber dennoch gerätespezifisch sind, und wenn die Hardware oder Software des Geräts Shader nicht verwenden kann, erhalten Sie einen Fehler. Daher sollten Sie überprüfen, ob der Shader kompiliert wurde, bevor Sie Uniformen festlegen oder den Shader selbst verwenden, etwa so:</p>
  <p class="code">if (shader_is_compiled(myShader))<br />
    {<br />
        shader_set(myShader);<br />
        draw_self();<br />
        shader_reset();<br />
    }<br />
    else show_debug_message(&quot;Shader failed&quot;);</p>
  <p>Als zusätzliche Prüfung können Sie auch die Funktion <a href="shaders_are_supported.htm"><span class="inline">shaders_are_supported()</span></a> aufrufen, um festzustellen, ob die Hardware überhaupt Shader unterstützt. Im Allgemeinen führen Sie diese Prüfungen beim Spielstart durch und speichern die Ergebnisse als <a href="../../../GML_Overview/Variables/Global_Variables.htm">globale Variable</a>, um sie später zu überprüfen.</p>
  <p>Es ist wichtig zu beachten, dass <span data-keyref="GameMaker Name">GameMaker</span> auch einige bedingte <b>Kompilierungsmakros</b> unterstützt, die innerhalb von GLSL ES-Shadern verwendet werden können, so dass sie alternative <span class="notranslate">code</span> auf bestimmten unterstützten <span class="notranslate">platforms</span> ausführen können. Die Makros und die <span class="notranslate">platforms</span>, für die sie generiert werden, sind in der folgenden Tabelle aufgeführt:</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Shader-Makro</th>
        <th>Wert</th>
        <th>Ziel-Plattform</th>
      </tr>
      <tr>
        <td>{YY_GLSLES_}</td>
        <td>1</td>
        <td>Alle Zielplattformen</td>
      </tr>
      <tr>
        <td>{YY_GLSL_}</td>
        <td>2</td>
        <td>Mac und <span class="notranslate">Ubuntu</span> (<span class="notranslate">Linux</span>)</td>
      </tr>
      <tr>
        <td>{YY_HLSL11_}</td>
        <td>3</td>
        <td>Windows, UWP, XboxOne</td>
      </tr>
      <tr>
        <td>_YY_PSSL_</td>
        <td>4</td>
        <td>PS4</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>Wenn Sie Ihr <span data-keyref="GameMaker Name">GameMaker-Projekt</span> auf einem der aufgelisteten <span class="notranslate">platforms</span> mit einem Shader im GLSL ES-Format kompilieren, wird <i>eines</i> der oben genannten Makros erzeugt, das dann im Shader <span class="notranslate">code</span> wie folgt überprüft werden kann:</p>
  <p class="code">#ifdef _YY_HLSL11_<br />
    // HLSL shader code here<br />
    #else<br />
    // GLSL shader code here<br />
    #endif</p>
  <p>Wenn Sie neu im Umgang mit Shadern sind oder eine ausführlichere Anleitung zur Erstellung und Verwendung von Shadern mit <span data-keyref="GameMaker Name">GameMaker</span> wünschen, lesen Sie bitte die folgende Seite des Handbuchs:</p>
  <ul class="colour">
    <li><a href="../../../../Additional_Information/Guide_To_Using_Shaders.htm">Anleitung zur Verwendung von Shadern</a></li>
  </ul>
  <p> </p>
  <p>Die folgenden Funktionen stehen zum Zeichnen und Einstellen von Shadern zur Verfügung:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="shader_get_name.htm"><span class="notranslate">shader_get_name</span></a></li>
    <li><a href="shader_get_uniform.htm"><span class="notranslate">shader_get_uniform</span></a></li>
    <li><a href="shader_get_sampler_index.htm"><span class="notranslate">shader_get_sampler_index</span></a></li>
    <li><a href="shader_set.htm"><span class="notranslate">shader_set</span></a></li>
    <li><a href="shader_set_uniform_f.htm"><span class="notranslate">shader_set_uniform_f</span></a></li>
    <li><a href="shader_set_uniform_f_array.htm"><span class="notranslate">shader_set_uniform_f_array</span></a></li>
    <li><a href="shader_set_uniform_i.htm"><span class="notranslate">shader_set_uniform_i</span></a></li>
    <li><a href="shader_set_uniform_i_array.htm"><span class="notranslate">shader_set_uniform_i_array</span></a></li>
    <li><a href="shader_set_uniform_matrix.htm"><span class="notranslate">shader_set_uniform_matrix</span></a></li>
    <li><a href="shader_set_uniform_matrix_array.htm"><span class="notranslate">shader_set_uniform_matrix_array</span></a></li>
    <li><a href="shader_reset.htm"><span class="notranslate">shader_reset</span></a></li>
    <li><a href="shader_is_compiled.htm"><span class="notranslate">shader_is_compiled</span></a></li>
    <li><a href="shaders_are_supported.htm"><span class="notranslate">shaders_are_supported</span></a></li>
    <li><a href="shader_current.htm"><span class="notranslate">shader_current</span></a></li>
  </ul>
  <p> </p>
  <p>Wir haben auch eine spezielle Funktion, die einen globalen Zustand für alle Shader definiert:</p>
  <ul>
    <li><a href="shader_enable_corner_id.htm"><span class="notranslate">shader_enable_corner_id</span></a></li>
  </ul>
  <p> </p>
  <p>Wenn Sie mit Textur-Samplern in Shadern arbeiten, benötigen Sie Informationen über die verwendete Textur; in diesem Fall können Sie die folgenden Funktionen verwenden:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="../Sprites/Sprite_Information/sprite_get_texture.htm"><span class="notranslate">sprite_get_texture</span></a></li>
    <li><a href="../Sprites/Sprite_Information/sprite_get_uvs.htm"><span class="notranslate">sprite_get_uvs</span></a></li>
    <li><a href="../Fonts/font_get_texture.htm"><span class="notranslate">font_get_texture</span></a></li>
    <li><a href="../Fonts/font_get_uvs.htm"><span class="notranslate">font_get_uvs</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_width.htm"><span class="notranslate">texture_get_width</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_height.htm"><span class="notranslate">texture_get_height</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_texel_width.htm"><span class="notranslate">texture_get_texel_width</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_texel_height.htm"><span class="notranslate">texture_get_texel_height</span></a></li>
    <li><a href="../../Drawing/Textures/texture_set_stage.htm"><span class="notranslate">texture_set_stage</span></a></li>
    <li><a href="../../Drawing/GPU_Control/gpu_set_texfilter_ext.htm"><span class="notranslate">gpu_set_texfilter_ext</span></a></li>
    <li><a href="../../Drawing/GPU_Control/gpu_set_texrepeat.htm"><span class="notranslate">gpu_set_texrepeat</span></a></li>
  </ul>
  <p> </p>
  <p>Dieses Handbuch behandelt zwar <b>nicht</b> alle Open GL-Shader-Funktionen und -Variablen, aber es enthält eine Liste derjenigen, die nur in <span data-keyref="GameMaker Name">GameMaker</span> verwendet werden. Diese Konstanten sind nicht Teil der Open GL-Spezifikation für Shader und werden bereitgestellt, um die Integration von Shadern in Ihre Projekte zu vereinfachen.</p>
  <ul class="colour">
    <li><a href="Shader_Constants.htm">Shader-Konstanten</a></li>
  </ul>
  <p> </p>
  <p>Schließlich erlaubt es <span data-keyref="GameMaker Name">GameMaker</span>, eigene <b>Vertex-Formate</b> zu definieren, aus denen Sie Ihre eigenen Primitive erstellen können. Damit können Sie Shader-Operationen erheblich beschleunigen oder deren Möglichkeiten erweitern und überraschende Effekte erzeugen. Informationen dazu finden Sie in den folgenden Abschnitten:</p>
  <ul class="colour">
    <li><a href="../../Drawing/Primitives/Primitives_And_Vertex_Formats.htm">Primitive und Vertex-Formate</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Asset_Management.htm">Vermögensverwaltung</a></div>
        <div style="float:right">Nächste: <a href="../Sequences/Sequences.htm">Sequenzen</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Shaders
_YY_GLSLES_
_YY_GLSL_
_YY_HLSL11_
_YY_PSSL_
-->
  <!-- TAGS
shader_functions
-->
</body>
</html>