<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Sequenzen</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Sequences" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Sequences" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Sequenzen</h1>
  <p>Sequenzen werden in der Regel in <span class="notranslate">IDE</span> mit dem <a href="../../../../The_Asset_Editors/Sequences.htm">Sequenz-Editor</a> erstellt, sie können aber auch mit <span class="notranslate">code</span> erstellt und bearbeitet werden. Bevor Sie sich jedoch mit den verfügbaren Funktionen befassen, ist es wichtig zu verstehen, wie <span class="notranslate">sequences</span> in <span class="notranslate">GameMaker</span> definiert ist und welche Begriffe hier verwendet werden.</p>
  <p>Auf der obersten Ebene haben Sie zunächst ein <b>Sequenzelement</b>. Dieses platzieren Sie auf einer Ebene in einem Raum, entweder über den Raumeditor oder in <span class="notranslate">code</span> mit den entsprechenden <a href="../Rooms/Sequence_Layers/Sequence_Layers.htm">Ebenenfunktionen</a>. Das Ebenenelement hat außer einem Element-ID-Wert keine wirklichen Eigenschaften, aber diese ID wird benötigt, um die oben erwähnten Ebenenfunktionen zum Ändern der <span class="notranslate">sequence</span> -Wiedergabe oder zum Zugriff auf die <span class="notranslate">sequence</span> -Daten zu verwenden.</p>
  <p>Als Nächstes haben Sie <b>Sequenzobjekte</b> und <b>Sequenzinstanzen</b>, ähnlich wie Sie allgemeine Objekte und Instanzen haben. Ein <span class="notranslate">sequence</span> <i>Objekt</i> ist die Basisressource, wie Sie sie im <b>Asset-Browser</b> oder mit der Funktion <a href="sequence_create.htm"><span class="inline">sequence_create()</span></a>erstellt haben, und die <span class="notranslate">sequence</span> <i>Instanz</i> ist die &quot;Kopie&quot; dieses <span class="notranslate">sequence</span> Objekts, die in einem Raum als Element auf einer Ebene platziert wurde. Betrachte <span class="notranslate">sequence</span> Objekte als Blaupausen und <span class="notranslate">sequence</span> Instanzen als die Erstellung aus diesen Blaupausen. <span class="notranslate">Sequence</span> Objekte und Instanzen sind <a href="../../../GML_Overview/Structs.htm">Strukturen</a> und - im Gegensatz zu regulären Objekten - kann eine <span class="notranslate">sequence</span> Objektstruktur unter <span class="notranslate">runtime</span> bearbeitet werden, was sich auf alle weiteren Instanzen dieses <span class="notranslate">sequence</span> Objekts auswirkt, wenn du sie als Elemente erstellst (und jede Bearbeitung, die an einem <span class="notranslate">sequence</span> Objekt vorgenommen wird, wird <b>nicht</b> durch einen Neustart des Spiels oder des Raums mit den Funktionen <span class="inline">room_restart()</span> oder <span class="inline">game_restart()</span> zurückgesetzt). Die <span class="notranslate">sequence</span> Instanzstruktur enthält ein paar Parameter, um die Wiedergabe und andere Dinge zu steuern (dies wird weiter unten genauer erklärt), sowie die <b>Sequenzdatenstruktur</b>.</p>
  <p>Schließlich haben Sie, wie oben erwähnt, die <b>Sequenzdaten</b>, die eine weitere Struktur sind. Diese Struktur enthält <i>alle</i> Daten über die <span class="notranslate">sequence</span>. Die enthaltenen Spuren, die Eigenschaften dieser Spuren, die Abspielgeschwindigkeit und vieles mehr. Die genauen Details des Inhalts dieser Struktur werden weiter unten beschrieben, aber im Wesentlichen besteht sie aus <b>Asset-Track-Strukturen</b> und <b>Parameter-Track-Strukturen</b>, die <b>Keyframe-Daten</b> verwenden, um während der Wiedergabe von <span class="notranslate">sequence</span> Aktionen auszuführen.</p>
  <p>Sequenzelemente werden mit den <a href="../Rooms/Sequence_Layers/Sequence_Layers.htm">Funktionen der Raumebene</a> behandelt, aber für <span class="notranslate">sequence</span> Objekte, Instanzen und Daten haben wir die folgenden Funktionen:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="sequence_exists.htm"><span class="notranslate">sequence_exists</span></a></li>
    <li><a href="sequence_create.htm"><span class="notranslate">sequence_create</span></a></li>
    <li><a href="sequence_destroy.htm"><span class="notranslate">sequence_destroy</span></a></li>
    <li><a href="sequence_get.htm"><span class="notranslate">sequence_get</span></a></li>
    <li><a href="sequence_track_new.htm"><span class="notranslate">sequence_track_new</span></a></li>
    <li><a href="sequence_keyframe_new.htm"><span class="notranslate">sequence_keyframe_new</span></a></li>
    <li><a href="sequence_keyframedata_new.htm"><span class="notranslate">sequence_keyframedata_new</span></a></li>
    <li><a href="sequence_get_objects.htm"><span class="notranslate">sequence_get_objects</span></a></li>
    <li><a href="sequence_instance_override_object.htm"><span class="notranslate">sequence_instance_override_object</span></a></li>
  </ul>
  <p> </p>
  <p>Es gibt auch eine <strong>eingebaute Variable</strong>, die mit Instanzen verbunden ist, die verwendet werden kann, um festzustellen, ob die Instanz in einer <span class="notranslate">sequence</span> verwendet wurde oder nicht:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="in_sequence.htm"><span class="notranslate">in_sequence</span></a></li>
  </ul>
  <p class="note"><strong>WICHTIG!</strong> Wenn dein <span class="notranslate">sequence</span> irgendwelche Instanzen enthält, sollten diese Instanzen ihre <span class="inline"><span style="font-size:14px;">image_xscale</span> / <span class="inline"><span style="font-size:14px;">image_yscale</span> / <span class="inline"><span style="font-size:14px;">image_angle</span> / <span class="inline"><span style="font-size:14px;">x</span> / <span class="inline"><span style="font-size:14px;">y</span> Variablen nicht ändern, da sie überschrieben werden, wenn die <span class="notranslate">sequence</span> jeden Schritt nach dem Start des Abspielens aktualisiert.</p>
  <p> </p>
  <p>Bevor Sie diese Funktionen zum Erstellen oder Bearbeiten von <span class="notranslate">sequences</span> verwenden, empfehlen wir Ihnen, die detaillierten Beschreibungen der Struktur-Eigenschaften zu lesen. Ein allgemeiner Überblick über die Erstellung einer neuen <span class="notranslate">sequence</span> wäre:</p>
  <ul class="colour">
    <li>Erstellen Sie das neue Objekt <span class="notranslate">sequence</span> mit der Funktion <span class="inline"><a href="sequence_create.htm">sequence_create()</a></span> und speichern Sie den Objektindex <span class="notranslate">sequence</span> in einer Variablen. Über diesen Index haben Sie Zugriff auf die <span class="notranslate">sequence</span> object struct.</li>
  </ul>
  <p class="code">myseq = sequence_create();</p>
  <ul class="colour">
    <li>Legen Sie die Top-Level-Werte des <span class="notranslate">sequence</span> -Objekts fest, z. B. Länge, Abspielmodus, Abspielgeschwindigkeit usw.. Zum Beispiel:</li>
  </ul>
  <p class="code">myseq.length = 120;<br />
    myseq.loopmode = seqplay_pingpong</p>
  <ul class="colour">
    <li>Bevor Sie dem <span class="notranslate">sequence</span> -Objekt Spuren hinzufügen können, müssen Sie sie erstellen, d.h. Sie erstellen ein Array von <i>Asset-Spuren</i>, die mit der Funktion <a href="sequence_track_new.htm"><span class="inline">sequence_track_new()</span></a>. Beachten Sie, dass es in <span class="notranslate">code</span> eigentlich keinen Unterschied zwischen Asset-Spuren und Parameter-Spuren gibt - sie sind alle einfach nur Spuren, und wie sie sich verhalten, hängt von der Art der Spur ab, die Sie erstellen, und davon, ob sie als Unterspuren einer übergeordneten Spur zugewiesen sind oder nicht. Sie würden also eine Spur für ein Asset erstellen und ihr dann Unterspuren für die verschiedenen Parameter zuweisen, und diese Unterspuren würden als <i>Parameterspuren</i> für das Asset fungieren. Im folgenden Beispiel wird eine einzelne Spur für ein Grafik-Asset erstellt, die später zu <span class="notranslate">sequence</span> hinzugefügt wird:</li>
  </ul>
  <p class="code">var mytracks = array_create(1);<br />
    mytracks[0] = sequence_track_new(seqtracktype_graphic);</p>
  <ul class="colour">
    <li>Jede Asset-Spur braucht einige Daten, um <span class="notranslate">sequence</span> mitzuteilen, wie sie aussehen wird, oder ihre Position usw., und diese werden in Form von <i>Keyframes</i> hinzugefügt. Auf der obersten Ebene einer Asset-Spur können Sie Keyframes für verschiedene Dinge festlegen (die im Abschnitt über die Spurstruktur unten aufgeführt sind), aber beachten Sie, dass diese Asset-Spur-Keyframes nicht interpoliert werden, sondern einfach den Wert ändern, auf den sie sich beziehen, wenn der angegebene Frame erreicht wird. Jeder Keyframe ist eine Struktur, die zu einem Array hinzugefügt wird, und dieses Array wird dann dem Asset-Track zugewiesen. Um die Keyframe-Struktur zu erstellen, rufen wir die Funktion <a href="sequence_keyframe_new.htm"><span class="inline">sequence_keyframe_new()</span></a> auf, und um den Keyframe mit den erforderlichen Daten zu füllen, verwenden wir die Funktion <a href="sequence_keyframedata_new.htm"><span class="inline">sequence_keyframedata_new()</span></a>:</li>
  </ul>
  <p class="code">// Create a new keyframe struct for a graphics asset track and add it to an array (as you can have multiple keys in a frame)<br />
    var graphickeys = array_create(1);<br />
    graphickeys[0] = sequence_keyframe_new(seqtracktype_graphic);<br />
    // Set the graphics keyframe top level data for the keyframe position and length, etc...<br />
    graphickeys[0].frame = 0;<br />
    graphickeys[0].length = 1;<br />
    graphickeys[0].stretch = true;<br />
    graphickeys[0].disabled = false;<br />
    // Create the channel data that will go into this keyframe (again an array, as each key can have multiple channels of keyframe data)<br />
    var graphickeydata = array_create(1);<br />
    graphickeydata[0] = sequence_keyframedata_new(seqtracktype_graphic);<br />
    graphickeydata[0].spriteIndex = spr_Platform;<br />
    graphickeydata[0].channel = 0;<br />
    // Add the keyframe data channels to the graphics track keyframe<br />
    graphickeys[0].channels = graphickeydata;<br />
    // Add the definied keyframes to the track<br />
    mytracks[0].name = &quot;TestGraphicTrack&quot;;<br />
    mytracks[0].keyframes = graphickeys;</p>
  <ul class="colour">
    <li>Nun müssen wir eine Parameterspur erstellen, die wir der soeben erstellten Grafikspur als Unterspur zuweisen. Dies geschieht auf ähnliche Weise wie oben gezeigt, nur müssen wir der Spur einen Namen geben, der ihren Zweck angibt, in diesem Fall &quot;Position&quot;, da wir diese Spur verwenden werden, um die Grafikspur im Verlauf der <span class="notranslate">sequence</span> Animationsframes zu bewegen:</li>
  </ul>
  <p class="code">// Create a new parameter track struct for the position of the graphic<br />
    var paramtracks = array_create(1);<br />
    paramtracks[0] = sequence_track_new(seqtracktype_real);<br />
    paramtracks[0].name = &quot;position&quot;;<br />
    paramtracks[0].interpolation = true;<br />
    // Create the keyframe struct to hold the parameter channel data and set the frame position for the keyframe<br />
    var paramkeys = array_create(2);<br />
    paramkeys[0] = sequence_keyframe_new(seqtracktype_real);<br />
    paramkeys[0].frame = 0;<br />
    paramkeys[1] = sequence_keyframe_new(seqtracktype_real);<br />
    paramkeys[1].frame = 120;<br />
    // Create the keyframe data structs<br />
    var paramkeydata1 = array_create(2);<br />
    paramkeydata1[0] = sequence_keyframedata_new(seqtracktype_real);<br />
    paramkeydata1[0].channel = 0; // Channel 0 for a position track is the X position<br />
    paramkeydata1[0].value = 0;<br />
    paramkeydata1[1] = sequence_keyframedata_new(seqtracktype_real);<br />
    paramkeydata1[1].channel = 1; // Channel 1 for a position track is the Y position<br />
    paramkeydata1[1].value = 0;<br />
    var paramkeydata2 = array_create(2);<br />
    paramkeydata2[0] = sequence_keyframedata_new(seqtracktype_real);<br />
    paramkeydata2[0].channel = 0;<br />
    paramkeydata2[0].value = room_width;<br />
    paramkeydata2[1] = sequence_keyframedata_new(seqtracktype_real);<br />
    paramkeydata2[1].channel = 1;<br />
    paramkeydata2[1].value = room_height;<br />
    // Assign the keyframe data structs to the channels for each key<br />
    paramkeys[0].channels = paramkeydata1;<br />
    paramkeys[1].channels = paramkeydata2;<br />
    // Assign the keys to the parameter track<br />
    paramtracks[0].keyframes = paramkeys;</p>
  <ul class="colour">
    <li>Nun müssen wir nur noch die Parameterspur als Unterspur zu unserer Hauptgrafikspur zuweisen, die wir zu Beginn erstellt haben, und dann diese Spuren der <span class="notranslate">sequence</span> zuweisen, von der wir dann eine Instanz im Raum erstellen können:</li>
  </ul>
  <p class="code">mytracks[0].tracks = paramtracks;<br />
    myseq.tracks = mytracks;<br />
    layer_sequence_create(&quot;Assets_1&quot;, 0, 0, myseq);</p>
  <p>Die obigen Anweisungen erzeugen ein sehr einfaches <span class="notranslate">sequence</span> Objekt, das ein <span class="notranslate">sprite</span> an der (0, 0) Position <i>der Sequenz</i> zeichnet und es dann in die untere rechte Ecke und zurück in ein <span class="notranslate">loop</span> bewegt. Wie bereits erwähnt, gibt es eine Reihe von Stellen, an denen Sie auf verschiedene Strukturen zugreifen müssen, um Daten über die <span class="notranslate">sequence</span> zu geben oder zu erhalten, und in den folgenden Abschnitten werden alle verschiedenen Eigenschaften aufgeführt, die diese Strukturen enthalten:</p>
  <ul class="colour">
    <li><a name="object"></a><a href="Sequence_Structs/The_Sequence_Object_Struct.htm"><label for="1">Die <span class="notranslate">Sequence</span> Objektstruktur</label></a></li>
    <li><a name="instance"></a><a href="Sequence_Structs/The_Sequence_Instance_Struct.htm"><label for="2">Die <span class="notranslate">Sequence</span> Instanzstruktur</label></a></li>
    <li><a name="track"></a><a href="Sequence_Structs/The_Track_Struct.htm"><label for="3">Die Spur Struktur</label></a></li>
    <li><a name="keyframe"></a><a href="Sequence_Structs/The_Keyframe_Struct.htm"><label for="4">Die Keyframe-Struktur</label></a></li>
    <li><a name="keyframe_data"></a><a href="Sequence_Structs/The_Keyframe_Data_Struct.htm"><label for="5">Die Keyframe-Datenstruktur</label></a></li>
  </ul>
  <p> </p>
  <p>Schließlich ist es möglich, <span class="notranslate">code</span> zu <span class="notranslate">sequences</span> hinzuzufügen, das entweder als <strong>Ereignis</strong> oder als <strong>Broadcast-Nachricht</strong> ausgelöst werden kann. Dies wird auf der folgenden Seite ausführlich erklärt:</p>
  <ul class="colour">
    <li><a href="Sequence_Events_Moments_Broadcast.htm">Ereignisse, Momente und Broadcast-Nachrichten</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Asset_Management.htm">Vermögensverwaltung</a></div>
        <div style="float:right">Nächste: <a href="../Fonts/Fonts.htm">Schriftarten</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Sequences
-->
  <!-- TAGS
sequence_functions
-->
</body>
</html>