<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Sequenzereignisse, Momente und Broadcast-Nachrichten</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Sequence Events, Moments and Broadcast Messages" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Sequence Events,Sequence Momements,Sequence Messages,broadcast messages,event_create,event_destroy,event_clean_up,event_step,event_step_begin,event_step_end,event_async_system,event_broadcast_message" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Ereignisse, Momente und Broadcast-Nachrichten</h1>
  <p>Neben allen <a href="Sequences.htm">hier</a> aufgeführten Eigenschaften einer <span class="notranslate">sequence</span> Struktur haben Sie auch die Möglichkeit, spezielle &quot;Aktions&quot;-Eigenschaften zu einer <span class="notranslate">sequence</span> hinzuzufügen. Es gibt drei verschiedene Arten dieser &quot;Action&quot;-Eigenschaften, die zu einem <span class="notranslate">sequence</span> Objekt hinzugefügt werden können - <b>Events</b>. <b>Moments</b> und <b>Broadcast Messages</b> - und jede dieser Eigenschaften wird in den folgenden Abschnitten näher erläutert.</p>
  <h2>Reihenfolge der Ereignisse</h2>
  <p>Zu Sequenzobjekten können <b>Ereignisse</b> hinzugefügt werden, und diese Ereignisse entsprechen den Ereignissen, die von Objekt-Assets verwendet werden. Die Ereignisse, die Sie einem <span class="notranslate">sequence</span> Objekt zuweisen, treten in einer bestimmten Reihenfolge auf, entweder einmal zu einem bestimmten Zeitpunkt im <span class="notranslate">sequence</span> Lebenszyklus oder bei jedem Frame, den <span class="notranslate">sequence</span> ausführt. In diesem Abschnitt wird erläutert, wie diese Ereignisse mit <span class="notranslate">code</span> gehandhabt werden, sie können aber auch mit dem <a href="../../../../The_Asset_Editors/Sequences.htm">Sequenzeditor</a> hinzugefügt werden. Beachten Sie, dass die Reihenfolge der hier aufgeführten Ereignisse nicht von der <a class="glossterm" data-glossterm="Abspielkopf" href="#">Abspielrichtung</a> beeinflusst wird. Selbst wenn <span class="notranslate">sequence</span> rückwärts abgespielt wird, werden die Ereignisse in der unten angegebenen Reihenfolge ausgeführt.</p>
  <p>Die verfügbaren Ereignisse sind:<b></b></p>
  <ul class="colour">
    <li><b>Erstellen</b>: Dies wird ausgelöst, wenn eine <span class="notranslate">sequence</span> Instanz auf einer Ebene erstellt wird.</li>
    <li><b>Zerstören</b>: Dies wird ausgelöst, wenn eine <span class="notranslate">sequence</span> Instanz auf einer Ebene zerstört wird.</li>
    <li><b>Aufräumen</b>: Dies wird ausgelöst, wenn eine Instanz von <span class="notranslate">sequence</span> in den Müll geworfen wird.</li>
    <li><b>Schritt</b>: wird kurz vor dem üblichen Objektschritt-Ereignis ausgelöst. <b>Wichtig!</b> Wenn die <span class="notranslate">sequence</span> pausiert, wird dieses Ereignis erst beim nächsten Schritt ausgelöst, nachdem die <span class="notranslate">sequence</span> die Wiedergabe wieder aufgenommen hat.</li>
    <li><b>Schritt beginnen</b>: wird kurz vor dem Ereignis "Objekt beginnt Schritt" ausgelöst. <b>Wichtig!</b> Wenn die <span class="notranslate">sequence</span> pausiert, wird dieses Ereignis erst beim nächsten Schritt ausgelöst, nachdem die <span class="notranslate">sequence</span> wieder abgespielt wird.</li>
    <li><b>Endschritt</b>: Ausgelöst kurz vor dem Endschritt-Ereignis des Objekts. <b>Wichtig!</b> Wenn die <span class="notranslate">sequence</span> pausiert, wird dieses Ereignis erst beim nächsten Schritt ausgelöst, nachdem die <span class="notranslate">sequence</span> die Wiedergabe wieder aufgenommen hat.</li>
    <li><b>Asynchrones System</b>: wird genauso ausgelöst wie jedes andere Objekt <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/System.htm">Asynchrone System-Ereignishandler</a>. <em><b>Wichtig!</b> Wenn die <span class="notranslate">sequence</span> pausiert, wird dieses Ereignis nicht ausgelöst.</em></li>
    <li><b>Broadcast-Nachricht</b>: wird während der Aktualisierung von <span class="notranslate">sequence</span> ausgelöst, wenn ein Keyframe mit einer Broadcast-Nachricht auftaucht.</li>
  </ul>
  <p>Alle Ereignisse müssen mit Funktionen verknüpft werden, die in einer <span class="notranslate">script</span> definiert sind. Um ein Ereignis einzurichten, muss also eine <a href="../../../GML_Overview/Method_Variables.htm">Methodenvariable</a> einer Eigenschaft mit dem richtigen Namen zugewiesen werden, die <span class="notranslate">sequence</span> mitteilt, welches Ereignis die Funktion aufrufen soll. Die <span class="notranslate">syntax</span> ist dafür wie folgt aufgebaut:</p>
  <p class="code">&lt;sequence_struct&gt;.&lt;event_property&gt; = method(&lt;sequence_struct&gt;, &lt;function_name&gt;);</p>
  <p>Die <span class="notranslate">sequence</span> struct-Eigenschaften für die verschiedenen Ereignisse sind wie folgt:<span class="inline"></span></p>
  <ul class="colour">
    <li><span class="inline">event_create</span><span class="inline"></span></li>
    <li><span class="inline">event_destroy</span><span class="inline"></span></li>
    <li><span class="inline">event_clean_up</span><span class="inline"></span></li>
    <li><span class="inline">event_step</span><span class="inline"></span></li>
    <li><span class="inline">event_step_begin</span><span class="inline"></span></li>
    <li><span class="inline">event_step_end</span></li>
    <li><span class="inline">event_async_system</span><span class="inline"></span></li>
    <li><span class="inline">event_broadcast_message</span></li>
  </ul>
  <p>Um ein Beispiel für die Verwendung zu geben, nehmen wir an, wir möchten, dass <span class="notranslate">sequence</span> die Richtung umkehrt, wenn ein Klick mit der linken Maustaste erkannt wird. Dazu müssten wir zunächst eine <span class="notranslate">script</span> mit der Funktion erstellen, die wir aufrufen möchten, etwa so:</p>
  <p class="code">/// @function seq_reverse();<br />
    <br />
    function seq_reverse()<br />
    {<br />
        if mouse_check_button_pressed(mb_left)<br />
        {<br />
            if self.headDirection == seqdir_right<br />
            {<br />
                self.headDirection = seqdir_left;<br />
            }<br />
            else self.headDirection = seqdir_right;<br />
        }<br />
    }
  </p>
  <p>In dieser Funktion wird lediglich auf einen Mausklick gewartet und dann die Abspielrichtung der <span class="notranslate">sequence</span>, an die die Methode gebunden wurde, umgekehrt. Sie werden feststellen, dass Sie derzeit keine Parameter an die Funktionen übergeben können, die mit diesen Eigenschaften verknüpft sind, und dass in allen Fällen die <a href="../../../GML_Overview/Instance_Keywords.htm"><span class="inline">self</span></a> Variable innerhalb des Funktionsumfangs die Instanz <span class="notranslate">sequence</span> zugewiesen wird.</p>
  <p class="note"><b>HINWEIS</b>: Es ist erwähnenswert, dass in der obigen <span class="notranslate">script</span> der Bezeichner <span class="inline">self</span> weggelassen werden kann und nur verwendet wird, um den Geltungsbereich der Methodenvariable, die für dieses Beispiel verwendet wird, explizit anzuzeigen.</p>
  <p>Um dies einer <span class="notranslate">sequence</span> zuzuordnen, würden Sie dann etwa so vorgehen:</p>
  <p class="code">var _seq = sequence_get(Sequence1);<br />
    _seq.event_step = method(_seq, seq_reverse);</p>
  <p>Wir haben nun dem <span class="notranslate">sequence</span> <i>Objekt</i> ein Step-Ereignis mit einer Funktion zugewiesen, die erkennt, wenn eine Maus gedrückt wird und dann die Abspielrichtung der <span class="notranslate">sequence</span> <i>Instanz</i> ändert, nachdem sie in einem Raum erstellt wurde.</p>
  <h2><label for="2">Momente</label></h2>
  <p>Ein <span class="notranslate">sequence</span> <b>Moment</b> ist eine eindeutige <span class="notranslate">code</span> Aktion, die auf einem oder mehreren bestimmten Frames während der <span class="notranslate">sequence</span> Wiedergabe ausgelöst wird. Diese <span class="notranslate">code</span> Momente sind - wie bei den Ereignissen (siehe oben) - einfach vordefinierte <a href="../../../GML_Overview/Method_Variables.htm">Methodenvariablen</a>, die bei einem bestimmten Frame ausgelöst werden. Angenommen, Sie möchten, dass <span class="notranslate">sequence</span> eine &quot;Bullet&quot;-Instanz auf einem bestimmten Frame der Animation erstellt - dann müssen Sie zuerst die Funktion erstellen, die für diese Aktion verwendet werden soll, etwa so:</p>
  <p class="code">/// @function seq_shoot();<br />
    <br />
    seq_shoot = function()<br />
    {<br />
        instance_create_layer(sequence.xorigin, sequence.yorigin, &quot;Instances&quot;, obj_Bullet);<br />
    }
  </p>
  <p>Sie würden dies dann zu einem Frame in der <span class="inline">momentKeyframes</span> Eigenschaft der <span class="notranslate">sequence</span> Struktur hinzufügen. Dies ist im Wesentlichen eine &quot;spezielle&quot; Spur, die nur für diesen Zweck verwendet wird und daher nur Keyframe-Daten aufnehmen kann, die mit den Moment-Aktionen verbunden sind, die die <span class="notranslate">sequence</span> haben soll. Diese Spur wird auf die gleiche Weise wie jede andere Spur erstellt, indem Keyframe-Strukturen erstellt und mit Keyframe-Daten gefüllt werden, wobei Kanal 0 der einzige Kanal ist, den Sie verwenden können, und der Spurtyp <span class="inline">seqtracktype_moment</span> ist. Nachfolgend ein Beispiel für die Erstellung einer solchen Spur unter Verwendung der oben definierten Funktion, die zu den angegebenen Zeitpunkten (Frames) ausgelöst wird:</p>
  <p class="code">var _seq = sequence_get(my_Seq);<br />
    var _k = array_create(3);<br />
    _k[0] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[0].frame = 60;<br />
    _k[1] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[1].frame = 120;<br />
    _k[2] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[2].frame = 180;<br />
    var _d = array_create(1);<br />
    _d[0] = sequence_keyframedata_new(seqtracktype_moment);<br />
    _d[0].channel = 0;<br />
    _d[0].event = method(_d[0], seq_shoot);<br />
    _k[0].channels = _d;<br />
    _k[1].channels = _d;<br />
    _k[2].channels = _d;<br />
    _seq.momentKeyframes = _k;</p>
  <p>Die obige <span class="notranslate">code</span> setzt einfach die Frames 60, 120 und 180 der &quot;Moment&quot;-Spur, um die Methode <span class="inline">seq_shoot</span> aufzurufen. Sie werden feststellen, dass Sie derzeit keine Parameter an die Funktionen übergeben können, die für die einzelnen Momente verwendet werden, und dass in allen Fällen die Variable <span class="inline">self</span> innerhalb des Anwendungsbereichs der Funktion der Instanz <span class="notranslate">sequence</span> zugewiesen wird (im Allgemeinen brauchen Sie <span class="inline">self</span> nicht zu verwenden, aber in einigen speziellen Fällen kann es nützlich sein).</p>
  <h2><label for="3">Broadcast-Nachrichten</label></h2>
  <p>Sequenzen können so gestaltet werden, dass sie <b>Broadcast-Nachrichten</b> erzeugen, d. h. einfache Strings, die zu bestimmten Frames entlang der Animationszeitleiste hinzugefügt werden. Wenn dieser Punkt in der Zeitleiste erreicht ist, wird der String an alle Objektinstanzen gesendet, die darauf warten. Sie können diese Nachrichten in <span class="notranslate">IDE</span> mit dem <a href="../../../../The_Asset_Editors/Sequences.htm">Sequenzeditor</a> hinzufügen, aber sie können auch mit <span class="notranslate">code</span> erstellt und bearbeitet werden.</p>
  <p>Um eine Broadcast-Nachricht auf <span class="notranslate">sequence</span> unter Verwendung von <span class="notranslate">GML</span> zu erstellen, müssen Sie sie zu einem Frame in der Eigenschaft <span class="inline">messageEventKeyframes</span> der <span class="notranslate">sequence</span> -Struktur hinzufügen. Dies ist im Wesentlichen eine &quot;spezielle&quot; Spur, die nur für diesen Zweck verwendet wird und daher nur Keyframe-Daten aufnehmen kann, die mit den Broadcast-Nachrichten verbunden sind, die Sie auf <span class="notranslate">sequence</span> haben möchten. Diese Spur wird auf die gleiche Weise erstellt wie jede andere Spur, indem Sie Keyframe-Strukturen erstellen und diese mit Keyframe-Daten füllen, wobei Kanal 0 der einzige Kanal ist, den Sie verwenden können, und der Spurtyp <span class="inline">seqtracktype_message</span> ist. Im Folgenden finden Sie ein Beispiel für die Erstellung einer solchen Spur:</p>
  <p class="code">var _seq = sequence_get(my_Seq);<br />
    var _k = array_create(2);<br />
    _k[0] = sequence_keyframe_new(seqtracktype_message);<br />
    _k[0].frame = 60;<br />
    _k[1] = sequence_keyframe_new(seqtracktype_message);<br />
    _k[1].frame = 120;<br />
    var _m1 = array_create(2);<br />
    _m1[0] = &quot;Hello&quot;;<br />
    _m1[1] = &quot;World&quot;;<br />
    var _m2 = array_create(1);<br />
    _m2[0] = &quot;This is a Broadcast Message&quot;;<br />
    var _d1 = array_create(1);<br />
    _d1[0] = sequence_keyframedata_new(seqtracktype_message);<br />
    _d1[0].channel = 0;<br />
    _d1[0].events = _m1;<br />
    var _d2 = array_create(1);<br />
    _d2[0] = sequence_keyframedata_new(seqtracktype_message);<br />
    _d2[0].channel = 0;<br />
    _d2[0].events = _m2;<br />
    _k[0].channels = _d1;<br />
    _k[1].channels = _d2;<br />
    _seq.messageEventKeyframes = _k;</p>
  <p>Sie werden feststellen, dass der Nachrichtentext als Array an den Keyframe-Datenkanal übergeben wird. Der Grund dafür ist, dass Sie mehrere Nachrichten auf demselben Frame senden können und dass verschiedene Objektinstanzen auf sie hören und je nach der tatsächlich erwarteten Nachricht unterschiedlich reagieren.</p>
  <p>Sobald eine Broadcast-Nachricht von <span class="notranslate">sequence</span> gesendet wurde, können Sie sie mit Hilfe des Ereignisses <i>Andere</i> &gt; <i>Broadcast-Nachricht</i> in Objektinstanzen analysieren, was <a href="../../../../The_Asset_Editors/Sequence_Properties/Broadcast_Messages.htm">hier</a> im Detail erklärt wird.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Sequences.htm">Sequenzen</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Sequence Events
Sequence Moments
Sequence Broadcast Messages
broadcast Messages
event_create
event_destroy
event_clean_up
event_step
event_step_begin
event_step_end
event_async_system
event_broadcast_message
-->
  <!-- TAGS
sequence_events_moments_broadcasts
-->
</body>
</html>