<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>sha1_string_utf8</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for sha1_string_utf8" />
  <meta name="rh-index-keywords" content="sha1_string_utf8" />
  <meta name="search-keywords" content="sha1_string_utf8" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>sha1_string_utf8</h1>
  <p>In der Kryptografie ist SHA-1 eine kryptografische Hash-Funktion, die von der <i>Nationalen Sicherheitsbehörde</i> der Vereinigten Staaten entwickelt wurde und in mehreren weit verbreiteten Anwendungen und Protokollen wie dem beliebten <b>Git</b> eingesetzt wird, wo sie zur Überprüfung von Dateiänderungen verwendet wird.
    Diese Funktion nimmt eine UTF-8-Eingabezeichenkette (mit einer variablen Anzahl von Bytes pro Zeichen) und gibt einen 160-Bit-Nachrichtenverdauungswert im ASCII-Format zurück, zum Beispiel:</p>
  <p class="code">sha1 input string = &quot;The quick brown fox jumps over the lazy dog&quot;<br/> sha1 output hash = &quot;2fd4e1c6 7a2d28fc ed849ee1 bb76e739 1b93eb12&quot;</p>
  <p>Auf diese Weise können Sie einen sicheren Schlüssel generieren, der gespeichert und verwendet werden kann, um die Integrität der Informationen zu prüfen, die z. B. an eine externe <span class="notranslate">server</span> gesendet (oder von dieser empfangen) werden.</p>
  <p class="note"><b>HINWEIS</b>: Es gibt zwei Formate für die sha1-Kodierung, UTF-8 und Unicode. Beide sind vorgesehen, um die Kommunikation mit verschiedenen <span class="notranslate">server</span> zu erleichtern, aber am häufigsten wird Unicode verwendet.</p>
  <p class="note"><strong>HINWEIS</strong>: SHA-1 ist nicht völlig sicher und kann gebrochen werden. Siehe <a href="https://en.wikipedia.org/wiki/SHA-1">diese Seite</a> für weitere Informationen.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">sha1_string_utf8(string)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Typ</th>
        <th>Beschreibung</th>
     </tr>
      <tr>
        <td><span class="notranslate">string</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The string to hash.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_String"></span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var hash, str;<br/> str = json_encode(hiscore_map);<br/> hash = sha1_string_utf8(str);<br/> ini_open(&quot;local.ini&quot;);
    <br/> ini_write_string(&quot;info&quot;, &quot;0&quot;, hash);<br/> ini_close();
    <br/> get[0] = http_post_string(&quot;http://www.MacSweeney Games.com/CatchTheHaggis?game_hiscores=&quot; + string(global.game_id), str)</p>
  <p>Die obige <span class="notranslate">code</span> kodiert eine DS-Map in einen JSON-String. Anschließend wird ein sha1-Hash generiert und in einer ini-Datei gespeichert, so dass dieser später verwendet werden kann, um die Integrität des JSON zu überprüfen, falls die gleichen Informationen später von <span class="notranslate">server</span> empfangen werden. Das JSON
    wird dann gesendet.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Encoding_And_Hashing.htm">Dateikodierung</a></div>
        <div style="float:right">Nächste: <a href="sha1_string_unicode.htm"><span class="notranslate">sha1_string_unicode</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
sha1_string_utf8
-->
  <!-- TAGS
sha1_string_utf8
-->
</body>
</html>