<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>file_find_close</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for file_find_close" />
  <meta name="rh-index-keywords" content="file_find_close" />
  <meta name="search-keywords" content="file_find_close" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>file_find_close</h1>
  <p>Diese Funktion muss nach der Bearbeitung von Dateien aufgerufen werden, die mit <a href="file_find_first.htm"><span class="inline">file_find_first()</span></a> und <a href="file_find_next.htm"><span class="inline">file_find_next()</span></a> Funktionen geöffnet wurden, um Speicher freizugeben. Die Funktionen zur Dateisuche öffnen Handles im Dateiverzeichnis, die einen minimalen Speicherplatz belegen, der sich aber mit der Zeit aufaddiert. Daher sollten Sie diese Funktion immer aufrufen, nachdem Sie die gewünschten Dateien gefunden haben, um diese Handles zu &quot;schließen&quot;.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">file_find_close();</p>
  <p> </p>
  <h4>Rückgabe</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">if directory_exists(&quot;\User Content&quot;)<br />
    {<br />
        fileA = file_find_first(&quot;/User Content/*.doc&quot;, fa_readonly);<br />
        fileB = file_find_next();<br />
        fileC = file_find_next();<br />
        file_find_close();<br />
    }</p>
  <p> <span class="notranslate">code</span> prüft, ob das angegebene Verzeichnis existiert, und wenn ja, geht es dorthin und gibt die erste gefundene &quot;schreibgeschützte&quot; <span class="inline">.doc</span> Datei zurück. Dann sucht es nach zwei weiteren Dateien und schließt den Dateifinder.</p>
  <p>Sie können nach einer beliebigen Anzahl von Dateien suchen, indem Sie eine <a href="../../../GML_Overview/Language_Features/while.htm"><span class="notranslate">while</span></a> Schleife:</p>
  <p class="code">var files = [];<br />
    var file_name = file_find_first(&quot;/User Content/*.doc&quot;, fa_readonly);<br />
    <br />
    while (file_name != &quot;&quot;)<br />
    {<br />
        array_push(files, file_name);<br />
    <br />
        file_name = file_find_next();<br />
    }<br />
    <br />
    file_find_close();
  </p>
  <p>Die obige <span class="notranslate">code</span> erstellt ein leeres Array, um alle gefundenen Dateinamen zu speichern, und beginnt mit der Suche nach Dateien, die nur gelesen werden können <span class="inline">.doc</span>. Wenn der Dateiname keine leere Zeichenkette ist, wird er in das Array <span class="inline">files</span> verschoben, und dann wird versucht, die nächste Datei zu finden. <span class="notranslate">loop</span> wird so lange wiederholt, bis eine leere Zeichenkette gefunden wird (was bedeutet, dass es keine passenden Dateien mehr gibt). Dann wird <span class="notranslate">loop</span> beendet und der Dateifinder am Ende geschlossen.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="File_System.htm">Dateisystem</a></div>
        <div style="float:right">Nächste: <a href="file_attributes.htm"><span class="notranslate">file_attributes</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
file_find_close
-->
  <!-- TAGS
file_find_close
-->
</body>
</html>