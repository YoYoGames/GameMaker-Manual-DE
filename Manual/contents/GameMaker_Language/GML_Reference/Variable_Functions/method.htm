<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Methode</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function method" />
  <meta name="rh-index-keywords" content="method" />
  <meta name="search-keywords" content="method" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Methode</h1>
  <p>Mit dieser Funktion können Sie eine vorhandene Funktion (oder Methode) an die angegebene Instanz oder Struktur binden und eine neue <a href="../../GML_Overview/Method_Variables.htm">Methodenvariable</a> erstellen, die später verwendet werden kann.</p>
  <p>Sie geben die zu verwendende Instanz-ID (eine Instanz, die im Raum aktiv ist, und keinen Objektindex) oder eine Strukturreferenz sowie die Funktions-ID (oder Methodenreferenz) an, die Sie binden möchten. Die Funktion gibt eine neue <a class="glossterm" data-glossterm="Methode" href="#">Methode</a> zurück, die von der Variablen, der sie zugewiesen ist, aufgerufen werden kann (siehe das folgende Beispiel <span class="notranslate">code</span> ).</p>
  <p>Die zurückgegebene Methode wird an die angegebene Instanz oder Struktur &quot;gebunden&quot;, d.h. sie wird immer im Bereich dieser Instanz/Struktur ausgeführt.</p>
  <p>Sie können sowohl eingebaute Funktionen als auch benutzerdefinierte Funktionen/Methoden binden, und Sie können auch <span class="inline">undefined</span> als Instanz/Struktur <span class="notranslate">argument</span> angeben, was bedeutet, dass der aktuelle <a href="../../GML_Overview/Instance_Keywords.htm"><span class="inline">self</span></a> Bereich für die Bindung verwendet wird.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">method</span>(struct_ref_or_instance_id, func);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">struct_ref_or_instance_id</span></td>
        <td><span data-keyref="Type_Struct">Struktur</span> oder <span data-keyref="Type_ID_Instance">Instanz-ID</span></td>
        <td><span class="notranslate">The unique reference or ID value of the struct or instance to use (can be <span class="inline">self</span> oder <span class="inline">undefined</span>)</td>
      </tr>
      <tr>
        <td><span class="notranslate">func</span></td>
        <td><span data-keyref="Type_Function_Script">Skript Funktion</span> oder <span data-keyref="Type_Method">Methode</span></td>
        <td><span class="notranslate">The ID of the function (or method reference) to use</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Method">Method</span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var _inst = instance_position(mouse_x, mouse_y, obj_Enemy);<br />
    if (instance_exists(_inst)) <br />
    {<br />
        enemy_func = method(_inst, enemy_ai);<br />
    }</p>
  <p>Die obige <span class="notranslate">code</span> prüft, ob an der Mausposition eine Feindinstanz existiert. Ist dies der Fall, wird die Methode <span class="inline2">enemy_ai</span> an die Feindinstanz gebunden und als neue Methodenvariable <span class="inline">&quot;enemy_func&quot;</span> zurückgegeben.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Variable_Functions.htm">Variable Funktionen</a></div>
        <div style="float:right">Nächste: <a href="method_get_self.htm"><span class="notranslate">method_get_self</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
method
-->
  <!-- TAGS
method
-->
</body>
</html>