<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instanceof</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function instanceof" />
  <meta name="rh-index-keywords" content="instanceof" />
  <meta name="search-keywords" content="" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>instanceof</h1>
  <p>Diese Funktion kann verwendet werden, um den Namen der <a href="../../GML_Overview/Structs.htm">Konstruktorfunktion</a> zu erhalten, die zur Erstellung einer Struktur verwendet wurde. Die Struktur selbst sollte mit der Funktion <a href="../../GML_Overview/Language_Features/new.htm"><span class="inline"></span></a> <a href="../../GML_Overview/Language_Features/new.htm"><span class="inline">new</span></a> Operator zusammen mit dem Konstruktor selbst erstellt worden sein. Sie geben die Variable mit der zu prüfenden struct-Referenz an und die Funktion gibt entweder einen String mit dem Konstruktornamen oder <span class="inline">undefined</span> zurück.</p>
  <p>Wenn Sie der Funktion ein struct-Literal übergeben (d. h. ein struct, das ohne Verwendung einer Konstruktorfunktion erstellt wurde), gibt sie einfach die Zeichenfolge <span class="inline2">&quot;struct&quot;</span> zurück <span class="inline2">.</span></p>
  <p>Diese Funktion kann auch verwendet werden, um zu prüfen, ob eine struct-Referenz eine <strong><a class="glossterm" data-glossterm="schwache Referenz" href="#">schwache Referenz</a></strong> ist oder nicht. In diesem Fall gibt die Funktion die Zeichenkette <span class="inline2">&quot;weakref&quot;</span> anstelle des Namens der Funktion zurück, die die Struktur erstellt hat. Für weitere Informationen, siehe die Funktion <a href="../Garbage_Collection/weak_ref_create.htm"><span class="inline">weak_ref_create()</span></a>.</p>
  <p>Der zurückgegebene Konstruktorname enthält zusätzlichen Text, wenn die Konstruktorfunktion nicht in einem <span class="notranslate">script</span> erstellt wurde. Wenn sie innerhalb eines Objekts erstellt wurde, enthält ihr Name das Objekt und das Ereignis, in dem sie erstellt wurde. Ein Konstruktor namens <span class="inline2">test_constructor</span>, der im Ereignis Create von <strong>Object1</strong> erstellt wurde, wird beispielsweise als <span class="inline2">&quot;test_constructor_gml_Object_Object1_Create_0&quot;</span> zurückgegeben <span class="inline2">.</span> Um dies zu vermeiden, erstellen Sie Ihre Konstruktoren in einer <a href="../../GML_Overview/Script_Functions.htm"><span class="notranslate">script</span></a>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">instanceof(struct_id);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">struct</span></td>
        <td><span data-keyref="Type_Struct"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Structs.htm">Struktur</a></span></td>
        <td><span class="notranslate">The struct reference to use.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_String"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">String</a></span> or <span data-keyref="Type_Undefined"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">undefined</a></span></p>
  <p> </p>
  <h4>Erweitertes Beispiel:</h4>
  <p>In diesem Beispiel müssen wir zunächst die Funktion definieren, die als Konstruktor für unsere Struktur verwendet werden soll. Die folgende Funktion ist in einem Asset <span class="notranslate">script</span> definiert:</p>
  <p class="code">function init_struct(_a, _b, _c) constructor<br />
    {<br />
        a = _a;<br />
        b = _b;<br />
        c = _c;<br />
    }</p>
  <p>Diese Funktion kann dann zusammen mit dem Operator <span class="inline">new</span> verwendet werden, um eine Struktur zu erstellen und sie mit den Variablen zu füllen, die auf die Werte der in der Funktion verwendeten <span class="notranslate">arguments</span> gesetzt sind:</p>
  <p class="code">mystruct = new init_struct(10, 100, &quot;Hello World&quot;);</p>
  <p>Wir können dann den Namen der Konstruktorfunktion erhalten, die wie folgt verwendet wurde:</p>
  <p class="code">var _name = instanceof(mystruct);<br />
    if (is_string(_name)) <br />
    {<br />
        show_debug_message(_name);<br />
    }</p>
  <p>Dies gibt die Zeichenkette <span class="inline2">&quot;init_struct&quot;</span> in das Ausgabeprotokoll ein, was der Name der Konstruktorfunktion ist, wie sie in <span class="notranslate">script</span> definiert ist.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Variable_Functions.htm">Variable Funktionen</a></div>
        <div style="float:right">Nächste: <a href="array_create.htm"><span class="notranslate">array_create</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
instanceof
-->
  <!-- TAGS
instanceof
-->
</body>
</html>