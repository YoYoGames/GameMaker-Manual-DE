<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>array_length_2d</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function array_length_2d" />
  <meta name="rh-index-keywords" content="array_length_2d (Deprecated)" />
  <meta name="search-keywords" content="array_length_2d" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>array_length_2d <span class="warning">DEPRECATED</span></h1>
  <p class="note"><b>WARNUNG!</b> Diese Funktion ist veraltet (und wurde durch <span class="inline"><a href="array_length.htm">array_length()</a></span> ersetzt), da Arrays nicht mehr auf 1 oder 2 Dimensionen beschränkt sind und diese Funktion daher nur zur Unterstützung älterer Projekte bereitgestellt wird. Alle neuen Projekte sollten die aktuelle Art der Erstellung und des Zugriffs auf mehrdimensionale Arrays verwenden (siehe <a href="../../GML_Overview/Arrays.htm">hier</a> für weitere Informationen).</p>
  <p>Mit dieser Funktion können Sie die Länge (Anzahl der Einträge) der zweiten Dimension eines Arrays ermitteln. Sie geben die Eintragsnummer für die erste Dimension an und die Funktion gibt die Anzahl der Einträge der zweiten Dimension zurück, die das Array hat (um die Länge der ersten Dimension zu ermitteln, verwenden Sie die Funktion <a href="array_height_2d.htm"><span class="inline">array_height_2D()</span></a>). Die Funktion gibt 0 zurück, wenn die angegebene Variable kein Array ist, oder 1, wenn die Variable ein 1D-Array ist (da es noch eine Zeile gibt).</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">array_length_2d(array_index, n);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td><span class="notranslate">array_index</span></td>
        <td><span data-keyref="Type_Array">Array</span></td>
        <td><span class="notranslate">The index of the array to check.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">n</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The entry of the array to get the length of.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span></p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">for (var i = 0; i &lt; array_height_2d(a); ++i;)<br />
    {<br />
        for (var j = 0; j &lt; array_length_2d(a, i); ++j;)<br />
        {<br />
            a[i, j] = -1;<br />
        }<br />
    }</p>
  <p> <span class="notranslate">code</span> Die obige <span class="notranslate">loop</span> durchläuft ein 2D-Array und setzt jeden Eintrag auf -1.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Variable_Functions.htm">Variable Funktionen</a></div>
        <div style="float:right">Nächste: <a href="array_height_2d.htm"><span class="notranslate">array_height_2d</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
array_length_2d (deprecated)
-->
  <!-- TAGS
array_length_2d
-->
</body>
</html>