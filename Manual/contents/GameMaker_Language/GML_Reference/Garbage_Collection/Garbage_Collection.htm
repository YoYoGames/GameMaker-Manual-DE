<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Müllabfuhr</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for the Garbage Collection functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Garbage Collection" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Müllabfuhr</h1>
  <p>Der <span data-keyref="GameMaker Name">GameMaker</span> <strong>Garbage Collector</strong> existiert, weil Methoden auf dem Stack übergeben und nicht referenziert werden können, ebenso wie Structs und einige andere Dinge, die wiederum ein Speicherleck verursachen würden, wenn sie nicht auf irgendeine Weise &quot;aufgeräumt&quot; würden. Hier kommt der Garbage Collector ins Spiel, der im Hintergrund des Spiels läuft und alles sammelt, was nicht mehr referenziert wird, um eine optimale Speichernutzung zu gewährleisten. Wenn wir davon sprechen, dass etwas nicht mehr referenziert wird, beziehen wir uns im Allgemeinen auf jede Struktur oder Funktion, die nicht mit einer <strong>globalen </strong>Variablen oder einer <strong>Objektinstanzvariablen</strong> verbunden ist (das muss nicht direkt sein, sondern über eine Kette anderer Variablen). Beachten Sie auch, dass Funktionen, die in <span class="notranslate">scripts</span> in der <span class="notranslate">IDE</span> definiert sind, ebenfalls nicht gesammelt werden, da sie implizit global sind.</p>
  <p class="note"><b>HINWEIS</b>: Bitte beachten Sie, dass Dinge wie Oberflächen, Datenstrukturen, <span class="notranslate">buffers</span> und andere dynamische Ressourcen <b>nicht</b> garbage collected werden und ihre eigenen <span class="inline">destroy</span> Funktionen haben, um den mit ihnen verbundenen Speicher aufzuräumen. Als Faustregel gilt: Wenn alles, was Sie zur Laufzeit erstellen, eine <span class="inline">destroy</span> Funktion hat, wird es nicht vom Garbage Collecting erfasst und Sie müssen sich in <span class="notranslate">code</span> selbst darum kümmern. Die Ausnahmen sind <span class="notranslate">sequences</span>, Animationskurven und Instanzen, die ebenfalls den Garbage Collector benötigen, <b>deren Destroy-Funktion aber trotzdem aufgerufen werden muss</b>.</p>
  <p>Die Garbage Collection, die <span data-keyref="GameMaker Name">GameMaker</span> verwendet, ist &quot;generational&quot;. Das bedeutet, dass Objekte in &quot;Generationen&quot; eingeteilt werden, um die Arbeit zu reduzieren, die bei jedem Frame erledigt werden muss. Neue Objekte werden in Generation 0 erstellt und in ältere Generationen verschoben, wenn sie selbst altern. Der Grundgedanke dabei ist, dass Objekte, die eine Weile im Umlauf sind, nicht ständig überprüft werden müssen, um festzustellen, ob sie gelöscht werden sollten, sondern weniger häufig überprüft werden können (beachten Sie, dass sich &quot;Objekte&quot; hier auf alles bezieht, was in den Müll geworfen werden kann, und <i>nicht</i> auf allgemeine Objektinstanzen, wie sie im Asset Browser definiert sind). Beachten Sie, dass das Prüfsystem zwar generationsabhängig ist, die tatsächlichen Prüfungen aber &quot;inkrementell&quot; durchgeführt werden, d. h., anstatt potenziell Tausende von Objekten einer Generation in einem einzigen Frame zu löschen - was zu einer hohen CPU-Belastung führt und möglicherweise das Gameplay beeinträchtigt -, wird jede Generation geprüft und die Bereinigung bei Bedarf auf mehrere Frames verteilt, so dass der Garbage Collector häufiger läuft, aber weniger Arbeit pro Frame leistet (Sie können die Zielzeit für den Garbage Collector pro Frame mit der Funktion <span class="inline"><a href="gc_target_frame_time.htm">gc_target_frame_time()</a></span> festlegen).</p>
  <p>Im Allgemeinen sollten Sie nie mit dem <span data-keyref="GameMaker Name">GameMaker-Garbage-Collector-System</span> interagieren müssen, und normalerweise sind die Ergebnisse seiner Arbeit nicht sichtbar, aber einige <span class="notranslate">GML</span> Befehle stehen zur Verfügung, um Informationen darüber zu erhalten, was der Collector tut, und um sein Verhalten in begrenztem Maße zu beeinflussen.</p>
  <p class="note"><b>WICHTIG!</b> Beachten Sie, dass auf dem HTML5-Ziel <span class="notranslate">platform</span> die Garbage Collection von der JavaScript-Engine durchgeführt wird und daher keine der unten aufgeführten Funktionen den Betrieb beeinflusst und die Funktion <span class="inline">gc_get_stats()</span> für alle Felder 0 zurückgibt.</p>
  <ul class="colour">
    <li><a href="gc_enable.htm"><span class="notranslate">gc_enable</span></a></li>
    <li><a href="gc_is_enabled.htm"><span class="notranslate">gc_is_enabled</span></a></li>
    <li><a href="gc_collect.htm"><span class="notranslate">gc_collect</span></a></li>
    <li><a href="gc_target_frame_time.htm">gc_target_frame_time</a></li>
    <li><a href="gc_get_target_frame_time.htm">gc_get_target_frame_time</a></li>
    <li><a href="gc_get_stats.htm"><span class="notranslate">gc_get_stats</span></a></li>
  </ul>
  <p> </p>
  <p>Um zu entscheiden, was wann vom Garbage Collector abgeholt werden muss, gibt es auch einige Funktionen, mit denen <strong>schwache Referenzen</strong> auf Structs erstellt und überprüft werden können. Ein schwacher Verweis ist ein Verweis, der das referenzierte Objekt nicht vor der Abholung durch einen Garbage Collector schützt, und kann daher verwendet werden, um zu überprüfen, ob eine Struktur noch &quot;lebendig&quot; (referenziert) ist oder nicht irgendwo im Spiel. Die verfügbaren Funktionen für eine schwache Referenzierung sind:</p>
  <ul class="colour">
    <li><a href="weak_ref_create.htm"><span class="notranslate">weak_ref_create</span></a></li>
    <li><a href="weak_ref_alive.htm"><span class="notranslate">weak_ref_alive</span></a></li>
    <li><a href="weak_ref_any_alive.htm"><span class="notranslate">weak_ref_any_alive</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../GML_Reference.htm">GML-Referenz</a></div>
        <div style="float:right">Nächste: <a href="../Variable_Functions/Variable_Functions.htm">Variable Funktionen</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
GML Reference
-->
  <!-- TAGS
gml_reference
-->
</body>
</html>