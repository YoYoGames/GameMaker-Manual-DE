<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Bauen über die Kommandozeile</title>
    <meta name="generator" content="Adobe RoboHelp 2020" />
    <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
    <script src="../assets/scripts/main_script.js"></script>
    <meta name="rh-authors" content="Gurpreet S. Matharoo" />
    <meta name="topic-comment" content="Page that explains how your project can be compiled and tested through a CLI
" />
    <meta name="rh-index-keywords" content="Building via Command Line" />
    <meta name="search-keywords" content="build, command line, cli, ci, igor, continuous integration" />
  </head>
  <body><!--<div class="body-scroll" style="top: 150px;">-->
    <h1 id="h">Bauen über die Kommandozeile</h1>
    <p class="note"><span class="note"><strong>HINWEIS</strong></span> Das Erstellen von ausführbaren Paketen über die Kommandozeile ist nur unter bestimmten Lizenzen möglich. Bitte informieren Sie sich auf <a href="https://help.yoyogames.com/hc/en-us/articles/115002637011" title="Which Licence Is Right For Me?">dieser Seite</a>, ob Ihre Lizenz dies unterstützt. Bei allen anderen Lizenzen können Sie Ihr Projekt ohne Einschränkungen über die Kommandozeile ausführen und debuggen.</p>
    <p>Zusätzlich zur Erstellung Ihres Projekts über die Website <span class="notranslate">IDE</span>, <span data-keyref="GameMaker Name"><span data-keyref="GameMaker Name">GameMaker</span></span> ermöglicht es Ihnen, Ihre Projekte über eine Befehlszeilenschnittstelle zu erstellen, indem Sie die vielen unten beschriebenen Optionen und Befehle verwenden. Auf diese Weise können Sie Ihr Projekt erstellen, testen und auf mehreren <span class="notranslate">platforms</span> bereitstellen, indem Sie eine Batch-Datei ausführen, und eine kontinuierliche Integration über eine Automatisierungslösung wie <a href="https://www.jenkins.io/" title="Jenkins">Jenkins</a> einrichten <span class="notranslate">server</span>.</p>
    <p>Dazu führen Sie die ausführbare Datei <span class="inline">Igor.exe</span> in Ihrem Ordner <span class="notranslate">runtime</span> aus und geben die auf dieser Seite aufgeführten Optionen und Befehle ein. Auf <span class="notranslate">Windows</span> befindet sich dies im Ordner <span class="inline">C:\ProgramData\GameMaker\Cache\runtimes\runtime-[version]\bin</span> und auf Mac unter <span class="inline">/Users/Shared/GameMaker/Cache/runtimes/runtime-[version]/bin</span>.</p>
    <p> </p>
    <h1>Igor CI Gebäude</h1>
    <h2>Einrichten</h2>
    <p>Um die CI-Erstellung auf einem Rechner einzurichten, müssen Sie Folgendes tun:</p>
    <ul class="colour">
      <li>Installieren Sie <span data-keyref="GameMaker Name">GameMaker</span> und die benötigte <span class="notranslate">runtimes</span> </li>
      <li>Erstellen Sie die Projekte über <span class="notranslate">IDE</span> für die erforderlichen Ziele, um sicherzustellen, dass sie einwandfrei funktionieren.</li>
      <li>Testen Sie die Erstellung über die Befehlszeile (siehe Beispiele unten)</li>
      <li>Erstellen Sie eine Stapeldatei, die den von Ihnen gewünschten Build im Rahmen der Aufgabe durchführt (testen Sie dies über die Befehlszeile)</li>
      <li>Richten Sie eine CI-Umgebung ein (dies hängt davon ab, wie Sie Ihre Spiele erstellen wollen); wir empfehlen die Verwendung von <a href="https://www.jenkins.io/" title="Jenkins">Jenkins</a></li>
      <li>Richten Sie Ihre CI-Aufgabe ein und stellen Sie sicher, dass alle Voraussetzungen erfüllt sind (z. B. Synchronisierung der Versionskontrolle mit Ihrem Projekt).</li>
      <li>Hängen Sie die Batch-Datei in die CI-Aufgabe ein und testen Sie sie in der Jenkins-Umgebung</li>
    </ul>
    <h2>Anmerkungen</h2>
    <ul class="colour">
      <li>Einige <span class="notranslate">platforms</span> können Probleme mit der Länge Ihrer Dateipfade haben. In diesem Fall müssen Sie <span class="inline"><a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/subst" title="subst documentation">subst</a></span> virtuelle Laufwerke auf Ihrem PC einrichten (wie es <span class="notranslate">IDE</span> tut), bevor Sie sie in Ihre Befehle eingeben.</li>
      <li>Einige <span class="notranslate">platforms</span> (vor allem <span class="notranslate">Android</span>) werden automatisch <span class="inline">subst</span> ein Laufwerk während der Erstellung, so dass Sie möglicherweise manuell bereinigen müssen diese im Falle eines Fehlers</li>
    </ul>
    <h2>Optionen</h2>
    <p>Hier sind die Optionen, die Sie beim Ausführen von <strong>Igor </strong>verwenden können:</p>
    <table>
      <colgroup>
        <col style="width: 316px;" />
        <col />
      </colgroup>
      <tbody>
        <tr>
          <th style="">Option</th>
          <th style="">Beschreibung</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">Der Benutzerordner, der zum Abrufen von Lizenzinformationen verwendet wird
            <br>
            <br>
            Unter <span class="notranslate">Windows</span> ist dies der folgende Ordner: <span class="inline"><span>%appdata%\GameMaker\&lt;user_name&gt;_&lt;number&gt;</span>
            <br>
            Auf <span class="notranslate">macOS</span> lautet dieser Ordner: <span class="inline"><span>~/.config/GameMaker/&lt;user_name&gt;_&lt;number&gt;</span> </td>
        </tr>
        <tr>
          <td style=""><span class="inline">/rp=[runtime_root]</span></td>
          <td style="">Der Stammordner der Laufzeitumgebung</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/project=[project_YYP_file]</span></td>
          <td style="">Der vollständige Pfad zur <span class="inline">.yyp</span> Datei des Projekts</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/cache=[cache_dir_path]</span></td>
          <td style="">Das zu verwendende Verzeichnis <span class="notranslate">cache</span> (Standardwert ist <span class="inline">\cache</span> im aktuellen Verzeichnis)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/temp=[temp_dir_path]</span></td>
          <td style="">Das zu verwendende temporäre Verzeichnis (Standardwert: <span class="inline">c:\temp</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/of=[output_folder_filename]</span></td>
          <td style="">Das Ausgabeverzeichnis, in das der Build extrahiert wird; geben Sie nicht nur ein Verzeichnis an, da der letzte Eintrag immer entfernt wird (z. B.: die Angabe von <span class="inline">d:\game\output</span> legt die Spieldateien in <span class="inline">d:\game</span> ab).
            <br>
            <br>
            Wenn dies nicht angegeben wird, wird ein Verzeichnis mit dem Namen <span class="inline">output</span> im selben Verzeichnis wie die Datei <span class="inline">.bat</span> (oder dem Verzeichnis, von dem aus der Befehl ausgeführt wird) erstellt, das die extrahierten Build-Dateien enthält </td>
        </tr>
        <tr>
          <td style=""><span class="inline">/tf=[target_file]</span></td>
          <td style="">Der tatsächliche Dateiname der ZIP-Datei oder des NSIS-Installationsprogramms, das erstellt wird</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/config=[configName]</span></td>
          <td style="">Der Name der zu verwendenden Konfiguration (Standardwert: <span class="inline">Default</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/runtime=YYC|VM</span></td>
          <td style="">Der Ausgabetyp (entweder YYC oder VM), Standardwert ist VM</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/j=[NumCPUs]</span></td>
          <td style="">Die Anzahl der CPUs, die während des Build-Prozesses verwendet werden sollen</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/device=[device_name_from_IDE]</span></td>
          <td style="">Der Name des Zielgeräts, wie er in der IDE eingerichtet ist</td>
        </tr>
      </tbody>
    </table>
    <h2>Beispiele</h2>
    <p>Im Folgenden finden Sie Beispiele für Build-Befehle für alle Plattformen:</p>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#">Oper GX</a></p>
    <div class="droptext" data-targetname="drop-down12">
      <p>Reinigung des Opera GX-Projekts:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Clean</p>
      <p>Opera GX läuft:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Run</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Windows</a></p>
    <div class="droptext" data-targetname="drop-down">
      <p>Projekt Reinigung <span class="notranslate">Windows</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Clean</p>
      <p>Gebäude-VM für <span class="notranslate">Windows</span> -- <span class="inline">Run</span>, <span class="inline">PackageZip </span>und <span class="inline">PackageNsis</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Run</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageZip</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageNsis</p>
      <p>Aufbau von YYC für Windows - <span class="inline">Run</span>, <span class="inline">PackageZip </span>und <span class="inline">PackageNsis</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /platform=YYC -- Windows Run</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageZip</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageNsis</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">macOS</a></p>
    <div class="droptext" data-targetname="drop-down1">
      <p>Projekt Reinigung <span class="notranslate">macOS</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Mac Clean</p>
      <p>Erstellen einer VM für <span class="notranslate">macOS</span> auf einem Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Mac Package</p>
      <p><strong>Beachten Sie</strong>, dass Sie auf dem Mac mono verwenden müssen, um Igor auszuführen, also müssen Sie <span class="inline"><strong>mono</strong></span> vor alle Ihre Befehle schreiben, z. B.: <span class="inline">mono Igor.exe [options]</span></p>
      <p>Erstellung einer VM für <span class="notranslate">macOS</span> auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Mac Package</p>
      <p>Erstellung von YYC für <span class="notranslate">macOS</span> auf einem Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Mac Package</p>
      <p>Erstellung von YYC für <span class="notranslate">macOS</span> auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Mac Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Linux / Ubuntu</a></p>
    <div class="droptext" data-targetname="drop-down2">
      <p>Projekt Reinigung <span class="notranslate">Linux</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Linux Clean</p>
      <p>Erstellung einer VM für <span class="notranslate">Linux</span> auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Linux Package</p>
      <p>Erstellung von YYC für <span class="notranslate">Linux</span> auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Linux Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">HTML5</a></p>
    <div class="droptext" data-targetname="drop-down3">
      <p>Reinigung des HTML5-Projekts:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- HTML5 Clean</p>
      <p>Erstellen eines HTML5-Ordners (stellen Sie sicher, dass Sie einen Zielordner mit <span class="inline">/tf)</span> angeben:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_folder] -- HTML5 folder</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">iOS</a></p>
    <div class="droptext" data-targetname="drop-down4">
      <p>Erstellen einer VM für <span class="notranslate">iOS</span> auf einem Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- ios Package</p>
      <p>Erstellung einer VM für <span class="notranslate">iOS</span> auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ios Package</p>
      <p>Erstellung von YYC für <span class="notranslate">iOS</span> auf einem Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- ios Package</p>
      <p>Erstellung von YYC für <span class="notranslate">iOS</span> auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ios Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">Android</a></p>
    <div class="droptext" data-targetname="drop-down5">
      <p>Projekt Reinigung <span class="notranslate">Android</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Clean</p>
      <p>Erstellung einer <span class="notranslate">Android</span> APK mit VM:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Android Package</p>
      <p>Erstellung einer <span class="notranslate">Android</span> APK mit YYC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Android Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#">tvOS</a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p>Projekt Reinigung <span class="notranslate">tvOS</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- tvos Clean</p>
      <p>Erstellen einer VM für <span class="notranslate">tvOS</span> auf einem Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- tvos Package</p>
      <p>Erstellung einer VM für <span class="notranslate">tvOS</span> auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- tvos Package</p>
      <p>Erstellung von YYC für <span class="notranslate">tvOS</span> auf einem Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- tvos Package</p>
      <p>Erstellung von YYC für <span class="notranslate">tvOS</span> auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- tvos Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">PS4</a></p>
    <div class="droptext" data-targetname="drop-down7">
      <p>PS4-Projekt reinigen:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps4 Clean</p>
      <p>Erstellen einer VM für PS4 auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps4 Package</p>
      <p>Ich baue YYC für PS4 auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps4 Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#">PS5</a></p>
    <div class="droptext" data-targetname="drop-down10">
      <p>Reinigung des PS5-Projekts:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps5 Clean</p>
      <p>Erstellen einer VM für PS5 auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps5 Package</p>
      <p>Ich baue YYC für PS5 auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps5 Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#">Xbox Eins</a></p>
    <div class="droptext" data-targetname="drop-down8">
      <p>Reinigung des Xbox One-Projekts:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOne Clean</p>
      <p>Erstellen einer VM für Xbox One auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOne Package</p>
      <p>YYC für Xbox One auf einem PC bauen:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOne Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#">Xbox Serie X/S</a></p>
    <div class="droptext" data-targetname="drop-down11">
      <p>Reinigung des Xbox Series X/S-Projekts:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOneSeriesXS Clean</p>
      <p>Gebäude-VM für Xbox Serie X/S:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOneSeriesXS Package</p>
      <p>Bau von YYC für Xbox Serie X/S:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOneSeriesXS Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#">Schalter</a></p>
    <div class="droptext" data-targetname="drop-down9">
      <p>Projekt Reinigung <span class="notranslate">Switch</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Switch Clean</p>
      <p>Erstellung einer VM für <span class="notranslate">Switch</span> auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Switch Package</p>
      <p>Erstellung einer VM für YYC auf einem PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Switch Package</p>
    </div>
    <p> </p>
    <h1>Igor Laufzeit</h1>
    <p>Hier sind die Optionen, die mit der Igor-Laufzeitumgebung verwendet werden können:</p>
    <table>
      <tbody>
        <tr>
          <th style="">Option</th>
          <th style="">Beschreibung</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">Legen Sie den Benutzerordner fest, der zum Abrufen von Lizenzinformationen verwendet wird, damit <span data-keyref="GameMaker Name">GameMaker</span> weiß, welche <span class="notranslate">modules</span> installiert werden kann.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/lf=[license_file]</span></td>
          <td style="">Legt den direkten Pfad zu einer Lizenzdatei fest, kann als Alternative zum Festlegen eines Benutzerordners verwendet werden (<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/ru=[runtime_url]</span></td>
          <td style="">Legen Sie die URL fest, von der <span class="notranslate">runtime</span> Informationen abrufen soll (standardmäßig die stabile Version)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/rp=[runtime_root]</span></td>
          <td style="">Setzen Sie den lokalen <span class="notranslate">runtime</span> Installationsordner, um die installierten <span class="notranslate">runtimes</span> aufzulisten oder neue Laufzeiten zu installieren</td>
        </tr>
      </tbody>
    </table>
    <p>Hier sind die Befehle, die mit der Igor-Laufzeitumgebung verwendet werden können:</p>
    <h4>Syntax:</h4>
    <p class="code">Igor.exe [command]</p>
    <table>
      <colgroup>
        <col style="width: 237px;" />
        <col style="width: 537px;" />
      </colgroup>
      <tbody>
        <tr>
          <th style="">Befehl</th>
          <th style="">Beschreibung</th>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime List</span></td>
          <td style="">Listet die für einen Feed verfügbaren <span class="notranslate">runtimes</span> auf (Versionsnummer, Datum/Uhrzeit der Erstellung)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime ListInstalled [directory]</span></td>
          <td style="">Listet die im aktuellen Ordner verfügbaren <span class="notranslate">runtimes</span> auf (<span class="inline">directory</span>=vollständiger Pfad zum Ordner)
            <br>
            <br>
            Sie können ein Verzeichnis angeben, in dem gesucht werden soll, aber wenn es nicht angegeben wird, wird standardmäßig das aktuelle Verzeichnis verwendet.
            <br>
            <br>
            Es wird auch geprüft, ob sich in dem Verzeichnis eine Datei <span class="inline">receipt.json</span> und ein Ordner <span class="inline">manifest</span> befinden (um sicherzustellen, dass es sich tatsächlich um <span class="notranslate">runtime</span> handelt). </td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Info [version]</span></td>
          <td style="">Druckt Informationen über die neuesten <span class="notranslate">runtime</span> auf dem angegebenen Feed aus; benötigt auch eine Lizenzdatei, um Informationen über die für den Benutzer verfügbaren <span class="notranslate">modules</span> anzuzeigen
            <br>
            <br>
            <span class="inline">version</span> kann entweder durch eine Zeichenkette, die zum Durchsuchen der Feed-Titel verwendet wird (z.B.: <span class="inline">&quot;739&quot;</span> würde Informationen für alle Builds anzeigen, die 739 in ihrer Versionsnummer enthalten), oder es kann <span class="inline">all</span> sein, um Informationen für alle Feeds anzuzeigen
            <br>
            <br>
            Es wird die <span class="notranslate">modules</span> mit den <span class="inline">.zip</span> Dateinamen für jedes <span class="notranslate">module</span> aufgelistet. </td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Install [version]</span></td>
          <td style="">Installiert die neueste Version von <span class="notranslate">runtime</span> aus dem angegebenen Feed unter Verwendung des angegebenen <span class="inline">version</span> als Suchfilter; wird dieser nicht angegeben, wird standardmäßig die neueste Version verwendet. Es werden alle <span class="notranslate">modules</span> abgerufen, die der Benutzer in seiner Lizenz hat.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Verify [folder=.]</span></td>
          <td style="">Berechnet die Prüfsummen für alle installierten Dateien und vergleicht sie mit den Prüfsummen, die im Manifest <span class="inline">folder</span> eingetragen sind. Sie können einen Ordner angeben, der geprüft werden soll. Wird dieser jedoch nicht angegeben, wird standardmäßig das aktuelle Verzeichnis verwendet.
            <br>
            <br>
            Es werden alle Dateien markiert, bei denen die Prüfsummen nicht übereinstimmen, Dateien, die fehlen, und Dateien, die nicht vorhanden sein sollten.
            <br>
            <br>
            Beachten Sie, dass die Manifestdateien selbst nicht überprüft werden und ein Benutzer die Manifestdateien ändern kann, damit sie mit den installierten Dateien übereinstimmen. </td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <h1>Igor-Prüfung</h1>
    <p>Hier finden Sie die Optionen, die Sie zum Testen Ihrer Builds mit Igor verwenden können:</p>
    <table>
      <tbody>
        <tr>
          <th style="">Option</th>
          <th style="">Beschreibung</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">Legen Sie den Benutzerordner fest, der zum Abrufen von Lizenzinformationen verwendet wird, damit <span data-keyref="GameMaker Name">GameMaker</span> weiß, welche <span class="notranslate">modules</span> installiert werden kann.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/lf=[license_file]</span></td>
          <td style="">Setzen eines direkten Pfades zu einer Lizenzdatei, kann als Alternative zum Setzen eines Benutzerordners verwendet werden (<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/df=[device_file]</span></td>
          <td style="">Setzen eines direkten Pfades zu einer <span class="inline">devices.json</span> Datei, kann als Alternative zum Setzen eines Benutzerordners verwendet werden (<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/timeout=[number_of_seconds_to_wait]</span></td>
          <td style="">Die für den Test zu verwendende Zeitüberschreitung in Sekunden, Standardwert ist 120 Sekunden; der Test wird nach Ablauf dieser Zeitüberschreitung abgebrochen und als fehlgeschlagen markiert</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/waittime=[number_of_seconds_to_wait]</span></td>
          <td style="">Anzahl der Sekunden, die im Hauptprogramm <span class="notranslate">loop</span> gewartet wird, bevor der Test als bestanden erklärt wird, Standardwert: 30 Sekunden</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/device=[device_name]</span></td>
          <td style="">Dient zum Nachschlagen des Gerätenamens in der Datei <span class="inline">devices.json</span> des Benutzerordners</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/target=[list_of_targets]</span></td>
          <td style="">Kommagetrennte Liste von Zielen im Format <span class="inline">PLATFORM|DEVICE</span>, z. B: <span class="inline">/target=&quot;Windows|Local,HTML|Firefox&quot;</span>
            <br>
            <br>
            Wenn Sie <strong>alle</strong> angeben, wird versucht, die Tests für jedes Gerät in der Datei <span class="inline">devices.json</span> durchzuführen. </td>
        </tr>
      </tbody>
    </table>
    <p>Es gibt einen Befehl, den Sie verwenden können, um Tests mit Igor durchzuführen:</p>
    <p class="code">Igor.exe Tests RunTests [test_directory/test_filename]</p>
    <p>Sie müssen entweder ein Testverzeichnis oder einen Testdateinamen angeben.</p>
    <ul class="colour">
      <li>Wenn es sich um ein Verzeichnis handelt, sucht Igor in diesem Verzeichnis nach einer Datei namens <span class="inline">tests.json</span> 
        <ul>
          <li>Wenn die Datei <strong>nicht gefunden wird</strong>, sucht Igor rekursiv nach den Dateien <span class="inline">.yyz</span> und <span class="inline">.yyp</span> im Verzeichnis
            <ul>
              <li>Jedes gefundene Projekt wird erstellt und unter Windows ausgeführt.</li>
              <li>Es wird gewartet, bis <span class="notranslate">runner</span> die Hauptschleife erreicht.
                <ul>
                  <li>Der Test ist erfolgreich, wenn <span class="notranslate">runner</span> nach Ablauf der Wartezeit noch läuft.</li>
                  <li>Der Test schlägt fehl, wenn das Projekt nicht innerhalb der Wartezeit kompiliert wird oder abstürzt, bevor die Wartezeit abgelaufen ist.</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>Wenn eine <span class="inline">tests.json</span> Datei <strong>gefunden wird</strong>, führt Igor die in der Datei beschriebenen Tests aus (siehe Beispiel unten)</li>
        </ul>
      </li>
      <li>Alternativ können Sie anstelle eines Verzeichnisses auch einen direkten Pfad zu einer Datei <span class="inline">tests.json</span> angeben</li>
    </ul>
    <p> </p>
    <h1>Tests.json Datei</h1>
    <h2>Format</h2>
    <p>Die Datei <span class="inline">tests.json</span> muss das folgende Format haben:</p>
    <ul class="colour">
      <li>Die JSON-Datei sollte ein Array von Objekten enthalten</li>
      <li>Jedes Objekt sollte einen Test beschreiben
        <ul>
          <li>Das Testobjekt muss diese Schlüssel enthalten:
            <ul>
              <li><span class="inline">name</span>: Ein Name, der angibt, ob der Test bestanden oder fehlgeschlagen ist</li>
              <li><span class="inline">path</span>: Ein Pfad zu einer <span class="inline">.yyp</span>, <span class="inline">.yyz</span>, <span class="inline">.gml</span>, <span class="inline">.js</span> Datei oder einem Ordner für den Test</li>
              <li><span class="inline">command</span>: Der Igor-Befehl für den Test (<span class="inline">Run</span>, <span class="inline">CreatePackage</span>, etc. wie oben beschrieben)</li>
            </ul>
          </li>
          <li>Das Testobjekt kann auch diese Schlüssel enthalten:
            <ul>
              <li><span class="inline">platform</span>: Wird direkt an Igor weitergeleitet, um den Test durchzuführen</li>
              <li><span class="inline">device</span>: Der Gerätename aus der Datei <span class="inline">devices.json</span> </li>
              <li><span class="inline">target</span>: Das Ziel in einem &quot;<span class="inline">PLATFORM|TARGET&quot;</span> Format, z.B.: &quot;<span class="inline">Windows|Local&quot;</span></li>
              <li><span class="inline">timeout</span>: Ein Zeitlimit für den gesamten Test einschließlich Kompilierung und Ausführung; bei Überschreitung wird der Test abgebrochen und als fehlgeschlagen markiert</li>
              <li><span class="inline">waittime</span>: Die Zeitspanne, die nach der Eingabe des Hauptmenüs <span class="notranslate">loop</span> gewartet wird, bevor entschieden wird, ob der Test bestanden wurde</li>
              <li><span class="inline">owner</span>E-Mail: die E-Mail-Adresse des Benutzers, der eine E-Mail erhält, wenn der Test fehlschlägt.</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
    <h2>Beispiel</h2>
    <p>Hier ist ein Beispiel für eine <span class="inline">tests.json</span> Datei:</p>
    <p class="code">[
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Game Idea Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/scratch/GameIdea.yyz&quot;,
      <br/>
      &quot;platform&quot; : &quot;Windows&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;,
      <br/>
      &quot;timeout&quot; : &quot;500&quot;,
      <br/>
      &quot;waittime&quot; : &quot;30&quot;
      <br/>
      },
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Platformer Game Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/Users/&lt;MY USERNAME&gt;/Documents/GameMaker/Platformer Game/PlatformerGame.yyp&quot;,
      <br/>
      &quot;target&quot; : &quot;Windows|Local,HTML5|selenium:firefox,PS4|Default&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;
      <br/>
      },
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Puzzle Game Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/Users/&lt;MY USERNAME&gt;/Documents/GameMaker/Puzzle Game/PuzzleGame.yyp&quot;,
      <br/>
      &quot;platform&quot; : &quot;HTML5&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;,
      <br/>
      &quot;device&quot; : &quot;selenium:chrome&quot;
      <br/>
      }
      <br/>
      ]</p>
    <p> </p>
    <p> </p>
    <div class="footer">
      <div class="buttons">
        <div class="clear">
          <div style="float:left">Zurück: <a data-xref="{title}" href="Runner_Details/Runner_Details.htm">Läufer &amp; Compiler</a></div>
          <div style="float:right">Nächste: <a data-xref="{title}" href="Runner_Details/Compiler_Batch_Files.htm">Compiler-Batch-Dateien/Skripte</a></div>
        </div>
      </div>
      <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
    </div>
    <!-- KEYWORDS
Building via Command Line
CLI
Command Line Interface
CI
Continuous Integration
--><!-- TAGS
building_via_command_line
--></body>
</html>