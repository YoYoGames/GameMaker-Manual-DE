<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Android</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that details the Android Game Options" />
  <meta name="rh-index-keywords" content="Game Options - Android" />
  <meta name="search-keywords" content="Android Game Options" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Android-Spieloptionen</h1>
  <p>In diesem Abschnitt werden die verschiedenen Optionen beschrieben, die Ihnen zur Verfügung stehen und die steuern, wie Ihre <span class="notranslate">Android</span> Spieleprojekte kompiliert werden. Die verschiedenen Abschnitte sind:</p>
  <p> </p>
  <h2>Allgemein</h2>
  <p><img>Der erste Teil des Abschnitts <strong>Allgemein </strong>ist den <strong>Produktinformationen</strong> und den <strong>Build-Einstellungen</strong> gewidmet. Sie sollten die Produktinformationen ausfüllen, die den <strong>Anzeigenamen des</strong> Projekts und die Paketinformationen enthalten, die aus <strong>Domäne</strong>, <strong>Unternehmen </strong>und <strong>Produkt</strong> bestehen. Die Paketinformationen dürfen nur aus Buchstaben von A-Z und Zahlen von 0-9 bestehen, ohne Symbole oder andere Sonderzeichen und ohne Großbuchstaben. Aus diesen Angaben wird dann eine Paket-ID mit dem Format &quot;<span class="inline">com.company.myappname</span>&quot; erzeugt.</p>
  <p>Anschließend müssen Sie die <strong>Build Tools</strong> sowie die <strong>SDK-Versionen</strong> <strong>Target</strong>, <strong>Minimum </strong>und <strong>Compile</strong> einstellen.</p>
  <p class="note"><strong>HINWEIS</strong>: Es gibt auch eine Option für die zu verwendende &quot;<strong>Support Library</strong>&quot;-Version. Ab <span data-keyref="GameMaker Name">GameMaker</span> v2.2.4 ist dies nicht mehr erforderlich und die hier verwendeten Werte werden ignoriert. Die Einstellung wird für die Verwendung mit älteren Projekten beibehalten, die eine frühere <span class="notranslate">runtime</span> als 2.2.4 benötigen.</p>
  <p>Die Build-Tools (und die Support-Bibliothek, falls erforderlich) werden verwendet, wenn <span data-keyref="GameMaker Name">GameMaker</span> Ihr Spiel für das Android-Ziel erstellt, und sollten auf der Grundlage der Tools, die Sie mit <span class="notranslate">Android</span> Studio installiert haben, auf die entsprechenden Werte gesetzt werden.</p>
  <ul class="colour">
    <li>Das <strong>Target SDK</strong> zeigt an, dass Sie Ihre Anwendung auf der hier angegebenen Version (bis einschließlich) getestet haben. Dies dient lediglich dazu, dem <span class="notranslate">Android</span> OS eine Vorstellung davon zu geben, wie es Ihre App im Hinblick auf die Betriebssystemfunktionen behandeln sollte. In der Praxis werden die meisten Anwendungen das Ziel-SDK auf die letzte freigegebene Version der API setzen (wie in der Einstellung "SDK kompilieren" verwendet). Dadurch wird sichergestellt, dass Ihre App auf den neuesten Geräten von <span class="notranslate">Android</span> so gut wie möglich aussieht. Beachten Sie, dass Google ab November 2019 API-Level 28 zum erforderlichen Ziel macht.</li>
    <li>Die <strong>Mindest-SDK-Version</strong> ist die minimale API-Stufe, mit der Ihr Projekt ausgeführt werden kann. Ab November 2019 hat Google API-Level 16 als absolutes Minimum festgelegt. Wenn Sie jedoch Erweiterungen hinzufügen, können diese einen höheren Mindest-API-Level erfordern.</li>
    <li>Die <strong>Kompilier-SDK-Version</strong> ist die Version der API, mit der das Projekt kompiliert wird. Das bedeutet, dass Sie <span class="notranslate">Android</span> API-Funktionen verwenden können, die in dieser Version der API enthalten sind. Wenn Sie z. B. versuchen, API 16-Funktionen zu verwenden, aber Compile SDK 15 einstellen, erhalten Sie einen Kompilierungsfehler. Wenn Sie jedoch den Kompilier-SDK auf 28 einstellen, können Sie die Anwendung trotzdem auf einem API 26-Gerät (und auch auf allen anderen früheren Versionen) ausführen.</li>
  </ul>
  <p>Sie können eine der vordefinierten Zieleinstellungen auswählen, indem Sie auf die Schaltfläche <strong>SDK-Werte</strong> für die gewählte API-Ebene <strong>vorfüllen</strong> klicken. Wenn Sie eine davon auswählen, werden alle SDK-Dateien mit den entsprechenden Werten gefüllt, die Sie dann verwenden oder nach Bedarf bearbeiten können.</p>
  <p class="note"><strong>HINWEIS</strong>: Sie müssen die entsprechenden APIs im <span class="notranslate">Android</span> SDK Manager oder über <span class="notranslate">Android</span> Studio installiert haben, damit Ihre Projekte korrekt kompiliert werden können.</p>
  <p><img alt="General Android Game Options 1" class="center" src="../../assets/Images/Settings/Android_General1_Options.png" /></p>
  <p>Der zweite Teil des Abschnitts " <strong>Allgemein"</strong> behandelt die CPU-Architekturen, für die gebaut werden soll, wobei die folgenden Optionen zur Verfügung stehen (Sie können alle oder nur die von Ihnen benötigten auswählen, aber beachten Sie, dass jede von ihnen die endgültige Größe der kompilierten apk erhöht):</p>
  <ul class="Disc">
    <li>Build für ARMV5 (standardmäßig aktiviert)</li>
    <li>Build für ARMV7 (standardmäßig aktiviert)</li>
    <li>Build für x86 (standardmäßig aktiviert)</li>
    <li>Build for Mips (standardmäßig aktiviert)</li>
    <li>Bauen für ARM64</li>
    <li>Erstellung für x86_64</li>
  </ul>
  <p>Nach der Einrichtung können Sie die verschiedenen Ausrichtungen auswählen, in denen Ihr Spiel ausgeführt werden kann, um das beste Benutzererlebnis zu erzielen. Die verfügbaren Optionen sind:</p>
  <ul class="Disc">
    <li>Porträt</li>
    <li>Hochformatig gespiegelt</li>
    <li>Landschaft</li>
    <li>Landschaftlich gewendet</li>
  </ul>
  <p>Schließlich haben Sie die folgenden verschiedenen Optionen:</p>
  <ul class="colour">
    <li><strong>Aktivieren Sie die Bluetooth/iCade-Unterstützung</strong>: Damit wird die Unterstützung für Bluetooth- oder iCade-Gamepads zu Ihrem Spielprojekt hinzugefügt. Diese Option ist standardmäßig aktiviert.</li>
    <li><strong>Lint <span class="notranslate">Code</span> Analyse ausführen</strong>: Wenn diese Option aktiviert ist, führen die Build-Tools während der Kompilierung eine Lint-Analyse <span class="notranslate">code</span> des Projekts durch, die eine gründlichere Fehlerprüfung ermöglicht und mehr Informationen im Ausgabefenster anzeigt, während das Projekt kompiliert wird (es wird auch eine LOG-Datei erstellt, deren Pfad am Ende der Kompilierung im <a href="../../Introduction/The_Output_Window.htm">Ausgabefenster</a> angezeigt wird). Beachten Sie, dass nicht alles, was von der Lint-Analyse als Fehler markiert wird, zwangsläufig problematisch für Ihr Spiel ist, und dass die Aktivierung dieser Option dazu führen kann, dass Ihr Spiel nicht mehr kompiliert wird, obwohl es, wenn sie deaktiviert ist, problemlos kompiliert und läuft. Im Wesentlichen gilt dies nur für <span class="notranslate">debugging</span>, und die Option ist standardmäßig deaktiviert.</li>
    <li><strong>Installationsort</strong>: Hier können Sie den Standardinstallationsort für Ihr Spiel festlegen. Dies kann entweder auf " <strong>Automatisch"</strong> eingestellt werden, in diesem Fall wird das Spiel an dem Ort installiert, den der Benutzer auf seinem Gerät ausgewählt hat, oder es kann auf " <strong>Bevorzugt extern"</strong> eingestellt werden, dann wird immer versucht, das Spiel auf dem externen Speicher des Geräts zu installieren.</li>
  </ul>
  <p>Sie können hier auch den <strong>Android-Schlafabstand</strong> einstellen. Diese Option bezieht sich auf die Reduzierung von Stottern, wenn Ihr Spiel auf bestimmten Systemen läuft. Wenn das Spiel schneller läuft als die Raumgeschwindigkeit, &quot;schläft&quot; <span data-keyref="GameMaker Name">GameMaker</span> für die verbleibende Zeit. Dieser Schlafmodus kann jedoch sehr ungenau sein und man schläft oft länger als nötig, was dazu führt, dass das Bild länger braucht, was wiederum Stottern verursacht. Um dies zu umgehen, können wir den Ruhezustand kürzer halten und dann für den Rest der Zeit auf <span class="notranslate">loop</span> bleiben, um die Genauigkeit zu erhöhen. Das Problem bei <span class="notranslate">loop</span> ist jedoch, dass die CPU-Auslastung steigt, was wiederum zu einem Anstieg der CPU-Temperatur und einem höheren Akkuverbrauch führen kann. Standardmäßig ist dieser Wert auf 4 eingestellt, und in 99,99 % der Fälle werden Sie damit zurechtkommen. Für Low-End-Geräte oder Geräte, auf denen viele Hintergrundprozesse laufen, ist dies jedoch möglicherweise keine ideale Lösung und ein Wert von 5 bis 10 kann erforderlich sein. Beachten Sie jedoch, dass es sich hierbei um eine sehr gerätespezifische Konfiguration handelt und dass das, was auf Ihrem Gerät funktioniert, für einen anderen Benutzer möglicherweise nicht geeignet ist. Daher sollten Sie im Zweifelsfall die Einstellung auf 4 belassen.</p>
  <p> </p>
  <h2>Adaptive Ikonen</h2>
  <p><img>Mit Android 8.0 (API-Ebene 26) wurden <strong>adaptive Launcher-Symbole</strong> für Ihre Spiele eingeführt, und diese Symbole können auf verschiedenen Gerätemodellen eine Vielzahl von Formen anzeigen. Um dies zu erreichen, müssen Sie eine Reihe von Vordergrund- und Hintergrundbildern bereitstellen, damit Ihre Symbole in verschiedenen Größen angezeigt werden können. Diese Symbolgrößen sind:</p>
  <ul class="Disc">
    <li>81x81 Pixel (LDPI)</li>
    <li>108x108 Pixel MDPI)</li>
    <li>162x162 Pixel (HDPI)</li>
    <li>216x216 Pixel (XHDPI)</li>
    <li>324x324 Pixel (XXHDPI)</li>
    <li>432x432 Pixel (XXXHDPI)</li>
  </ul>
  <p>Sie können jedes Vorder- und Hintergrundbild einzeln bereitstellen, oder Sie können die Option Symbole aus einer Datei generieren wählen. Dies bedeutet, dass <span data-keyref="GameMaker Name">GameMaker</span> die erforderlichen Symbolbilder aus einer Basisdatei (XXXHDPI) generiert. Sie müssen jeweils ein Bild für den Vorder- und Hintergrund angeben und dann auf die Schaltfläche "Generieren" klicken, damit die Icons für Sie erstellt werden. Die Bilder sollten alle im Format <span class="inline">*.png</span> vorliegen.</p>
  <p>Es ist wichtig zu wissen, dass Ihre adaptiven Symbole auf jedem Gerät maskiert sein können. Daher haben Sie auch die Möglichkeit, im Menü <strong>Vorschau adaptiver Symbole</strong> zu sehen, wie sie mit diesen Masken aussehen werden:</p>
  <p><img>Beachten Sie, dass dies lediglich eine Vorschau darauf ist, wie das Symbol mit der ausgewählten Maske aussehen <em>könnte </em>. Die Einstellung hat keinen Einfluss darauf, wie die Symbole exportiert und angezeigt werden, da dies vom Gerät und Betriebssystem abhängt, auf dem das Spiel ausgeführt wird. Beachten Sie auch, dass diese Symbole <strong>nicht</strong> im Rahmen der Bilderzeugung mit dem <a href="../../IDE_Tools/Project_Image_Generator.htm">Projektbildgenerator</a> für Sie erstellt werden.</p>
  <p> </p>
  <h2>Grafiken</h2>
  <p><img>Hier können Sie die folgenden Details in Bezug auf die Anzeige Ihres Spiels ändern, wobei folgende Optionen zur Verfügung stehen:</p>
  <ul class="colour">
    <li><strong>Interpoliert die Farben zwischen den Pixeln</strong>: Schaltet die <a class="glossterm" data-glossterm="lineare Interpolation">lineare Interpolation</a> ein, die im Grunde die Pixel &quot;glättet&quot;. Für scharfe Pixelgrafiken sollte sie ausgeschaltet sein, aber wenn Sie schöne Alphamischungen und geglättete Kanten haben, ist es besser, sie eingeschaltet zu lassen. Diese Option ist standardmäßig aktiviert.</li>
    <li><strong>Bildschirm-Farbtiefe</strong>: Hier kann die Farbtiefe für das Rendering entweder auf 16bit oder 24bit eingestellt werden. Dies beeinträchtigt die Kompatibilität mit einigen älteren Geräten, wenn es auf 24bit eingestellt ist, und erhöht auch das benötigte <em>Ashmem </em>(dies ist der gemeinsame Speicher auf AmazonFire-Geräten).</li>
    <li><strong>Geräteunterstützung</strong>: Mit dieser Option wird festgelegt, ob nur Geräte mit einem dedizierten Grafikprozessor oder alle Geräte unterstützt werden sollen. Wenn Ihr Spiel fortgeschrittene Zeichenfunktionen wie Alpha-Blending, additives Blending, Oberflächen usw. enthält, sollten Sie es auf Geräte mit einem Grafikprozessor beschränken, da Sie sonst Gefahr laufen, aufgrund von Grafikfehlern oder Abstürzen auf älteren Geräten negative Kommentare und schlechte Bewertungen für Ihr Spiel zu erhalten.</li>
    <li><strong>Skalieren</strong>: Hier können Sie auswählen, ob die Zeichenfläche unter Beibehaltung des Seitenverhältnisses auf dem Gerätebildschirm skaliert werden soll - wobei die Ränder an den Bildschirm angepasst werden - oder ob die Zeichenfläche an den Gerätebildschirm angepasst werden soll.</li>
  </ul>
  <p>Schließlich gibt es noch die Möglichkeit, die Größe der <a class="glossterm" data-glossterm="Textur-Seite" href="macOS.htm#">Texturseite</a> festzulegen. Die Standardgröße (und die kompatibelste) ist 2048x2048, aber Sie können eine Größe zwischen 256x256 und 8192x8192 wählen. Es gibt auch eine Schaltfläche mit der Bezeichnung <strong>Vorschau </strong>, die die Texturseiten für diese <span class="notranslate">platform</span> generiert und dann ein Fenster öffnet, in dem Sie sehen können, wie sie aussehen. Dies kann sehr nützlich sein, wenn Sie sehen möchten, wie die Texturseiten aufgebaut sind, und um zu verhindern, dass die Texturseiten größer (oder kleiner) als nötig sind. Weitere Informationen über Texturseiten finden Sie <a href="../Texture_Information/Texture_Pages.htm">hier</a>.</p>
  <p class="note"><strong>HINWEIS</strong>: Je größer die Texturseite ist, desto weniger kompatibel ist Ihr Spiel mit verschiedenen Browsern und Geräten.</p>
  <p> </p>
  <h2>Icons</h2>
  <p><img>In diesem Abschnitt können Sie die verschiedenen <strong>Icon-Bilder </strong>hinzufügen, die Ihr Projekt für die verschiedenen Shopseiten und Geräte benötigt. Alle Icon-Bilder sollten als 24bit <span class="inline">*.png</span> Dateien in den entsprechenden Größen erstellt werden.</p>
  <p>Es ist erwähnenswert, dass <span data-keyref="GameMaker Name">GameMaker</span> ein <a href="../../IDE_Tools/Project_Image_Generator.htm">Projektbild-Generator-Tool</a> hat, das verwendet werden kann, um automatisch alle Bilder zu erstellen, die für die verschiedenen Ziele benötigt werden, für die Ihr Spiel kompiliert wird: <span class="notranslate">platforms</span>. Wenn Sie dieses Tool verwenden, sollten Sie die erstellten Bilder überprüfen, um sicherzustellen, dass sie Ihren Anforderungen entsprechen. Das Tool generiert sowohl Icons als auch Bilder (siehe den folgenden Abschnitt).</p>
  <p> </p>
  <h2>Bilder</h2>
  <p><img>Hier können Sie die <strong>Farbe des Rahmens</strong> festlegen, der als Hintergrund für Splash-Screens verwendet wird, die nicht den gesamten Bildschirm ausfüllen sollen. Sie können Ihrer endgültigen Spieldatei sowohl im <em>Hoch- </em>als auch im <em>Querformat </em> <strong>Splash Screens</strong> hinzufügen, die angezeigt werden, während das Spiel auf dem Gerät geladen wird. Bei diesem Bildschirm sollte es sich um eine 24-Bit-Datei ( <span class="inline">*.png</span> ) handeln, und es wird empfohlen, dass er die gleiche Größe wie der erste Raum (oder die erste Ansicht) des Spiels hat. Wenn Sie möchten, dass der Begrüßungsbildschirm für eine bestimmte Zeit angezeigt wird, können Sie hier eine Zeitspanne von 0 bis 10 Sekunden einstellen (die Standardzeit von 0 bedeutet, dass er nur für die Dauer des Ladens des Assets angezeigt wird). Sie können auch einstellen, wie der Begrüßungsbildschirm angezeigt werden soll, indem Sie die folgenden Optionen wählen:</p>
  <ul class="colour">
    <li><strong>Seitenverhältnis beibehalten</strong>: Das Seitenverhältnis des Bildes wird im Vergleich zum Bildschirm des Geräts beibehalten, wobei die Ränder bei Bedarf &quot;aufgefüllt&quot; werden.</li>
    <li><strong>Zuschneiden</strong>: Damit wird das Bild 1:1 mit dem Bildschirm des Geräts übereinstimmen und die Ränder werden nach Bedarf zugeschnitten (oder aufgefüllt).</li>
    <li><strong>Strecken</strong>: Damit wird das Bild so gestreckt, dass es den Bildschirm des Geräts ausfüllt (was zu einer Verzerrung des angezeigten Bildes führen kann).</li>
  </ul>
  <p>Schließlich können Sie das <strong>Banner-Bild</strong> für das Spiel auf <span class="notranslate">Android</span> TV-Geräte, die auch eine 24bit <span class="inline">*.png</span>.</p>
  <p> </p>
  <h2>Verpackung</h2>
  <p><img alt="Android General Options Part 2" class="center" src="../../assets/Images/Settings/Android_General2_Options.png" /></p>
  <p>Eines der Merkmale der Nutzung von Google Play für Ihre <span class="notranslate">Android</span> Spiele ist die Möglichkeit, Ihre Spiele <strong>zu lizenzieren </strong>. Das bedeutet, dass Ihre Spiele von Google kontrolliert werden, so dass nur Personen, die sie über den Google-Markt heruntergeladen haben, das Spiel spielen können, wodurch verhindert wird, dass illegale Kopien Ihres Produkts verbreitet werden.</p>
  <p>Um diese Funktion in Ihrem Spiel zu aktivieren, müssen Sie Ihren <strong>öffentlichen Schlüssel</strong> in das Feld mit der Bezeichnung <strong>Google Licencing Public Key</strong> kopieren. Diese Lizenz finden Sie, indem Sie auf Ihre <a href="https://play.google.com/apps/publish">Google Play Developers-Seite</a> gehen und dann das Spiel auswählen, das Sie bearbeiten möchten. Auf der Profilseite des Spiels scrollen Sie zum Abschnitt &quot;<em>Services &amp; APIs</em>&quot;. Dort finden Sie den öffentlichen Schlüssel, der für die Aktivierung dieser Funktion erforderlich ist.</p>
  <p>Wenn nach der Aktivierung jemand, der nicht berechtigt ist, Ihr Spiel zu besitzen, versucht, es zu spielen, wird eine Pop-up-Meldung angezeigt, die besagt, dass die Lizenz auf dem Gerät nicht gefunden werden kann, und dann die Möglichkeit bietet, den Test zu wiederholen oder das Spiel zu beenden.</p>
  <p>Ein weiteres Merkmal der Lizenzierung ist, dass Ihr Spiel <strong>APK-Erweiterungen</strong> verwenden kann. Dies ist eine Möglichkeit, die von Google Play (und nur von Google Play) auferlegte maximale Anwendungsgröße von 50 MB zu umgehen. Dabei wird Ihr Spiel in zwei Teilen erstellt: eine kleine Datei <span class="inline">*.apk</span> und eine größere Datei <span class="inline">*.zip</span>, die alle Spielinhalte enthält. Beide Dateien werden in den Store hochgeladen. Wenn der Nutzer Ihr Spiel zum ersten Mal startet, wird die Zip-Datei heruntergeladen und entpackt. Weitere Einzelheiten zu dieser Option finden Sie <a href="https://help.yoyogames.com/hc/en-us/articles/115002418632-Android-Using-APK-Expansions-With-Google-Play">hier</a>.</p>
  <p>Sie können auch Google Dynamic Asset Delivery verwenden, um App-Pakete mit einer Größe von bis zu 1 GB zu erstellen, wenn Sie die Exportoption <span class="inline">*.aab</span> verwenden. Dabei werden alle Spiel-Assets als &quot;Installationszeit&quot;-Assets verpackt, die zusammen mit der App selbst installiert werden. Weitere Einzelheiten zu dieser Funktion finden Sie <a href="https://developer.android.com/guide/playcore/asset-delivery" title="Asset Delivery">hier</a>.</p>
  <p>Schließlich haben Sie die Möglichkeit, das endgültige App-Paket als <strong>Android-TV-Spiel</strong> vorzubereiten (Sie sollten dies nur ankreuzen, wenn Ihr Spiel den <a href="https://developer.android.com/training/tv/games/">Android-TV-Richtlinien</a> entspricht).</p>
  <p> </p>
  <h2>Berechtigungen</h2>
  <p><img>Auf dieser Registerkarte können Sie einige der Berechtigungen ändern, die Ihr Spiel im <span class="notranslate">Android</span> Manifest anfordern kann. <span data-keyref="GameMaker Name">GameMaker</span> weist die erforderlichen Berechtigungen automatisch zu, basierend auf den Funktionen, die das Spiel verwendet. Es kann jedoch vorkommen, dass Sie eine Berechtigung für Ihr Spiel benötigen, die nicht korrekt zugewiesen wurde (z. B. wenn Sie benutzerdefinierte Erweiterungen verwenden), in diesem Fall markieren Sie das entsprechende Berechtigungsfeld.</p>
  <p>Die nachstehende Liste gibt einen Überblick über die verfügbaren Berechtigungen:</p>
  <ul class="colour">
    <li><span class="inline">WRITE_EXTERNAL_STORAGE</span>: Ermöglicht es Ihrem Spiel, auf den externen Speicher zu schreiben.</li>
    <li><span class="inline">READ_PHONE_STATE</span>: Nur Lesezugriff auf den Telefonstatus zulassen.</li>
    <li><span class="inline">ACCESS_NETWORK_STATE</span>: Erlauben Sie Ihrem Spiel, auf Informationen über Netzwerke zuzugreifen.</li>
    <li><span class="inline">INTERNET</span>: Erlauben Sie Ihrem Spiel, Netzwerk-Sockets zu öffnen.</li>
    <li><span class="inline">BLUETOOTH</span>: Ermöglicht es Ihrem Spiel, sich mit gekoppelten Bluetooth-Geräten zu verbinden.</li>
    <li><span class="inline">RECORD_AUDIO</span>: Ermöglicht es Ihrem Spiel, den Ton des Mikrofons aufzunehmen.</li>
  </ul>
  <p class="note"><strong>HINWEIS</strong>: Wenn Sie sich nicht sicher sind, ob Sie diese Optionen benötigen, sollten Sie sie standardmäßig deaktiviert lassen und <span data-keyref="GameMaker Name">GameMaker</span> die Berechtigungen für Ihr Spiel verwalten lassen.</p>
  <p>Der Abschnitt <span class="notranslate">Android</span> Berechtigungen hat auch einen Bereich, in dem Sie den <strong>Android-Anwendungs-Tags</strong> in <span class="inline">Androidmanifest.xml</span> Berechtigungen zuweisen können. Eine vollständige Liste der verfügbaren Tags finden Sie in der Dokumentation von <span class="notranslate">Android</span> hier:</p>
  <ul class="colour">
    <li><a href="https://developer.android.com/guide/topics/manifest/application-element">Android-Entwickler: Anwendung Tags</a></li>
  </ul>
  <p>Es sei darauf hingewiesen, dass Sie ab Ziel-API 28 keine externen Webaufrufe mit &quot;<span class="inline">http</span>&quot; mehr verwenden dürfen - stattdessen ist &quot;<span class="inline">https</span>&quot; erforderlich - es sei denn, Sie fügen den folgenden Tag hinzu:</p>
  <p class="code">android:usesCleartextTraffic=&quot;true&quot;</p>
  <p> </p>
  <h2>Soziales</h2>
  <p><img>In diesem Abschnitt können Sie verschiedene <strong>soziale </strong>Funktionen in Ihrem <span class="notranslate">Android</span> Spiel aktivieren. Die folgenden Optionen können ausgewählt werden:</p>
  <ul class="colour">
    <li><strong>Google - </strong> <strong>Cloud-Sparen aktivieren</strong>: Wenn Sie dies markieren, wird Google Cloud Saving aktiviert und Sie werden aufgefordert, die entsprechende Erweiterung vom <a href="../../Introduction/The_Marketplace.htm">Marketplace</a> herunterzuladen und zu installieren. Siehe den Abschnitt über Cloud Saving auf der Seite <a href="../../GameMaker_Language/GML_Reference/Asynchronous_Functions/Asynchronous_Functions.htm">Asynchrone Funktionen</a>.</li>
    <li><strong>Google - Google Dienste ID</strong>: Hier können Sie die Google Services ID Ihrer App eingeben.</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Game_Options.htm">Spiel-Optionen</a></div>
        <div style="float:right">Weiter: <a href="iOS.htm">iOS</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Android Game Options
-->
  <!-- TAGS
android_options
-->
</body>
</html>